FreeRADIUS Version 3.0.26
Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License
For more information about these matters, see the file named COPYRIGHT
Starting - reading configuration files ...
including dictionary file /usr/share/freeradius/dictionary
including dictionary file /usr/share/freeradius/dictionary.dhcp
including dictionary file /usr/share/freeradius/dictionary.vqp
including dictionary file /etc/freeradius/3.0/dictionary
including configuration file /etc/freeradius/3.0/radiusd.conf
including configuration file /etc/freeradius/3.0/proxy.conf
including configuration file /etc/freeradius/3.0/clients.conf
including files in directory /etc/freeradius/3.0/mods-enabled/
including configuration file /etc/freeradius/3.0/mods-enabled/realm
including configuration file /etc/freeradius/3.0/mods-enabled/utf8
including configuration file /etc/freeradius/3.0/mods-enabled/mschap
including configuration file /etc/freeradius/3.0/mods-enabled/preprocess
including configuration file /etc/freeradius/3.0/mods-enabled/chap
including configuration file /etc/freeradius/3.0/mods-enabled/pap
including configuration file /etc/freeradius/3.0/mods-enabled/linelog
including configuration file /etc/freeradius/3.0/mods-enabled/sradutmp
including configuration file /etc/freeradius/3.0/mods-enabled/always
including configuration file /etc/freeradius/3.0/mods-enabled/unix
including configuration file /etc/freeradius/3.0/mods-enabled/detail.log
including configuration file /etc/freeradius/3.0/mods-enabled/radutmp
including configuration file /etc/freeradius/3.0/mods-enabled/echo
including configuration file /etc/freeradius/3.0/mods-enabled/exec
including configuration file /etc/freeradius/3.0/mods-enabled/logintime
including configuration file /etc/freeradius/3.0/mods-enabled/replicate
including configuration file /etc/freeradius/3.0/mods-enabled/ntlm_auth
including configuration file /etc/freeradius/3.0/mods-enabled/unpack
including configuration file /etc/freeradius/3.0/mods-enabled/digest
including configuration file /etc/freeradius/3.0/mods-enabled/expr
including configuration file /etc/freeradius/3.0/mods-enabled/expiration
including configuration file /etc/freeradius/3.0/mods-enabled/attr_filter
including configuration file /etc/freeradius/3.0/mods-enabled/detail
including configuration file /etc/freeradius/3.0/mods-enabled/passwd
including configuration file /etc/freeradius/3.0/mods-enabled/files
including configuration file /etc/freeradius/3.0/mods-enabled/dynamic_clients
including configuration file /etc/freeradius/3.0/mods-enabled/eap
including configuration file /etc/freeradius/3.0/mods-enabled/cache_eap
including configuration file /etc/freeradius/3.0/mods-enabled/soh
including files in directory /etc/freeradius/3.0/policy.d/
including configuration file /etc/freeradius/3.0/policy.d/abfab-tr
including configuration file /etc/freeradius/3.0/policy.d/cui
including configuration file /etc/freeradius/3.0/policy.d/canonicalization
including configuration file /etc/freeradius/3.0/policy.d/debug
including configuration file /etc/freeradius/3.0/policy.d/rfc7542
including configuration file /etc/freeradius/3.0/policy.d/control
including configuration file /etc/freeradius/3.0/policy.d/operator-name
including configuration file /etc/freeradius/3.0/policy.d/moonshot-targeted-ids
including configuration file /etc/freeradius/3.0/policy.d/dhcp
including configuration file /etc/freeradius/3.0/policy.d/eap
including configuration file /etc/freeradius/3.0/policy.d/filter
including configuration file /etc/freeradius/3.0/policy.d/accounting
including files in directory /etc/freeradius/3.0/sites-enabled/
including configuration file /etc/freeradius/3.0/sites-enabled/default
including configuration file /etc/freeradius/3.0/sites-enabled/inner-tunnel
main {
 security {
 	user = "freerad"
 	group = "freerad"
 	allow_core_dumps = no
 }
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
}
main {
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
	libdir = "/usr/lib/freeradius"
	radacctdir = "/var/log/freeradius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 16384
	postauth_client_lost = no
	pidfile = "/var/run/freeradius/freeradius.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
 	stripped_names = no
 	auth = no
 	auth_badpass = no
 	auth_goodpass = no
 	colourise = yes
 	msg_denied = "You are already logged in - access denied"
 }
 resources {
 }
 security {
 	max_attributes = 200
 	reject_delay = 1.000000
 	status_server = yes
 	require_message_authenticator = "auto"
 	limit_proxy_state = "auto"
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
 	retry_delay = 5
 	retry_count = 3
 	default_fallback = no
 	dead_time = 120
 	wake_all_if_all_dead = no
 }
 home_server localhost {
 	ipaddr = 127.0.0.1
 	port = 1812
 	type = "auth"
 	secret = <<< secret >>>
 	response_window = 20.000000
 	response_timeouts = 1
 	max_outstanding = 65536
 	zombie_period = 40
 	status_check = "status-server"
 	ping_interval = 30
 	check_interval = 30
 	check_timeout = 4
 	num_answers_to_alive = 3
 	revive_interval = 120
  limit {
  	max_connections = 16
  	max_requests = 0
  	lifetime = 0
  	idle_timeout = 0
  }
  coa {
  	irt = 2
  	mrt = 16
  	mrc = 5
  	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
 	ipaddr = 127.0.0.1
 	secret = <<< secret >>>
 	nas_type = "other"
 	proto = "*"
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
 client localhost_ipv6 {
 	ipv6addr = ::1
 	secret = <<< secret >>>
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
 client UE {
 	ipaddr = 10.45.0.2
 	secret = <<< secret >>>
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
Debugger not attached
systemd watchdog is disabled
 # Creating Auth-Type = mschap
 # Creating Auth-Type = digest
 # Creating Auth-Type = eap
 # Creating Auth-Type = PAP
 # Creating Auth-Type = CHAP
 # Creating Auth-Type = MS-CHAP
 # Creating Autz-Type = New-TLS-Connection
radiusd: #### Instantiating modules ####
 modules {
  # Loaded module rlm_realm
  # Loading module "IPASS" from file /etc/freeradius/3.0/mods-enabled/realm
  realm IPASS {
  	format = "prefix"
  	delimiter = "/"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "suffix" from file /etc/freeradius/3.0/mods-enabled/realm
  realm suffix {
  	format = "suffix"
  	delimiter = "@"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "bangpath" from file /etc/freeradius/3.0/mods-enabled/realm
  realm bangpath {
  	format = "prefix"
  	delimiter = "!"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "realmpercent" from file /etc/freeradius/3.0/mods-enabled/realm
  realm realmpercent {
  	format = "suffix"
  	delimiter = "%"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "ntdomain" from file /etc/freeradius/3.0/mods-enabled/realm
  realm ntdomain {
  	format = "prefix"
  	delimiter = "\\"
  	ignore_default = no
  	ignore_null = no
  }
  # Loaded module rlm_utf8
  # Loading module "utf8" from file /etc/freeradius/3.0/mods-enabled/utf8
  # Loaded module rlm_mschap
  # Loading module "mschap" from file /etc/freeradius/3.0/mods-enabled/mschap
  mschap {
  	use_mppe = yes
  	require_encryption = no
  	require_strong = no
  	with_ntdomain_hack = yes
   passchange {
   }
  	allow_retry = yes
  	winbind_retry_with_normalised_username = no
  }
  # Loaded module rlm_preprocess
  # Loading module "preprocess" from file /etc/freeradius/3.0/mods-enabled/preprocess
  preprocess {
  	huntgroups = "/etc/freeradius/3.0/mods-config/preprocess/huntgroups"
  	hints = "/etc/freeradius/3.0/mods-config/preprocess/hints"
  	with_ascend_hack = no
  	ascend_channels_per_line = 23
  	with_ntdomain_hack = no
  	with_specialix_jetstream_hack = no
  	with_cisco_vsa_hack = no
  	with_alvarion_vsa_hack = no
  }
  # Loaded module rlm_chap
  # Loading module "chap" from file /etc/freeradius/3.0/mods-enabled/chap
  # Loaded module rlm_pap
  # Loading module "pap" from file /etc/freeradius/3.0/mods-enabled/pap
  pap {
  	normalise = yes
  }
  # Loaded module rlm_linelog
  # Loading module "linelog" from file /etc/freeradius/3.0/mods-enabled/linelog
  linelog {
  	filename = "/var/log/freeradius/linelog"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = "This is a log message for %{User-Name}"
  	reference = "messages.%{%{reply:Packet-Type}:-default}"
  }
  # Loading module "log_accounting" from file /etc/freeradius/3.0/mods-enabled/linelog
  linelog log_accounting {
  	filename = "/var/log/freeradius/linelog-accounting"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = ""
  	reference = "Accounting-Request.%{%{Acct-Status-Type}:-unknown}"
  }
  # Loaded module rlm_radutmp
  # Loading module "sradutmp" from file /etc/freeradius/3.0/mods-enabled/sradutmp
  radutmp sradutmp {
  	filename = "/var/log/freeradius/sradutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 420
  	caller_id = no
  }
  # Loaded module rlm_always
  # Loading module "reject" from file /etc/freeradius/3.0/mods-enabled/always
  always reject {
  	rcode = "reject"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "fail" from file /etc/freeradius/3.0/mods-enabled/always
  always fail {
  	rcode = "fail"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "ok" from file /etc/freeradius/3.0/mods-enabled/always
  always ok {
  	rcode = "ok"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "handled" from file /etc/freeradius/3.0/mods-enabled/always
  always handled {
  	rcode = "handled"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "invalid" from file /etc/freeradius/3.0/mods-enabled/always
  always invalid {
  	rcode = "invalid"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "userlock" from file /etc/freeradius/3.0/mods-enabled/always
  always userlock {
  	rcode = "userlock"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "notfound" from file /etc/freeradius/3.0/mods-enabled/always
  always notfound {
  	rcode = "notfound"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "noop" from file /etc/freeradius/3.0/mods-enabled/always
  always noop {
  	rcode = "noop"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "updated" from file /etc/freeradius/3.0/mods-enabled/always
  always updated {
  	rcode = "updated"
  	simulcount = 0
  	mpp = no
  }
  # Loaded module rlm_unix
  # Loading module "unix" from file /etc/freeradius/3.0/mods-enabled/unix
  unix {
  	radwtmp = "/var/log/freeradius/radwtmp"
  }
Creating attribute Unix-Group
  # Loaded module rlm_detail
  # Loading module "auth_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  detail auth_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "reply_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  detail reply_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "pre_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  detail pre_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/pre-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "post_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  detail post_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/post-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "radutmp" from file /etc/freeradius/3.0/mods-enabled/radutmp
  radutmp {
  	filename = "/var/log/freeradius/radutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 384
  	caller_id = yes
  }
  # Loaded module rlm_exec
  # Loading module "echo" from file /etc/freeradius/3.0/mods-enabled/echo
  exec echo {
  	wait = yes
  	program = "/bin/echo %{User-Name}"
  	input_pairs = "request"
  	output_pairs = "reply"
  	shell_escape = yes
  }
  # Loading module "exec" from file /etc/freeradius/3.0/mods-enabled/exec
  exec {
  	wait = no
  	input_pairs = "request"
  	shell_escape = yes
  	timeout = 10
  }
  # Loaded module rlm_logintime
  # Loading module "logintime" from file /etc/freeradius/3.0/mods-enabled/logintime
  logintime {
  	minimum_timeout = 60
  }
  # Loaded module rlm_replicate
  # Loading module "replicate" from file /etc/freeradius/3.0/mods-enabled/replicate
  # Loading module "ntlm_auth" from file /etc/freeradius/3.0/mods-enabled/ntlm_auth
  exec ntlm_auth {
  	wait = yes
  	program = "/path/to/ntlm_auth --request-nt-key --domain=MYDOMAIN --username=%{mschap:User-Name} --password=%{User-Password}"
  	shell_escape = yes
  }
  # Loaded module rlm_unpack
  # Loading module "unpack" from file /etc/freeradius/3.0/mods-enabled/unpack
  # Loaded module rlm_digest
  # Loading module "digest" from file /etc/freeradius/3.0/mods-enabled/digest
  # Loaded module rlm_expr
  # Loading module "expr" from file /etc/freeradius/3.0/mods-enabled/expr
  expr {
  	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /äéöüàâæçèéêëîïôœùûüaÿÄÉÖÜßÀÂÆÇÈÉÊËÎÏÔŒÙÛÜŸ"
  }
  # Loaded module rlm_expiration
  # Loading module "expiration" from file /etc/freeradius/3.0/mods-enabled/expiration
  # Loaded module rlm_attr_filter
  # Loading module "attr_filter.post-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.post-proxy {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/post-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.pre-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.pre-proxy {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/pre-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_reject" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.access_reject {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/access_reject"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_challenge" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.access_challenge {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/access_challenge"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.accounting_response" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.accounting_response {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/accounting_response"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.coa" from file /etc/freeradius/3.0/mods-enabled/attr_filter
  attr_filter attr_filter.coa {
  	filename = "/etc/freeradius/3.0/mods-config/attr_filter/coa"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "detail" from file /etc/freeradius/3.0/mods-enabled/detail
  detail {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_passwd
  # Loading module "etc_passwd" from file /etc/freeradius/3.0/mods-enabled/passwd
  passwd etc_passwd {
  	filename = "/etc/passwd"
  	format = "*User-Name:Crypt-Password:"
  	delimiter = ":"
  	ignore_nislike = no
  	ignore_empty = yes
  	allow_multiple_keys = no
  	hash_size = 100
  }
  # Loaded module rlm_files
  # Loading module "files" from file /etc/freeradius/3.0/mods-enabled/files
  files {
  	filename = "/etc/freeradius/3.0/mods-config/files/authorize"
  	acctusersfile = "/etc/freeradius/3.0/mods-config/files/accounting"
  	preproxy_usersfile = "/etc/freeradius/3.0/mods-config/files/pre-proxy"
  }
  # Loaded module rlm_dynamic_clients
  # Loading module "dynamic_clients" from file /etc/freeradius/3.0/mods-enabled/dynamic_clients
  # Loaded module rlm_eap
  # Loading module "eap" from file /etc/freeradius/3.0/mods-enabled/eap
  eap {
  	default_eap_type = "tls"
  	timer_expire = 60
  	ignore_unknown_eap_types = no
  	cisco_accounting_username_bug = no
  	max_sessions = 16384
  }
  # Loaded module rlm_cache
  # Loading module "cache_eap" from file /etc/freeradius/3.0/mods-enabled/cache_eap
  cache cache_eap {
  	driver = "rlm_cache_rbtree"
  	key = "%{%{control:State}:-%{%{reply:State}:-%{State}}}"
  	ttl = 15
  	max_entries = 0
  	epoch = 0
  	add_stats = no
  }
  # Loaded module rlm_soh
  # Loading module "soh" from file /etc/freeradius/3.0/mods-enabled/soh
  soh {
  	dhcp = yes
  }
  instantiate {
  }
  # Instantiating module "IPASS" from file /etc/freeradius/3.0/mods-enabled/realm
  # Instantiating module "suffix" from file /etc/freeradius/3.0/mods-enabled/realm
  # Instantiating module "bangpath" from file /etc/freeradius/3.0/mods-enabled/realm
  # Instantiating module "realmpercent" from file /etc/freeradius/3.0/mods-enabled/realm
  # Instantiating module "ntdomain" from file /etc/freeradius/3.0/mods-enabled/realm
  # Instantiating module "mschap" from file /etc/freeradius/3.0/mods-enabled/mschap
rlm_mschap (mschap): using internal authentication
  # Instantiating module "preprocess" from file /etc/freeradius/3.0/mods-enabled/preprocess
reading pairlist file /etc/freeradius/3.0/mods-config/preprocess/huntgroups
reading pairlist file /etc/freeradius/3.0/mods-config/preprocess/hints
  # Instantiating module "pap" from file /etc/freeradius/3.0/mods-enabled/pap
  # Instantiating module "linelog" from file /etc/freeradius/3.0/mods-enabled/linelog
  # Instantiating module "log_accounting" from file /etc/freeradius/3.0/mods-enabled/linelog
  # Instantiating module "reject" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "fail" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "ok" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "handled" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "invalid" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "userlock" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "notfound" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "noop" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "updated" from file /etc/freeradius/3.0/mods-enabled/always
  # Instantiating module "auth_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
rlm_detail (auth_log): 'User-Password' suppressed, will not appear in detail output
  # Instantiating module "reply_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  # Instantiating module "pre_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  # Instantiating module "post_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
  # Instantiating module "logintime" from file /etc/freeradius/3.0/mods-enabled/logintime
  # Instantiating module "expiration" from file /etc/freeradius/3.0/mods-enabled/expiration
  # Instantiating module "attr_filter.post-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/post-proxy
  # Instantiating module "attr_filter.pre-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/pre-proxy
  # Instantiating module "attr_filter.access_reject" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/access_reject
  # Instantiating module "attr_filter.access_challenge" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/access_challenge
  # Instantiating module "attr_filter.accounting_response" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/accounting_response
  # Instantiating module "attr_filter.coa" from file /etc/freeradius/3.0/mods-enabled/attr_filter
reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/coa
  # Instantiating module "detail" from file /etc/freeradius/3.0/mods-enabled/detail
  # Instantiating module "etc_passwd" from file /etc/freeradius/3.0/mods-enabled/passwd
rlm_passwd: nfields: 3 keyfield 0(User-Name) listable: no
  # Instantiating module "files" from file /etc/freeradius/3.0/mods-enabled/files
reading pairlist file /etc/freeradius/3.0/mods-config/files/authorize
reading pairlist file /etc/freeradius/3.0/mods-config/files/accounting
reading pairlist file /etc/freeradius/3.0/mods-config/files/pre-proxy
  # Instantiating module "eap" from file /etc/freeradius/3.0/mods-enabled/eap
   # Linked to sub-module rlm_eap_md5
   # Linked to sub-module rlm_eap_gtc
   gtc {
   	challenge = "Password: "
   	auth_type = "PAP"
   }
   # Linked to sub-module rlm_eap_tls
   tls {
   	tls = "tls-common"
   }
   tls-config tls-common {
   	verify_depth = 0
   	ca_path = "/etc/freeradius/3.0/certs"
   	pem_file_type = yes
   	private_key_file = "/etc/freeradius/3.0/certs/server.key"
   	certificate_file = "/etc/freeradius/3.0/certs/server.pem"
   	ca_file = "/etc/freeradius/3.0/certs/ca.pem"
   	private_key_password = <<< secret >>>
   	fragment_size = 1024
   	include_length = yes
   	auto_chain = yes
   	check_crl = no
   	check_all_crl = no
   	ca_path_reload_interval = 0
   	cipher_list = "DEFAULT"
   	cipher_server_preference = no
   	reject_unknown_intermediate_ca = no
   	ecdh_curve = ""
   	tls_max_version = "1.2"
   	tls_min_version = "1.2"
    cache {
    	enable = no
    	lifetime = 24
    	max_entries = 255
    }
    verify {
    	skip_if_ocsp_ok = no
    }
    ocsp {
    	enable = no
    	override_cert_url = yes
    	url = "http://127.0.0.1/ocsp/"
    	use_nonce = yes
    	timeout = 0
    	softfail = no
    }
   }
   # Linked to sub-module rlm_eap_ttls
   ttls {
   	tls = "tls-common"
   	default_eap_type = "tls"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	virtual_server = "inner-tunnel"
   	include_length = yes
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_peap
   peap {
   	tls = "tls-common"
   	default_eap_type = "tls"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	proxy_tunneled_request_as_eap = yes
   	virtual_server = "inner-tunnel"
   	soh = no
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_mschapv2
   mschapv2 {
   	with_ntdomain_hack = no
   	send_error = no
   }
  # Instantiating module "cache_eap" from file /etc/freeradius/3.0/mods-enabled/cache_eap
rlm_cache (cache_eap): Driver rlm_cache_rbtree (module rlm_cache_rbtree) loaded and linked
 } # modules
radiusd: #### Loading Virtual Servers ####
server { # from file /etc/freeradius/3.0/radiusd.conf
} # server
server default { # from file /etc/freeradius/3.0/sites-enabled/default
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Ignoring "sql" (see raddb/mods-available/README.rst)
Ignoring "ldap" (see raddb/mods-available/README.rst)
Compiling Autz-Type New-TLS-Connection for attr Autz-Type
 # Loading preacct {...}
 # Loading accounting {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Compiling Post-Auth-Type Challenge for attr Post-Auth-Type
Compiling Post-Auth-Type Client-Lost for attr Post-Auth-Type
} # server default
server inner-tunnel { # from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
 # Loading session {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
 # Skipping contents of 'if' as it is always 'false' -- /etc/freeradius/3.0/sites-enabled/inner-tunnel:336
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
} # server inner-tunnel
radiusd: #### Opening IP addresses and Ports ####
listen {
  	type = "auth"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "auth"
  	ipaddr = 127.0.0.1
  	port = 18120
}
Listening on auth address * port 1812 bound to server default
Listening on acct address * port 1813 bound to server default
Listening on auth address :: port 1812 bound to server default
Listening on acct address :: port 1813 bound to server default
Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Listening on proxy address * port 38586
Listening on proxy address :: port 57503
Ready to process requests
(0) Received Access-Request Id 2 from 10.45.0.2:50371 to 10.45.0.1:1812 length 183
(0)   Message-Authenticator = 0xa6532cfac461864de9ede0d7eef60884
(0)   User-Name = "user@example.org"
(0)   NAS-IP-Address = 10.45.0.2
(0)   Called-Station-Id = "08-00-27-9D-42-72:"
(0)   NAS-Port-Type = Wireless-802.11
(0)   Service-Type = Framed-User
(0)   Calling-Station-Id = "08-00-27-B4-18-A9"
(0)   Connect-Info = "CONNECT 0Mbps 802.11b"
(0)   Acct-Session-Id = "C6AEF11EDC4023F4"
(0)   Framed-MTU = 1400
(0)   EAP-Message = 0x02da00150175736572406578616d706c652e6f7267
(0) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(0)   authorize {
(0)     policy filter_username {
(0)       if (&User-Name) {
(0)       if (&User-Name)  -> TRUE
(0)       if (&User-Name)  {
(0)         if (&User-Name =~ / /) {
(0)         if (&User-Name =~ / /)  -> FALSE
(0)         if (&User-Name =~ /@[^@]*@/ ) {
(0)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(0)         if (&User-Name =~ /\.\./ ) {
(0)         if (&User-Name =~ /\.\./ )  -> FALSE
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(0)         if (&User-Name =~ /\.$/)  {
(0)         if (&User-Name =~ /\.$/)   -> FALSE
(0)         if (&User-Name =~ /@\./)  {
(0)         if (&User-Name =~ /@\./)   -> FALSE
(0)       } # if (&User-Name)  = notfound
(0)     } # policy filter_username = notfound
(0)     [preprocess] = ok
(0)     [chap] = noop
(0)     [mschap] = noop
(0)     [digest] = noop
(0) suffix: Checking for suffix after "@"
(0) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(0) suffix: No such realm "example.org"
(0)     [suffix] = noop
(0) eap: Peer sent EAP Response (code 2) ID 218 length 21
(0) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(0)     [eap] = ok
(0)   } # authorize = ok
(0) Found Auth-Type = eap
(0) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(0)   authenticate {
(0) eap: Peer sent packet with method EAP Identity (1)
(0) eap: Calling submodule eap_tls to process data
(0) eap_tls: (TLS) Initiating new session
(0) eap_tls: (TLS) Setting verify mode to require certificate from client
(0) eap: Sending EAP Request (code 1) ID 219 length 6
(0) eap: EAP session adding &reply:State = 0x5c6432d55cbf3fd7
(0)     [eap] = handled
(0)   } # authenticate = handled
(0) Using Post-Auth-Type Challenge
(0) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(0)   Challenge { ... } # empty sub-section is ignored
(0) session-state: Saving cached attributes
(0)   Framed-MTU = 994
(0) Sent Access-Challenge Id 2 from 10.45.0.1:1812 to 10.45.0.2:50371 length 64
(0)   EAP-Message = 0x01db00060d20
(0)   Message-Authenticator = 0x00000000000000000000000000000000
(0)   State = 0x5c6432d55cbf3fd72179b26d243fe42a
(0) Finished request
Waking up in 4.9 seconds.
(1) Received Access-Request Id 3 from 10.45.0.2:50371 to 10.45.0.1:1812 length 370
(1)   Message-Authenticator = 0xf031064d87e4f79075053866aee4a345
(1)   User-Name = "user@example.org"
(1)   NAS-IP-Address = 10.45.0.2
(1)   Called-Station-Id = "08-00-27-9D-42-72:"
(1)   NAS-Port-Type = Wireless-802.11
(1)   Service-Type = Framed-User
(1)   Calling-Station-Id = "08-00-27-B4-18-A9"
(1)   Connect-Info = "CONNECT 0Mbps 802.11b"
(1)   Acct-Session-Id = "C6AEF11EDC4023F4"
(1)   Framed-MTU = 1400
(1)   EAP-Message = 0x02db00be0d0016030100b3010000af03037d73500c2eb9d2dfdb1c2a27c8c080825b0c27de801ba56c11017e8e7c1b4021000038c02cc030009fcca9cca8ccaac02bc02f009ec024c028006bc023c0270067c00ac0140039c009c0130033009d009c003d003c0035002f00ff0100004e000b000403000102000a000c000a001d0017001e001900180016000000170000000d002a0028040305030603080708080809080a080b080408050806040105010601030303010302040205020602
(1)   State = 0x5c6432d55cbf3fd72179b26d243fe42a
(1) Restoring &session-state
(1)   &session-state:Framed-MTU = 994
(1) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(1)   authorize {
(1)     policy filter_username {
(1)       if (&User-Name) {
(1)       if (&User-Name)  -> TRUE
(1)       if (&User-Name)  {
(1)         if (&User-Name =~ / /) {
(1)         if (&User-Name =~ / /)  -> FALSE
(1)         if (&User-Name =~ /@[^@]*@/ ) {
(1)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(1)         if (&User-Name =~ /\.\./ ) {
(1)         if (&User-Name =~ /\.\./ )  -> FALSE
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(1)         if (&User-Name =~ /\.$/)  {
(1)         if (&User-Name =~ /\.$/)   -> FALSE
(1)         if (&User-Name =~ /@\./)  {
(1)         if (&User-Name =~ /@\./)   -> FALSE
(1)       } # if (&User-Name)  = notfound
(1)     } # policy filter_username = notfound
(1)     [preprocess] = ok
(1)     [chap] = noop
(1)     [mschap] = noop
(1)     [digest] = noop
(1) suffix: Checking for suffix after "@"
(1) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(1) suffix: No such realm "example.org"
(1)     [suffix] = noop
(1) eap: Peer sent EAP Response (code 2) ID 219 length 190
(1) eap: No EAP Start, assuming it's an on-going EAP conversation
(1)     [eap] = updated
(1)     [files] = noop
(1)     [expiration] = noop
(1)     [logintime] = noop
(1)     [pap] = noop
(1)   } # authorize = updated
(1) Found Auth-Type = eap
(1) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(1)   authenticate {
(1) eap: Expiring EAP session with state 0x5c6432d55cbf3fd7
(1) eap: Finished EAP session with state 0x5c6432d55cbf3fd7
(1) eap: Previous EAP request found for state 0x5c6432d55cbf3fd7, released from the list
(1) eap: Peer sent packet with method EAP TLS (13)
(1) eap: Calling submodule eap_tls to process data
(1) eap_tls: (TLS) EAP Got final fragment (184 bytes)
(1) eap_tls: WARNING: (TLS) EAP Total received record fragments (184 bytes), does not equal expected expected data length (0 bytes)
(1) eap_tls: (TLS) EAP Done initial handshake
(1) eap_tls: (TLS) Handshake state - before SSL initialization
(1) eap_tls: (TLS) Handshake state - Server before SSL initialization
(1) eap_tls: (TLS) Handshake state - Server before SSL initialization
(1) eap_tls: (TLS) recv TLS 1.3 Handshake, ClientHello
(1) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read client hello
(1) eap_tls: (TLS) send TLS 1.2 Handshake, ServerHello
(1) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write server hello
(1) eap_tls: (TLS) send TLS 1.2 Handshake, Certificate
(1) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write certificate
(1) eap_tls: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(1) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(1) eap_tls: (TLS) send TLS 1.2 Handshake, CertificateRequest
(1) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write certificate request
(1) eap_tls: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(1) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write server done
(1) eap_tls: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(1) eap_tls: (TLS) In Handshake Phase
(1) eap: Sending EAP Request (code 1) ID 220 length 1004
(1) eap: EAP session adding &reply:State = 0x5c6432d55db83fd7
(1)     [eap] = handled
(1)   } # authenticate = handled
(1) Using Post-Auth-Type Challenge
(1) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(1)   Challenge { ... } # empty sub-section is ignored
(1) session-state: Saving cached attributes
(1)   Framed-MTU = 994
(1)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(1)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(1)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(1)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(1)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(1)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(1) Sent Access-Challenge Id 3 from 10.45.0.1:1812 to 10.45.0.2:50371 length 1068
(1)   EAP-Message = 0x01dc03ec0dc000000b97160303003d0200003903033c6ddc871169c8e30425fe9093eb1781768e63b314f612be05603398799e2ee900c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3235303533313134333234335a170d3235303733303134333234335a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(1)   Message-Authenticator = 0x00000000000000000000000000000000
(1)   State = 0x5c6432d55db83fd72179b26d243fe42a
(1) Finished request
Waking up in 4.9 seconds.
(2) Received Access-Request Id 4 from 10.45.0.2:50371 to 10.45.0.1:1812 length 186
(2)   Message-Authenticator = 0x86404af66598804b1c36186c88d028d9
(2)   User-Name = "user@example.org"
(2)   NAS-IP-Address = 10.45.0.2
(2)   Called-Station-Id = "08-00-27-9D-42-72:"
(2)   NAS-Port-Type = Wireless-802.11
(2)   Service-Type = Framed-User
(2)   Calling-Station-Id = "08-00-27-B4-18-A9"
(2)   Connect-Info = "CONNECT 0Mbps 802.11b"
(2)   Acct-Session-Id = "C6AEF11EDC4023F4"
(2)   Framed-MTU = 1400
(2)   EAP-Message = 0x02dc00060d00
(2)   State = 0x5c6432d55db83fd72179b26d243fe42a
(2) Restoring &session-state
(2)   &session-state:Framed-MTU = 994
(2)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(2)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(2)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(2)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(2)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(2) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(2)   authorize {
(2)     policy filter_username {
(2)       if (&User-Name) {
(2)       if (&User-Name)  -> TRUE
(2)       if (&User-Name)  {
(2)         if (&User-Name =~ / /) {
(2)         if (&User-Name =~ / /)  -> FALSE
(2)         if (&User-Name =~ /@[^@]*@/ ) {
(2)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(2)         if (&User-Name =~ /\.\./ ) {
(2)         if (&User-Name =~ /\.\./ )  -> FALSE
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(2)         if (&User-Name =~ /\.$/)  {
(2)         if (&User-Name =~ /\.$/)   -> FALSE
(2)         if (&User-Name =~ /@\./)  {
(2)         if (&User-Name =~ /@\./)   -> FALSE
(2)       } # if (&User-Name)  = notfound
(2)     } # policy filter_username = notfound
(2)     [preprocess] = ok
(2)     [chap] = noop
(2)     [mschap] = noop
(2)     [digest] = noop
(2) suffix: Checking for suffix after "@"
(2) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(2) suffix: No such realm "example.org"
(2)     [suffix] = noop
(2) eap: Peer sent EAP Response (code 2) ID 220 length 6
(2) eap: No EAP Start, assuming it's an on-going EAP conversation
(2)     [eap] = updated
(2)     [files] = noop
(2)     [expiration] = noop
(2)     [logintime] = noop
(2)     [pap] = noop
(2)   } # authorize = updated
(2) Found Auth-Type = eap
(2) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(2)   authenticate {
(2) eap: Expiring EAP session with state 0x5c6432d55db83fd7
(2) eap: Finished EAP session with state 0x5c6432d55db83fd7
(2) eap: Previous EAP request found for state 0x5c6432d55db83fd7, released from the list
(2) eap: Peer sent packet with method EAP TLS (13)
(2) eap: Calling submodule eap_tls to process data
(2) eap_tls: (TLS) Peer ACKed our handshake fragment
(2) eap: Sending EAP Request (code 1) ID 221 length 1004
(2) eap: EAP session adding &reply:State = 0x5c6432d55eb93fd7
(2)     [eap] = handled
(2)   } # authenticate = handled
(2) Using Post-Auth-Type Challenge
(2) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(2)   Challenge { ... } # empty sub-section is ignored
(2) session-state: Saving cached attributes
(2)   Framed-MTU = 994
(2)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(2) Sent Access-Challenge Id 4 from 10.45.0.1:1812 to 10.45.0.2:50371 length 1068
(2)   EAP-Message = 0x01dd03ec0dc000000b97da1947b3ed760c65c2f625e24d5d289b54ccb38f2badaf668a533515cc558c71e617223797d7336b2d3156c17b29cf9289419a244d30ebfb107a83c56f07f114fcaffc90c31f20d26fabb345f12cc00414d4f10c558c0ee801470717216c8b123e4a1cf1327998d8249f91cb24d651c00a001759c5a789e9a9e316e88973666166be373d40f367d9897fedf43b929982653cdff1ccd7cc23d79531c61f9ee9201b884de930474a96030004fe308204fa308203e2a003020102021456cccd314b10cee4562c4644423a17b12b66b6a9300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c65204365727469666963617465204175
(2)   Message-Authenticator = 0x00000000000000000000000000000000
(2)   State = 0x5c6432d55eb93fd72179b26d243fe42a
(2) Finished request
Waking up in 4.9 seconds.
(3) Received Access-Request Id 5 from 10.45.0.2:50371 to 10.45.0.1:1812 length 186
(3)   Message-Authenticator = 0x87c490b50f8558a7c0fd111b22e88b55
(3)   User-Name = "user@example.org"
(3)   NAS-IP-Address = 10.45.0.2
(3)   Called-Station-Id = "08-00-27-9D-42-72:"
(3)   NAS-Port-Type = Wireless-802.11
(3)   Service-Type = Framed-User
(3)   Calling-Station-Id = "08-00-27-B4-18-A9"
(3)   Connect-Info = "CONNECT 0Mbps 802.11b"
(3)   Acct-Session-Id = "C6AEF11EDC4023F4"
(3)   Framed-MTU = 1400
(3)   EAP-Message = 0x02dd00060d00
(3)   State = 0x5c6432d55eb93fd72179b26d243fe42a
(3) Restoring &session-state
(3)   &session-state:Framed-MTU = 994
(3)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(3)   authorize {
(3)     policy filter_username {
(3)       if (&User-Name) {
(3)       if (&User-Name)  -> TRUE
(3)       if (&User-Name)  {
(3)         if (&User-Name =~ / /) {
(3)         if (&User-Name =~ / /)  -> FALSE
(3)         if (&User-Name =~ /@[^@]*@/ ) {
(3)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(3)         if (&User-Name =~ /\.\./ ) {
(3)         if (&User-Name =~ /\.\./ )  -> FALSE
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(3)         if (&User-Name =~ /\.$/)  {
(3)         if (&User-Name =~ /\.$/)   -> FALSE
(3)         if (&User-Name =~ /@\./)  {
(3)         if (&User-Name =~ /@\./)   -> FALSE
(3)       } # if (&User-Name)  = notfound
(3)     } # policy filter_username = notfound
(3)     [preprocess] = ok
(3)     [chap] = noop
(3)     [mschap] = noop
(3)     [digest] = noop
(3) suffix: Checking for suffix after "@"
(3) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(3) suffix: No such realm "example.org"
(3)     [suffix] = noop
(3) eap: Peer sent EAP Response (code 2) ID 221 length 6
(3) eap: No EAP Start, assuming it's an on-going EAP conversation
(3)     [eap] = updated
(3)     [files] = noop
(3)     [expiration] = noop
(3)     [logintime] = noop
(3)     [pap] = noop
(3)   } # authorize = updated
(3) Found Auth-Type = eap
(3) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(3)   authenticate {
(3) eap: Expiring EAP session with state 0x5c6432d55eb93fd7
(3) eap: Finished EAP session with state 0x5c6432d55eb93fd7
(3) eap: Previous EAP request found for state 0x5c6432d55eb93fd7, released from the list
(3) eap: Peer sent packet with method EAP TLS (13)
(3) eap: Calling submodule eap_tls to process data
(3) eap_tls: (TLS) Peer ACKed our handshake fragment
(3) eap: Sending EAP Request (code 1) ID 222 length 989
(3) eap: EAP session adding &reply:State = 0x5c6432d55fba3fd7
(3)     [eap] = handled
(3)   } # authenticate = handled
(3) Using Post-Auth-Type Challenge
(3) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(3)   Challenge { ... } # empty sub-section is ignored
(3) session-state: Saving cached attributes
(3)   Framed-MTU = 994
(3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) Sent Access-Challenge Id 5 from 10.45.0.1:1812 to 10.45.0.2:50371 length 1053
(3)   EAP-Message = 0x01de03dd0d8000000b9778616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821456cccd314b10cee4562c4644423a17b12b66b6a9300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b0500038201010033cf0ebd246ddf9397f5fee4246383b11972969a7612af2e922dec304ad06fa324257a9db256c6bb89dd3dc3e780dfcce9d39c76eb799ed873de9aa276a8f953319fea22ad12aa990452ee66e71deca9da4c284b0c8d6b4b989e06bf2c095c883d7d80c030873a86cd3082bd0ecf7f437fd7efdbc2f7b003af5a339d529c03f7f785a9a5ca12c23760e3f193a29e278b137be999fe7ee925073e0722a565339fb16c0d2f5a
(3)   Message-Authenticator = 0x00000000000000000000000000000000
(3)   State = 0x5c6432d55fba3fd72179b26d243fe42a
(3) Finished request
Waking up in 4.8 seconds.
(4) Received Access-Request Id 6 from 10.45.0.2:50371 to 10.45.0.1:1812 length 1598
(4)   Message-Authenticator = 0x9f39028a7940de4551e54ca23b1d5640
(4)   User-Name = "user@example.org"
(4)   NAS-IP-Address = 10.45.0.2
(4)   Called-Station-Id = "08-00-27-9D-42-72:"
(4)   NAS-Port-Type = Wireless-802.11
(4)   Service-Type = Framed-User
(4)   Calling-Station-Id = "08-00-27-B4-18-A9"
(4)   Connect-Info = "CONNECT 0Mbps 802.11b"
(4)   Acct-Session-Id = "C6AEF11EDC4023F4"
(4)   Framed-MTU = 1400
(4)   EAP-Message = 0x02de05800dc000000a8f16030309200b00091c00091900041530820411308202f9a003020102020102300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3235303533313134333234345a170d3235303733303134333234345a3071310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3119301706035504030c1075736572406578616d706c652e6f7267311f301d06092a864886f70d010901161075736572406578616d706c652e6f726730820122300d06092a864886f70d0101010500038201
(4)   State = 0x5c6432d55fba3fd72179b26d243fe42a
(4) Restoring &session-state
(4)   &session-state:Framed-MTU = 994
(4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(4)   authorize {
(4)     policy filter_username {
(4)       if (&User-Name) {
(4)       if (&User-Name)  -> TRUE
(4)       if (&User-Name)  {
(4)         if (&User-Name =~ / /) {
(4)         if (&User-Name =~ / /)  -> FALSE
(4)         if (&User-Name =~ /@[^@]*@/ ) {
(4)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(4)         if (&User-Name =~ /\.\./ ) {
(4)         if (&User-Name =~ /\.\./ )  -> FALSE
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(4)         if (&User-Name =~ /\.$/)  {
(4)         if (&User-Name =~ /\.$/)   -> FALSE
(4)         if (&User-Name =~ /@\./)  {
(4)         if (&User-Name =~ /@\./)   -> FALSE
(4)       } # if (&User-Name)  = notfound
(4)     } # policy filter_username = notfound
(4)     [preprocess] = ok
(4)     [chap] = noop
(4)     [mschap] = noop
(4)     [digest] = noop
(4) suffix: Checking for suffix after "@"
(4) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(4) suffix: No such realm "example.org"
(4)     [suffix] = noop
(4) eap: Peer sent EAP Response (code 2) ID 222 length 1408
(4) eap: No EAP Start, assuming it's an on-going EAP conversation
(4)     [eap] = updated
(4)     [files] = noop
(4)     [expiration] = noop
(4)     [logintime] = noop
(4)     [pap] = noop
(4)   } # authorize = updated
(4) Found Auth-Type = eap
(4) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(4)   authenticate {
(4) eap: Expiring EAP session with state 0x5c6432d55fba3fd7
(4) eap: Finished EAP session with state 0x5c6432d55fba3fd7
(4) eap: Previous EAP request found for state 0x5c6432d55fba3fd7, released from the list
(4) eap: Peer sent packet with method EAP TLS (13)
(4) eap: Calling submodule eap_tls to process data
(4) eap_tls: (TLS) EAP Peer says that the final record size will be 2703 bytes
(4) eap_tls: (TLS) EAP Expecting 2 fragments
(4) eap_tls: (TLS) EAP Got first TLS fragment (1398 bytes).  Peer says more fragments will follow
(4) eap_tls: (TLS) EAP ACKing fragment, the peer should send more data.
(4) eap: Sending EAP Request (code 1) ID 223 length 6
(4) eap: EAP session adding &reply:State = 0x5c6432d558bb3fd7
(4)     [eap] = handled
(4)   } # authenticate = handled
(4) Using Post-Auth-Type Challenge
(4) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(4)   Challenge { ... } # empty sub-section is ignored
(4) session-state: Saving cached attributes
(4)   Framed-MTU = 994
(4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) Sent Access-Challenge Id 6 from 10.45.0.1:1812 to 10.45.0.2:50371 length 64
(4)   EAP-Message = 0x01df00060d00
(4)   Message-Authenticator = 0x00000000000000000000000000000000
(4)   State = 0x5c6432d558bb3fd72179b26d243fe42a
(4) Finished request
Waking up in 4.8 seconds.
(5) Received Access-Request Id 7 from 10.45.0.2:50371 to 10.45.0.1:1812 length 1501
(5)   Message-Authenticator = 0x061cc914a8f49cb326e7ba532b0abaeb
(5)   User-Name = "user@example.org"
(5)   NAS-IP-Address = 10.45.0.2
(5)   Called-Station-Id = "08-00-27-9D-42-72:"
(5)   NAS-Port-Type = Wireless-802.11
(5)   Service-Type = Framed-User
(5)   Calling-Station-Id = "08-00-27-B4-18-A9"
(5)   Connect-Info = "CONNECT 0Mbps 802.11b"
(5)   Acct-Session-Id = "C6AEF11EDC4023F4"
(5)   Framed-MTU = 1400
(5)   EAP-Message = 0x02df051f0d00706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747930820122300d06092a864886f70d01010105000382010f003082010a0282010100d89bad137d52f1b4eb8fbc82bac874d69fa8f87012acea802062bd420c498c053d62f2d21ee7182b71d35e5e1e87f3ea04d86e1656484e86f5c5dbb2e59a8e5ea155e50e636e6b961f4d295bdca76811dc4d195a0c90408c3f4f957e8dcca1f4a23052cb6b0f33c48042b92565ab33b5780309ec561642bb7d8233d844247e057f47ec51606c8531685f004953711ae133e45710284f559926921936c7217db873ececc891fd7e84a37c9deb7abff81fd55e273433f7e68e0be895c6bba026b622e620c146014754db23fc474d6a4e45a65d9aeb65f00dd660f69a804d032c2b43e026bcf036fff13c10036aacbc80cc7480cdaf96448c5ef3e2af6f7d7e85f50203010001a38201423082013e301d0603551d0e04160414eeff3befe9b79211c1
(5)   State = 0x5c6432d558bb3fd72179b26d243fe42a
(5) Restoring &session-state
(5)   &session-state:Framed-MTU = 994
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(5)   authorize {
(5)     policy filter_username {
(5)       if (&User-Name) {
(5)       if (&User-Name)  -> TRUE
(5)       if (&User-Name)  {
(5)         if (&User-Name =~ / /) {
(5)         if (&User-Name =~ / /)  -> FALSE
(5)         if (&User-Name =~ /@[^@]*@/ ) {
(5)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(5)         if (&User-Name =~ /\.\./ ) {
(5)         if (&User-Name =~ /\.\./ )  -> FALSE
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(5)         if (&User-Name =~ /\.$/)  {
(5)         if (&User-Name =~ /\.$/)   -> FALSE
(5)         if (&User-Name =~ /@\./)  {
(5)         if (&User-Name =~ /@\./)   -> FALSE
(5)       } # if (&User-Name)  = notfound
(5)     } # policy filter_username = notfound
(5)     [preprocess] = ok
(5)     [chap] = noop
(5)     [mschap] = noop
(5)     [digest] = noop
(5) suffix: Checking for suffix after "@"
(5) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(5) suffix: No such realm "example.org"
(5)     [suffix] = noop
(5) eap: Peer sent EAP Response (code 2) ID 223 length 1311
(5) eap: No EAP Start, assuming it's an on-going EAP conversation
(5)     [eap] = updated
(5)     [files] = noop
(5)     [expiration] = noop
(5)     [logintime] = noop
(5)     [pap] = noop
(5)   } # authorize = updated
(5) Found Auth-Type = eap
(5) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(5)   authenticate {
(5) eap: Expiring EAP session with state 0x5c6432d558bb3fd7
(5) eap: Finished EAP session with state 0x5c6432d558bb3fd7
(5) eap: Previous EAP request found for state 0x5c6432d558bb3fd7, released from the list
(5) eap: Peer sent packet with method EAP TLS (13)
(5) eap: Calling submodule eap_tls to process data
(5) eap_tls: (TLS) EAP Got final fragment (1305 bytes)
(5) eap_tls: (TLS) EAP Done initial handshake
(5) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write server done
(5) eap_tls: (TLS) recv TLS 1.2 Handshake, Certificate
(5) eap_tls: (TLS) Creating attributes from server certificate
(5) eap_tls:   TLS-Cert-Serial := "56cccd314b10cee4562c4644423a17b12b66b6a9"
(5) eap_tls:   TLS-Cert-Expiration := "250730143243Z"
(5) eap_tls:   TLS-Cert-Valid-Since := "250531143243Z"
(5) eap_tls:   TLS-Cert-Subject := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
(5) eap_tls:   TLS-Cert-Issuer := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
(5) eap_tls:   TLS-Cert-Common-Name := "Example Certificate Authority"
(5) eap_tls: (TLS) Creating attributes from client certificate
(5) eap_tls:   TLS-Client-Cert-Serial := "02"
(5) eap_tls:   TLS-Client-Cert-Expiration := "250730143244Z"
(5) eap_tls:   TLS-Client-Cert-Valid-Since := "250531143244Z"
(5) eap_tls:   TLS-Client-Cert-Subject := "/C=FR/ST=Radius/O=Example Inc./CN=user@example.org/emailAddress=user@example.org"
(5) eap_tls:   TLS-Client-Cert-Issuer := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
(5) eap_tls:   TLS-Client-Cert-Common-Name := "user@example.org"
(5) eap_tls:   TLS-Client-Cert-X509v3-Extended-Key-Usage += "TLS Web Client Authentication"
(5) eap_tls:   TLS-Client-Cert-X509v3-Subject-Key-Identifier += "CC:F4:EA:9D:70:E7:58:65:2F:F3:00:01:52:A7:98:F7:FC:37:52:19"
(5) eap_tls:   TLS-Client-Cert-X509v3-Authority-Key-Identifier += "EE:FF:3B:EF:E9:B7:92:11:C1:1C:00:EA:11:64:7E:7D:E7:FE:96:17"
(5) eap_tls:   TLS-Client-Cert-X509v3-Extended-Key-Usage-OID += "1.3.6.1.5.5.7.3.2"
Certificate chain - 1 cert(s) untrusted
(TLS) untrusted certificate with depth [1] subject name /C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority
(TLS) untrusted certificate with depth [0] subject name /C=FR/ST=Radius/O=Example Inc./CN=user@example.org/emailAddress=user@example.org
(5) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read client certificate
(5) eap_tls: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
(5) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read client key exchange
(5) eap_tls: (TLS) recv TLS 1.2 Handshake, CertificateVerify
(5) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read certificate verify
(5) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read change cipher spec
(5) eap_tls: (TLS) recv TLS 1.2 Handshake, Finished
(5) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read finished
(5) eap_tls: (TLS) send TLS 1.2 ChangeCipherSpec
(5) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(5) eap_tls: (TLS) send TLS 1.2 Handshake, Finished
(5) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write finished
(5) eap_tls: (TLS) Handshake state - SSL negotiation finished successfully
(5) eap_tls: (TLS) Connection Established
(5) eap_tls:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5) eap_tls:   TLS-Session-Version = "TLS 1.2"
(5) eap: Sending EAP Request (code 1) ID 224 length 61
(5) eap: EAP session adding &reply:State = 0x5c6432d559843fd7
(5)     [eap] = handled
(5)   } # authenticate = handled
(5) Using Post-Auth-Type Challenge
(5) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(5)   Challenge { ... } # empty sub-section is ignored
(5) session-state: Saving cached attributes
(5)   Framed-MTU = 994
(5)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Certificate"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, CertificateVerify"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5)   TLS-Session-Version = "TLS 1.2"
(5) Sent Access-Challenge Id 7 from 10.45.0.1:1812 to 10.45.0.2:50371 length 119
(5)   EAP-Message = 0x01e0003d0d800000003314030300010116030300281bc5e8c847bed41e23894a4fb830cd7828508c9a52d9eee9988d54fb14cf6b10dd09bdd1adb21cff
(5)   Message-Authenticator = 0x00000000000000000000000000000000
(5)   State = 0x5c6432d559843fd72179b26d243fe42a
(5) Finished request
Waking up in 4.8 seconds.
(6) Received Access-Request Id 8 from 10.45.0.2:50371 to 10.45.0.1:1812 length 186
(6)   Message-Authenticator = 0x19f33cc45f14633349ebef4f2949d2cd
(6)   User-Name = "user@example.org"
(6)   NAS-IP-Address = 10.45.0.2
(6)   Called-Station-Id = "08-00-27-9D-42-72:"
(6)   NAS-Port-Type = Wireless-802.11
(6)   Service-Type = Framed-User
(6)   Calling-Station-Id = "08-00-27-B4-18-A9"
(6)   Connect-Info = "CONNECT 0Mbps 802.11b"
(6)   Acct-Session-Id = "C6AEF11EDC4023F4"
(6)   Framed-MTU = 1400
(6)   EAP-Message = 0x02e000060d00
(6)   State = 0x5c6432d559843fd72179b26d243fe42a
(6) Restoring &session-state
(6)   &session-state:Framed-MTU = 994
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Certificate"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, CertificateVerify"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   &session-state:TLS-Session-Version = "TLS 1.2"
(6) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(6)   authorize {
(6)     policy filter_username {
(6)       if (&User-Name) {
(6)       if (&User-Name)  -> TRUE
(6)       if (&User-Name)  {
(6)         if (&User-Name =~ / /) {
(6)         if (&User-Name =~ / /)  -> FALSE
(6)         if (&User-Name =~ /@[^@]*@/ ) {
(6)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)         if (&User-Name =~ /\.\./ ) {
(6)         if (&User-Name =~ /\.\./ )  -> FALSE
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)         if (&User-Name =~ /\.$/)  {
(6)         if (&User-Name =~ /\.$/)   -> FALSE
(6)         if (&User-Name =~ /@\./)  {
(6)         if (&User-Name =~ /@\./)   -> FALSE
(6)       } # if (&User-Name)  = notfound
(6)     } # policy filter_username = notfound
(6)     [preprocess] = ok
(6)     [chap] = noop
(6)     [mschap] = noop
(6)     [digest] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(6) suffix: No such realm "example.org"
(6)     [suffix] = noop
(6) eap: Peer sent EAP Response (code 2) ID 224 length 6
(6) eap: No EAP Start, assuming it's an on-going EAP conversation
(6)     [eap] = updated
(6)     [files] = noop
(6)     [expiration] = noop
(6)     [logintime] = noop
(6)     [pap] = noop
(6)   } # authorize = updated
(6) Found Auth-Type = eap
(6) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(6)   authenticate {
(6) eap: Expiring EAP session with state 0x5c6432d559843fd7
(6) eap: Finished EAP session with state 0x5c6432d559843fd7
(6) eap: Previous EAP request found for state 0x5c6432d559843fd7, released from the list
(6) eap: Peer sent packet with method EAP TLS (13)
(6) eap: Calling submodule eap_tls to process data
(6) eap_tls: (TLS) Peer ACKed our handshake fragment.  handshake is finished
(6) eap: Sending EAP Success (code 3) ID 224 length 4
(6) eap: Freeing handler
(6)     [eap] = ok
(6)   } # authenticate = ok
(6) # Executing section post-auth from file /etc/freeradius/3.0/sites-enabled/default
(6)   post-auth {
(6)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
(6)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
(6)     update {
(6)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, CertificateRequest'
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Certificate'
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, CertificateVerify'
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
(6)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
(6)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
(6)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
(6)     } # update = noop
(6)     [exec] = noop
(6)     policy remove_reply_message_if_eap {
(6)       if (&reply:EAP-Message && &reply:Reply-Message) {
(6)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(6)       else {
(6)         [noop] = noop
(6)       } # else = noop
(6)     } # policy remove_reply_message_if_eap = noop
(6)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
(6)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
(6)   } # post-auth = noop
(6) Sent Access-Accept Id 8 from 10.45.0.1:1812 to 10.45.0.2:50371 length 184
(6)   MS-MPPE-Recv-Key = 0x6ddb8a0e88298be977101a1dc0403a5af869507eec2a0cbcdb35bf0269855cc2
(6)   MS-MPPE-Send-Key = 0xae2e16eec9c41d340740dc447c95c7efa1684be1db411cb60dc7bfec96236538
(6)   EAP-Message = 0x03e00004
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   User-Name = "user@example.org"
(6)   Framed-MTU += 994
(6) Finished request
Waking up in 4.8 seconds.
(0) Cleaning up request packet ID 2 with timestamp +626 due to cleanup_delay was reached
(1) Cleaning up request packet ID 3 with timestamp +626 due to cleanup_delay was reached
(2) Cleaning up request packet ID 4 with timestamp +626 due to cleanup_delay was reached
(3) Cleaning up request packet ID 5 with timestamp +626 due to cleanup_delay was reached
(4) Cleaning up request packet ID 6 with timestamp +626 due to cleanup_delay was reached
(5) Cleaning up request packet ID 7 with timestamp +626 due to cleanup_delay was reached
(6) Cleaning up request packet ID 8 with timestamp +626 due to cleanup_delay was reached
Ready to process requests
(7) Received Access-Request Id 9 from 10.45.0.2:50371 to 10.45.0.1:1812 length 183
(7)   Message-Authenticator = 0x5dc5d79a306669e13bd5cfa005420298
(7)   User-Name = "user@example.org"
(7)   NAS-IP-Address = 10.45.0.2
(7)   Called-Station-Id = "08-00-27-9D-42-72:"
(7)   NAS-Port-Type = Wireless-802.11
(7)   Service-Type = Framed-User
(7)   Calling-Station-Id = "08-00-27-51-7F-EF"
(7)   Connect-Info = "CONNECT 0Mbps 802.11b"
(7)   Acct-Session-Id = "0C9E998AC12AFA5C"
(7)   Framed-MTU = 1400
(7)   EAP-Message = 0x022a00150175736572406578616d706c652e6f7267
(7) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(7)   authorize {
(7)     policy filter_username {
(7)       if (&User-Name) {
(7)       if (&User-Name)  -> TRUE
(7)       if (&User-Name)  {
(7)         if (&User-Name =~ / /) {
(7)         if (&User-Name =~ / /)  -> FALSE
(7)         if (&User-Name =~ /@[^@]*@/ ) {
(7)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)         if (&User-Name =~ /\.\./ ) {
(7)         if (&User-Name =~ /\.\./ )  -> FALSE
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)         if (&User-Name =~ /\.$/)  {
(7)         if (&User-Name =~ /\.$/)   -> FALSE
(7)         if (&User-Name =~ /@\./)  {
(7)         if (&User-Name =~ /@\./)   -> FALSE
(7)       } # if (&User-Name)  = notfound
(7)     } # policy filter_username = notfound
(7)     [preprocess] = ok
(7)     [chap] = noop
(7)     [mschap] = noop
(7)     [digest] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(7) suffix: No such realm "example.org"
(7)     [suffix] = noop
(7) eap: Peer sent EAP Response (code 2) ID 42 length 21
(7) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(7)     [eap] = ok
(7)   } # authorize = ok
(7) Found Auth-Type = eap
(7) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(7)   authenticate {
(7) eap: Peer sent packet with method EAP Identity (1)
(7) eap: Calling submodule eap_tls to process data
(7) eap_tls: (TLS) Initiating new session
(7) eap_tls: (TLS) Setting verify mode to require certificate from client
(7) eap: Sending EAP Request (code 1) ID 43 length 6
(7) eap: EAP session adding &reply:State = 0x0f8d91480fa69c5a
(7)     [eap] = handled
(7)   } # authenticate = handled
(7) Using Post-Auth-Type Challenge
(7) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(7)   Challenge { ... } # empty sub-section is ignored
(7) session-state: Saving cached attributes
(7)   Framed-MTU = 994
(7) Sent Access-Challenge Id 9 from 10.45.0.1:1812 to 10.45.0.2:50371 length 64
(7)   EAP-Message = 0x012b00060d20
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x0f8d91480fa69c5a46528d0f87591b75
(7) Finished request
Waking up in 4.9 seconds.
(8) Received Access-Request Id 10 from 10.45.0.2:50371 to 10.45.0.1:1812 length 370
(8)   Message-Authenticator = 0x2a2c01df53ba90efb331941f6c6815db
(8)   User-Name = "user@example.org"
(8)   NAS-IP-Address = 10.45.0.2
(8)   Called-Station-Id = "08-00-27-9D-42-72:"
(8)   NAS-Port-Type = Wireless-802.11
(8)   Service-Type = Framed-User
(8)   Calling-Station-Id = "08-00-27-51-7F-EF"
(8)   Connect-Info = "CONNECT 0Mbps 802.11b"
(8)   Acct-Session-Id = "0C9E998AC12AFA5C"
(8)   Framed-MTU = 1400
(8)   EAP-Message = 0x022b00be0d0016030100b3010000af0303a10f8c1c20389c2e830167e9fde8733a14ff1807d36c92f218cb60784e253580000038c02cc030009fcca9cca8ccaac02bc02f009ec024c028006bc023c0270067c00ac0140039c009c0130033009d009c003d003c0035002f00ff0100004e000b000403000102000a000c000a001d0017001e001900180016000000170000000d002a0028040305030603080708080809080a080b080408050806040105010601030303010302040205020602
(8)   State = 0x0f8d91480fa69c5a46528d0f87591b75
(8) Restoring &session-state
(8)   &session-state:Framed-MTU = 994
(8) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(8)   authorize {
(8)     policy filter_username {
(8)       if (&User-Name) {
(8)       if (&User-Name)  -> TRUE
(8)       if (&User-Name)  {
(8)         if (&User-Name =~ / /) {
(8)         if (&User-Name =~ / /)  -> FALSE
(8)         if (&User-Name =~ /@[^@]*@/ ) {
(8)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)         if (&User-Name =~ /\.\./ ) {
(8)         if (&User-Name =~ /\.\./ )  -> FALSE
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)         if (&User-Name =~ /\.$/)  {
(8)         if (&User-Name =~ /\.$/)   -> FALSE
(8)         if (&User-Name =~ /@\./)  {
(8)         if (&User-Name =~ /@\./)   -> FALSE
(8)       } # if (&User-Name)  = notfound
(8)     } # policy filter_username = notfound
(8)     [preprocess] = ok
(8)     [chap] = noop
(8)     [mschap] = noop
(8)     [digest] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(8) suffix: No such realm "example.org"
(8)     [suffix] = noop
(8) eap: Peer sent EAP Response (code 2) ID 43 length 190
(8) eap: No EAP Start, assuming it's an on-going EAP conversation
(8)     [eap] = updated
(8)     [files] = noop
(8)     [expiration] = noop
(8)     [logintime] = noop
(8)     [pap] = noop
(8)   } # authorize = updated
(8) Found Auth-Type = eap
(8) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(8)   authenticate {
(8) eap: Expiring EAP session with state 0x0f8d91480fa69c5a
(8) eap: Finished EAP session with state 0x0f8d91480fa69c5a
(8) eap: Previous EAP request found for state 0x0f8d91480fa69c5a, released from the list
(8) eap: Peer sent packet with method EAP TLS (13)
(8) eap: Calling submodule eap_tls to process data
(8) eap_tls: (TLS) EAP Got final fragment (184 bytes)
(8) eap_tls: WARNING: (TLS) EAP Total received record fragments (184 bytes), does not equal expected expected data length (0 bytes)
(8) eap_tls: (TLS) EAP Done initial handshake
(8) eap_tls: (TLS) Handshake state - before SSL initialization
(8) eap_tls: (TLS) Handshake state - Server before SSL initialization
(8) eap_tls: (TLS) Handshake state - Server before SSL initialization
(8) eap_tls: (TLS) recv TLS 1.3 Handshake, ClientHello
(8) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read client hello
(8) eap_tls: (TLS) send TLS 1.2 Handshake, ServerHello
(8) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write server hello
(8) eap_tls: (TLS) send TLS 1.2 Handshake, Certificate
(8) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write certificate
(8) eap_tls: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(8) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(8) eap_tls: (TLS) send TLS 1.2 Handshake, CertificateRequest
(8) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write certificate request
(8) eap_tls: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(8) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write server done
(8) eap_tls: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(8) eap_tls: (TLS) In Handshake Phase
(8) eap: Sending EAP Request (code 1) ID 44 length 1004
(8) eap: EAP session adding &reply:State = 0x0f8d91480ea19c5a
(8)     [eap] = handled
(8)   } # authenticate = handled
(8) Using Post-Auth-Type Challenge
(8) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(8)   Challenge { ... } # empty sub-section is ignored
(8) session-state: Saving cached attributes
(8)   Framed-MTU = 994
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8) Sent Access-Challenge Id 10 from 10.45.0.1:1812 to 10.45.0.2:50371 length 1068
(8)   EAP-Message = 0x012c03ec0dc000000b97160303003d0200003903038c60e2da2785bd9b716581ec2919e4cf09afc4f2e0700641acb25e52b95e880900c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3235303533313134333234335a170d3235303733303134333234335a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x0f8d91480ea19c5a46528d0f87591b75
(8) Finished request
Waking up in 4.9 seconds.
(9) Received Access-Request Id 11 from 10.45.0.2:50371 to 10.45.0.1:1812 length 186
(9)   Message-Authenticator = 0x978158cc7988d5bcc5292458ae1e6b37
(9)   User-Name = "user@example.org"
(9)   NAS-IP-Address = 10.45.0.2
(9)   Called-Station-Id = "08-00-27-9D-42-72:"
(9)   NAS-Port-Type = Wireless-802.11
(9)   Service-Type = Framed-User
(9)   Calling-Station-Id = "08-00-27-51-7F-EF"
(9)   Connect-Info = "CONNECT 0Mbps 802.11b"
(9)   Acct-Session-Id = "0C9E998AC12AFA5C"
(9)   Framed-MTU = 1400
(9)   EAP-Message = 0x022c00060d00
(9)   State = 0x0f8d91480ea19c5a46528d0f87591b75
(9) Restoring &session-state
(9)   &session-state:Framed-MTU = 994
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(9)   authorize {
(9)     policy filter_username {
(9)       if (&User-Name) {
(9)       if (&User-Name)  -> TRUE
(9)       if (&User-Name)  {
(9)         if (&User-Name =~ / /) {
(9)         if (&User-Name =~ / /)  -> FALSE
(9)         if (&User-Name =~ /@[^@]*@/ ) {
(9)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)         if (&User-Name =~ /\.\./ ) {
(9)         if (&User-Name =~ /\.\./ )  -> FALSE
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)         if (&User-Name =~ /\.$/)  {
(9)         if (&User-Name =~ /\.$/)   -> FALSE
(9)         if (&User-Name =~ /@\./)  {
(9)         if (&User-Name =~ /@\./)   -> FALSE
(9)       } # if (&User-Name)  = notfound
(9)     } # policy filter_username = notfound
(9)     [preprocess] = ok
(9)     [chap] = noop
(9)     [mschap] = noop
(9)     [digest] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(9) suffix: No such realm "example.org"
(9)     [suffix] = noop
(9) eap: Peer sent EAP Response (code 2) ID 44 length 6
(9) eap: No EAP Start, assuming it's an on-going EAP conversation
(9)     [eap] = updated
(9)     [files] = noop
(9)     [expiration] = noop
(9)     [logintime] = noop
(9)     [pap] = noop
(9)   } # authorize = updated
(9) Found Auth-Type = eap
(9) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(9)   authenticate {
(9) eap: Expiring EAP session with state 0x0f8d91480ea19c5a
(9) eap: Finished EAP session with state 0x0f8d91480ea19c5a
(9) eap: Previous EAP request found for state 0x0f8d91480ea19c5a, released from the list
(9) eap: Peer sent packet with method EAP TLS (13)
(9) eap: Calling submodule eap_tls to process data
(9) eap_tls: (TLS) Peer ACKed our handshake fragment
(9) eap: Sending EAP Request (code 1) ID 45 length 1004
(9) eap: EAP session adding &reply:State = 0x0f8d91480da09c5a
(9)     [eap] = handled
(9)   } # authenticate = handled
(9) Using Post-Auth-Type Challenge
(9) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(9)   Challenge { ... } # empty sub-section is ignored
(9) session-state: Saving cached attributes
(9)   Framed-MTU = 994
(9)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9) Sent Access-Challenge Id 11 from 10.45.0.1:1812 to 10.45.0.2:50371 length 1068
(9)   EAP-Message = 0x012d03ec0dc000000b97da1947b3ed760c65c2f625e24d5d289b54ccb38f2badaf668a533515cc558c71e617223797d7336b2d3156c17b29cf9289419a244d30ebfb107a83c56f07f114fcaffc90c31f20d26fabb345f12cc00414d4f10c558c0ee801470717216c8b123e4a1cf1327998d8249f91cb24d651c00a001759c5a789e9a9e316e88973666166be373d40f367d9897fedf43b929982653cdff1ccd7cc23d79531c61f9ee9201b884de930474a96030004fe308204fa308203e2a003020102021456cccd314b10cee4562c4644423a17b12b66b6a9300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c65204365727469666963617465204175
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   State = 0x0f8d91480da09c5a46528d0f87591b75
(9) Finished request
Waking up in 4.9 seconds.
(10) Received Access-Request Id 12 from 10.45.0.2:50371 to 10.45.0.1:1812 length 186
(10)   Message-Authenticator = 0x565bdfd604218649d0232080478b67cb
(10)   User-Name = "user@example.org"
(10)   NAS-IP-Address = 10.45.0.2
(10)   Called-Station-Id = "08-00-27-9D-42-72:"
(10)   NAS-Port-Type = Wireless-802.11
(10)   Service-Type = Framed-User
(10)   Calling-Station-Id = "08-00-27-51-7F-EF"
(10)   Connect-Info = "CONNECT 0Mbps 802.11b"
(10)   Acct-Session-Id = "0C9E998AC12AFA5C"
(10)   Framed-MTU = 1400
(10)   EAP-Message = 0x022d00060d00
(10)   State = 0x0f8d91480da09c5a46528d0f87591b75
(10) Restoring &session-state
(10)   &session-state:Framed-MTU = 994
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(10)   authorize {
(10)     policy filter_username {
(10)       if (&User-Name) {
(10)       if (&User-Name)  -> TRUE
(10)       if (&User-Name)  {
(10)         if (&User-Name =~ / /) {
(10)         if (&User-Name =~ / /)  -> FALSE
(10)         if (&User-Name =~ /@[^@]*@/ ) {
(10)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(10)         if (&User-Name =~ /\.\./ ) {
(10)         if (&User-Name =~ /\.\./ )  -> FALSE
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(10)         if (&User-Name =~ /\.$/)  {
(10)         if (&User-Name =~ /\.$/)   -> FALSE
(10)         if (&User-Name =~ /@\./)  {
(10)         if (&User-Name =~ /@\./)   -> FALSE
(10)       } # if (&User-Name)  = notfound
(10)     } # policy filter_username = notfound
(10)     [preprocess] = ok
(10)     [chap] = noop
(10)     [mschap] = noop
(10)     [digest] = noop
(10) suffix: Checking for suffix after "@"
(10) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(10) suffix: No such realm "example.org"
(10)     [suffix] = noop
(10) eap: Peer sent EAP Response (code 2) ID 45 length 6
(10) eap: No EAP Start, assuming it's an on-going EAP conversation
(10)     [eap] = updated
(10)     [files] = noop
(10)     [expiration] = noop
(10)     [logintime] = noop
(10)     [pap] = noop
(10)   } # authorize = updated
(10) Found Auth-Type = eap
(10) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(10)   authenticate {
(10) eap: Expiring EAP session with state 0x0f8d91480da09c5a
(10) eap: Finished EAP session with state 0x0f8d91480da09c5a
(10) eap: Previous EAP request found for state 0x0f8d91480da09c5a, released from the list
(10) eap: Peer sent packet with method EAP TLS (13)
(10) eap: Calling submodule eap_tls to process data
(10) eap_tls: (TLS) Peer ACKed our handshake fragment
(10) eap: Sending EAP Request (code 1) ID 46 length 989
(10) eap: EAP session adding &reply:State = 0x0f8d91480ca39c5a
(10)     [eap] = handled
(10)   } # authenticate = handled
(10) Using Post-Auth-Type Challenge
(10) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(10)   Challenge { ... } # empty sub-section is ignored
(10) session-state: Saving cached attributes
(10)   Framed-MTU = 994
(10)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10) Sent Access-Challenge Id 12 from 10.45.0.1:1812 to 10.45.0.2:50371 length 1053
(10)   EAP-Message = 0x012e03dd0d8000000b9778616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821456cccd314b10cee4562c4644423a17b12b66b6a9300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b0500038201010033cf0ebd246ddf9397f5fee4246383b11972969a7612af2e922dec304ad06fa324257a9db256c6bb89dd3dc3e780dfcce9d39c76eb799ed873de9aa276a8f953319fea22ad12aa990452ee66e71deca9da4c284b0c8d6b4b989e06bf2c095c883d7d80c030873a86cd3082bd0ecf7f437fd7efdbc2f7b003af5a339d529c03f7f785a9a5ca12c23760e3f193a29e278b137be999fe7ee925073e0722a565339fb16c0d2f5a
(10)   Message-Authenticator = 0x00000000000000000000000000000000
(10)   State = 0x0f8d91480ca39c5a46528d0f87591b75
(10) Finished request
Waking up in 4.9 seconds.
(11) Received Access-Request Id 13 from 10.45.0.2:50371 to 10.45.0.1:1812 length 1598
(11)   Message-Authenticator = 0x89844138c95c6a541f667df3d4acb473
(11)   User-Name = "user@example.org"
(11)   NAS-IP-Address = 10.45.0.2
(11)   Called-Station-Id = "08-00-27-9D-42-72:"
(11)   NAS-Port-Type = Wireless-802.11
(11)   Service-Type = Framed-User
(11)   Calling-Station-Id = "08-00-27-51-7F-EF"
(11)   Connect-Info = "CONNECT 0Mbps 802.11b"
(11)   Acct-Session-Id = "0C9E998AC12AFA5C"
(11)   Framed-MTU = 1400
(11)   EAP-Message = 0x022e05800dc000000a8f16030309200b00091c00091900041530820411308202f9a003020102020102300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3235303533313134333234345a170d3235303733303134333234345a3071310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3119301706035504030c1075736572406578616d706c652e6f7267311f301d06092a864886f70d010901161075736572406578616d706c652e6f726730820122300d06092a864886f70d0101010500038201
(11)   State = 0x0f8d91480ca39c5a46528d0f87591b75
(11) Restoring &session-state
(11)   &session-state:Framed-MTU = 994
(11)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(11) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(11)   authorize {
(11)     policy filter_username {
(11)       if (&User-Name) {
(11)       if (&User-Name)  -> TRUE
(11)       if (&User-Name)  {
(11)         if (&User-Name =~ / /) {
(11)         if (&User-Name =~ / /)  -> FALSE
(11)         if (&User-Name =~ /@[^@]*@/ ) {
(11)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(11)         if (&User-Name =~ /\.\./ ) {
(11)         if (&User-Name =~ /\.\./ )  -> FALSE
(11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(11)         if (&User-Name =~ /\.$/)  {
(11)         if (&User-Name =~ /\.$/)   -> FALSE
(11)         if (&User-Name =~ /@\./)  {
(11)         if (&User-Name =~ /@\./)   -> FALSE
(11)       } # if (&User-Name)  = notfound
(11)     } # policy filter_username = notfound
(11)     [preprocess] = ok
(11)     [chap] = noop
(11)     [mschap] = noop
(11)     [digest] = noop
(11) suffix: Checking for suffix after "@"
(11) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(11) suffix: No such realm "example.org"
(11)     [suffix] = noop
(11) eap: Peer sent EAP Response (code 2) ID 46 length 1408
(11) eap: No EAP Start, assuming it's an on-going EAP conversation
(11)     [eap] = updated
(11)     [files] = noop
(11)     [expiration] = noop
(11)     [logintime] = noop
(11)     [pap] = noop
(11)   } # authorize = updated
(11) Found Auth-Type = eap
(11) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(11)   authenticate {
(11) eap: Expiring EAP session with state 0x0f8d91480ca39c5a
(11) eap: Finished EAP session with state 0x0f8d91480ca39c5a
(11) eap: Previous EAP request found for state 0x0f8d91480ca39c5a, released from the list
(11) eap: Peer sent packet with method EAP TLS (13)
(11) eap: Calling submodule eap_tls to process data
(11) eap_tls: (TLS) EAP Peer says that the final record size will be 2703 bytes
(11) eap_tls: (TLS) EAP Expecting 2 fragments
(11) eap_tls: (TLS) EAP Got first TLS fragment (1398 bytes).  Peer says more fragments will follow
(11) eap_tls: (TLS) EAP ACKing fragment, the peer should send more data.
(11) eap: Sending EAP Request (code 1) ID 47 length 6
(11) eap: EAP session adding &reply:State = 0x0f8d91480ba29c5a
(11)     [eap] = handled
(11)   } # authenticate = handled
(11) Using Post-Auth-Type Challenge
(11) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(11)   Challenge { ... } # empty sub-section is ignored
(11) session-state: Saving cached attributes
(11)   Framed-MTU = 994
(11)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(11)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(11)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(11)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(11)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(11)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(11) Sent Access-Challenge Id 13 from 10.45.0.1:1812 to 10.45.0.2:50371 length 64
(11)   EAP-Message = 0x012f00060d00
(11)   Message-Authenticator = 0x00000000000000000000000000000000
(11)   State = 0x0f8d91480ba29c5a46528d0f87591b75
(11) Finished request
Waking up in 4.9 seconds.
(12) Received Access-Request Id 14 from 10.45.0.2:50371 to 10.45.0.1:1812 length 1501
(12)   Message-Authenticator = 0xb2fcc1d5ffda1e6415410864ef989834
(12)   User-Name = "user@example.org"
(12)   NAS-IP-Address = 10.45.0.2
(12)   Called-Station-Id = "08-00-27-9D-42-72:"
(12)   NAS-Port-Type = Wireless-802.11
(12)   Service-Type = Framed-User
(12)   Calling-Station-Id = "08-00-27-51-7F-EF"
(12)   Connect-Info = "CONNECT 0Mbps 802.11b"
(12)   Acct-Session-Id = "0C9E998AC12AFA5C"
(12)   Framed-MTU = 1400
(12)   EAP-Message = 0x022f051f0d00706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747930820122300d06092a864886f70d01010105000382010f003082010a0282010100d89bad137d52f1b4eb8fbc82bac874d69fa8f87012acea802062bd420c498c053d62f2d21ee7182b71d35e5e1e87f3ea04d86e1656484e86f5c5dbb2e59a8e5ea155e50e636e6b961f4d295bdca76811dc4d195a0c90408c3f4f957e8dcca1f4a23052cb6b0f33c48042b92565ab33b5780309ec561642bb7d8233d844247e057f47ec51606c8531685f004953711ae133e45710284f559926921936c7217db873ececc891fd7e84a37c9deb7abff81fd55e273433f7e68e0be895c6bba026b622e620c146014754db23fc474d6a4e45a65d9aeb65f00dd660f69a804d032c2b43e026bcf036fff13c10036aacbc80cc7480cdaf96448c5ef3e2af6f7d7e85f50203010001a38201423082013e301d0603551d0e04160414eeff3befe9b79211c1
(12)   State = 0x0f8d91480ba29c5a46528d0f87591b75
(12) Restoring &session-state
(12)   &session-state:Framed-MTU = 994
(12)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(12)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(12)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(12)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(12)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(12)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(12) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(12)   authorize {
(12)     policy filter_username {
(12)       if (&User-Name) {
(12)       if (&User-Name)  -> TRUE
(12)       if (&User-Name)  {
(12)         if (&User-Name =~ / /) {
(12)         if (&User-Name =~ / /)  -> FALSE
(12)         if (&User-Name =~ /@[^@]*@/ ) {
(12)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(12)         if (&User-Name =~ /\.\./ ) {
(12)         if (&User-Name =~ /\.\./ )  -> FALSE
(12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(12)         if (&User-Name =~ /\.$/)  {
(12)         if (&User-Name =~ /\.$/)   -> FALSE
(12)         if (&User-Name =~ /@\./)  {
(12)         if (&User-Name =~ /@\./)   -> FALSE
(12)       } # if (&User-Name)  = notfound
(12)     } # policy filter_username = notfound
(12)     [preprocess] = ok
(12)     [chap] = noop
(12)     [mschap] = noop
(12)     [digest] = noop
(12) suffix: Checking for suffix after "@"
(12) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(12) suffix: No such realm "example.org"
(12)     [suffix] = noop
(12) eap: Peer sent EAP Response (code 2) ID 47 length 1311
(12) eap: No EAP Start, assuming it's an on-going EAP conversation
(12)     [eap] = updated
(12)     [files] = noop
(12)     [expiration] = noop
(12)     [logintime] = noop
(12)     [pap] = noop
(12)   } # authorize = updated
(12) Found Auth-Type = eap
(12) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(12)   authenticate {
(12) eap: Expiring EAP session with state 0x0f8d91480ba29c5a
(12) eap: Finished EAP session with state 0x0f8d91480ba29c5a
(12) eap: Previous EAP request found for state 0x0f8d91480ba29c5a, released from the list
(12) eap: Peer sent packet with method EAP TLS (13)
(12) eap: Calling submodule eap_tls to process data
(12) eap_tls: (TLS) EAP Got final fragment (1305 bytes)
(12) eap_tls: (TLS) EAP Done initial handshake
(12) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write server done
(12) eap_tls: (TLS) recv TLS 1.2 Handshake, Certificate
(12) eap_tls: (TLS) Creating attributes from server certificate
(12) eap_tls:   TLS-Cert-Serial := "56cccd314b10cee4562c4644423a17b12b66b6a9"
(12) eap_tls:   TLS-Cert-Expiration := "250730143243Z"
(12) eap_tls:   TLS-Cert-Valid-Since := "250531143243Z"
(12) eap_tls:   TLS-Cert-Subject := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
(12) eap_tls:   TLS-Cert-Issuer := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
(12) eap_tls:   TLS-Cert-Common-Name := "Example Certificate Authority"
(12) eap_tls: (TLS) Creating attributes from client certificate
(12) eap_tls:   TLS-Client-Cert-Serial := "02"
(12) eap_tls:   TLS-Client-Cert-Expiration := "250730143244Z"
(12) eap_tls:   TLS-Client-Cert-Valid-Since := "250531143244Z"
(12) eap_tls:   TLS-Client-Cert-Subject := "/C=FR/ST=Radius/O=Example Inc./CN=user@example.org/emailAddress=user@example.org"
(12) eap_tls:   TLS-Client-Cert-Issuer := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
(12) eap_tls:   TLS-Client-Cert-Common-Name := "user@example.org"
(12) eap_tls:   TLS-Client-Cert-X509v3-Extended-Key-Usage += "TLS Web Client Authentication"
(12) eap_tls:   TLS-Client-Cert-X509v3-Subject-Key-Identifier += "CC:F4:EA:9D:70:E7:58:65:2F:F3:00:01:52:A7:98:F7:FC:37:52:19"
(12) eap_tls:   TLS-Client-Cert-X509v3-Authority-Key-Identifier += "EE:FF:3B:EF:E9:B7:92:11:C1:1C:00:EA:11:64:7E:7D:E7:FE:96:17"
(12) eap_tls:   TLS-Client-Cert-X509v3-Extended-Key-Usage-OID += "1.3.6.1.5.5.7.3.2"
Certificate chain - 1 cert(s) untrusted
(TLS) untrusted certificate with depth [1] subject name /C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority
(TLS) untrusted certificate with depth [0] subject name /C=FR/ST=Radius/O=Example Inc./CN=user@example.org/emailAddress=user@example.org
(12) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read client certificate
(12) eap_tls: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
(12) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read client key exchange
(12) eap_tls: (TLS) recv TLS 1.2 Handshake, CertificateVerify
(12) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read certificate verify
(12) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read change cipher spec
(12) eap_tls: (TLS) recv TLS 1.2 Handshake, Finished
(12) eap_tls: (TLS) Handshake state - Server SSLv3/TLS read finished
(12) eap_tls: (TLS) send TLS 1.2 ChangeCipherSpec
(12) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(12) eap_tls: (TLS) send TLS 1.2 Handshake, Finished
(12) eap_tls: (TLS) Handshake state - Server SSLv3/TLS write finished
(12) eap_tls: (TLS) Handshake state - SSL negotiation finished successfully
(12) eap_tls: (TLS) Connection Established
(12) eap_tls:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(12) eap_tls:   TLS-Session-Version = "TLS 1.2"
(12) eap: Sending EAP Request (code 1) ID 48 length 61
(12) eap: EAP session adding &reply:State = 0x0f8d91480abd9c5a
(12)     [eap] = handled
(12)   } # authenticate = handled
(12) Using Post-Auth-Type Challenge
(12) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(12)   Challenge { ... } # empty sub-section is ignored
(12) session-state: Saving cached attributes
(12)   Framed-MTU = 994
(12)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(12)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Certificate"
(12)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(12)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, CertificateVerify"
(12)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(12)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(12)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(12)   TLS-Session-Version = "TLS 1.2"
(12) Sent Access-Challenge Id 14 from 10.45.0.1:1812 to 10.45.0.2:50371 length 119
(12)   EAP-Message = 0x0130003d0d8000000033140303000101160303002839611dac56313fec4c8efdd3520fc727238780f4c78eaf958c68ce148b75aa470f4b7a6e92d46c42
(12)   Message-Authenticator = 0x00000000000000000000000000000000
(12)   State = 0x0f8d91480abd9c5a46528d0f87591b75
(12) Finished request
Waking up in 4.8 seconds.
(13) Received Access-Request Id 15 from 10.45.0.2:50371 to 10.45.0.1:1812 length 186
(13)   Message-Authenticator = 0x6f8401f85cf921cae38739f04108b5a8
(13)   User-Name = "user@example.org"
(13)   NAS-IP-Address = 10.45.0.2
(13)   Called-Station-Id = "08-00-27-9D-42-72:"
(13)   NAS-Port-Type = Wireless-802.11
(13)   Service-Type = Framed-User
(13)   Calling-Station-Id = "08-00-27-51-7F-EF"
(13)   Connect-Info = "CONNECT 0Mbps 802.11b"
(13)   Acct-Session-Id = "0C9E998AC12AFA5C"
(13)   Framed-MTU = 1400
(13)   EAP-Message = 0x023000060d00
(13)   State = 0x0f8d91480abd9c5a46528d0f87591b75
(13) Restoring &session-state
(13)   &session-state:Framed-MTU = 994
(13)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
(13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(13)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Certificate"
(13)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(13)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, CertificateVerify"
(13)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(13)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(13)   &session-state:TLS-Session-Version = "TLS 1.2"
(13) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
(13)   authorize {
(13)     policy filter_username {
(13)       if (&User-Name) {
(13)       if (&User-Name)  -> TRUE
(13)       if (&User-Name)  {
(13)         if (&User-Name =~ / /) {
(13)         if (&User-Name =~ / /)  -> FALSE
(13)         if (&User-Name =~ /@[^@]*@/ ) {
(13)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(13)         if (&User-Name =~ /\.\./ ) {
(13)         if (&User-Name =~ /\.\./ )  -> FALSE
(13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(13)         if (&User-Name =~ /\.$/)  {
(13)         if (&User-Name =~ /\.$/)   -> FALSE
(13)         if (&User-Name =~ /@\./)  {
(13)         if (&User-Name =~ /@\./)   -> FALSE
(13)       } # if (&User-Name)  = notfound
(13)     } # policy filter_username = notfound
(13)     [preprocess] = ok
(13)     [chap] = noop
(13)     [mschap] = noop
(13)     [digest] = noop
(13) suffix: Checking for suffix after "@"
(13) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
(13) suffix: No such realm "example.org"
(13)     [suffix] = noop
(13) eap: Peer sent EAP Response (code 2) ID 48 length 6
(13) eap: No EAP Start, assuming it's an on-going EAP conversation
(13)     [eap] = updated
(13)     [files] = noop
(13)     [expiration] = noop
(13)     [logintime] = noop
(13)     [pap] = noop
(13)   } # authorize = updated
(13) Found Auth-Type = eap
(13) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
(13)   authenticate {
(13) eap: Expiring EAP session with state 0x0f8d91480abd9c5a
(13) eap: Finished EAP session with state 0x0f8d91480abd9c5a
(13) eap: Previous EAP request found for state 0x0f8d91480abd9c5a, released from the list
(13) eap: Peer sent packet with method EAP TLS (13)
(13) eap: Calling submodule eap_tls to process data
(13) eap_tls: (TLS) Peer ACKed our handshake fragment.  handshake is finished
(13) eap: Sending EAP Success (code 3) ID 48 length 4
(13) eap: Freeing handler
(13)     [eap] = ok
(13)   } # authenticate = ok
(13) # Executing section post-auth from file /etc/freeradius/3.0/sites-enabled/default
(13)   post-auth {
(13)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
(13)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
(13)     update {
(13)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, CertificateRequest'
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Certificate'
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, CertificateVerify'
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
(13)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
(13)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
(13)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
(13)     } # update = noop
(13)     [exec] = noop
(13)     policy remove_reply_message_if_eap {
(13)       if (&reply:EAP-Message && &reply:Reply-Message) {
(13)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(13)       else {
(13)         [noop] = noop
(13)       } # else = noop
(13)     } # policy remove_reply_message_if_eap = noop
(13)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
(13)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
(13)   } # post-auth = noop
(13) Sent Access-Accept Id 15 from 10.45.0.1:1812 to 10.45.0.2:50371 length 184
(13)   MS-MPPE-Recv-Key = 0x6305263b4cdff6bdf38aefc01add3f76196a031787ef562b7d9303e85add760a
(13)   MS-MPPE-Send-Key = 0x59e461df305d60b16a6423e25b39d6baee2798e8045505b941572ae45464db73
(13)   EAP-Message = 0x03300004
(13)   Message-Authenticator = 0x00000000000000000000000000000000
(13)   User-Name = "user@example.org"
(13)   Framed-MTU += 994
(13) Finished request
Waking up in 4.8 seconds.
(7) Cleaning up request packet ID 9 with timestamp +683 due to cleanup_delay was reached
(8) Cleaning up request packet ID 10 with timestamp +683 due to cleanup_delay was reached
(9) Cleaning up request packet ID 11 with timestamp +684 due to cleanup_delay was reached
(10) Cleaning up request packet ID 12 with timestamp +684 due to cleanup_delay was reached
(11) Cleaning up request packet ID 13 with timestamp +684 due to cleanup_delay was reached
(12) Cleaning up request packet ID 14 with timestamp +684 due to cleanup_delay was reached
(13) Cleaning up request packet ID 15 with timestamp +684 due to cleanup_delay was reached
Ready to process requests
