Mon Mar  3 12:46:37 2025 : Debug: Server was built with: 
Mon Mar  3 12:46:37 2025 : Debug:   accounting               : yes
Mon Mar  3 12:46:37 2025 : Debug:   authentication           : yes
Mon Mar  3 12:46:37 2025 : Debug:   ascend-binary-attributes : yes
Mon Mar  3 12:46:37 2025 : Debug:   coa                      : yes
Mon Mar  3 12:46:37 2025 : Debug:   control-socket           : yes
Mon Mar  3 12:46:37 2025 : Debug:   detail                   : yes
Mon Mar  3 12:46:37 2025 : Debug:   dhcp                     : yes
Mon Mar  3 12:46:37 2025 : Debug:   dynamic-clients          : yes
Mon Mar  3 12:46:37 2025 : Debug:   osfc2                    : no
Mon Mar  3 12:46:37 2025 : Debug:   proxy                    : yes
Mon Mar  3 12:46:37 2025 : Debug:   regex-pcre               : yes
Mon Mar  3 12:46:37 2025 : Debug:   regex-posix              : no
Mon Mar  3 12:46:37 2025 : Debug:   regex-posix-extended     : no
Mon Mar  3 12:46:37 2025 : Debug:   session-management       : yes
Mon Mar  3 12:46:37 2025 : Debug:   stats                    : yes
Mon Mar  3 12:46:37 2025 : Debug:   systemd                  : yes
Mon Mar  3 12:46:37 2025 : Debug:   tcp                      : yes
Mon Mar  3 12:46:37 2025 : Debug:   threads                  : yes
Mon Mar  3 12:46:37 2025 : Debug:   tls                      : yes
Mon Mar  3 12:46:37 2025 : Debug:   unlang                   : yes
Mon Mar  3 12:46:37 2025 : Debug:   vmps                     : yes
Mon Mar  3 12:46:37 2025 : Debug:   developer                : no
Mon Mar  3 12:46:37 2025 : Debug: Server core libs:
Mon Mar  3 12:46:37 2025 : Debug:   freeradius-server        : 3.0.26
Mon Mar  3 12:46:37 2025 : Debug:   talloc                   : 2.3.*
Mon Mar  3 12:46:37 2025 : Debug:   ssl                      : 3.0.0b dev
Mon Mar  3 12:46:37 2025 : Debug:   pcre                     : 8.39 2016-06-14
Mon Mar  3 12:46:37 2025 : Debug: Endianness:
Mon Mar  3 12:46:37 2025 : Debug:   little
Mon Mar  3 12:46:37 2025 : Debug: Compilation flags:
Mon Mar  3 12:46:37 2025 : Debug:   cppflags : -Wdate-time -D_FORTIFY_SOURCE=2
Mon Mar  3 12:46:37 2025 : Debug:   cflags   : -I. -Isrc -include src/freeradius-devel/autoconf.h -include src/freeradius-devel/build.h -include src/freeradius-devel/features.h -include src/freeradius-devel/radpaths.h -fno-strict-aliasing -Wno-date-time -g -O2 -ffile-prefix-map=/build/freeradius-YGY1xt/freeradius-3.0.26~dfsg~git20220223.1.00ed0241fa=. -flto=auto -ffat-lto-objects -flto=auto -ffat-lto-objects -fstack-protector-strong -Wformat -Werror=format-security -Wall -std=c99 -D_GNU_SOURCE -D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS -DOPENSSL_NO_KRB5 -DNDEBUG -DIS_MODULE=1
Mon Mar  3 12:46:37 2025 : Debug:   ldflags  :  -Wl,-Bsymbolic-functions -flto=auto -ffat-lto-objects -flto=auto -Wl,-z,relro -Wl,-z,now 
Mon Mar  3 12:46:37 2025 : Debug:   libs     : -lcrypto -lssl -ltalloc -latomic -lpcre -lcap -lnsl -lresolv -ldl -lpthread -lreadline
Mon Mar  3 12:46:37 2025 : Debug:   
Mon Mar  3 12:46:37 2025 : Info: FreeRADIUS Version 3.0.26
Mon Mar  3 12:46:37 2025 : Info: Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
Mon Mar  3 12:46:37 2025 : Info: There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
Mon Mar  3 12:46:37 2025 : Info: PARTICULAR PURPOSE
Mon Mar  3 12:46:37 2025 : Info: You may redistribute copies of FreeRADIUS under the terms of the
Mon Mar  3 12:46:37 2025 : Info: GNU General Public License
Mon Mar  3 12:46:37 2025 : Info: For more information about these matters, see the file named COPYRIGHT
Mon Mar  3 12:46:37 2025 : Info: Starting - reading configuration files ...
Mon Mar  3 12:46:37 2025 : Debug: including dictionary file /usr/share/freeradius/dictionary
Mon Mar  3 12:46:37 2025 : Debug: including dictionary file /usr/share/freeradius/dictionary.dhcp
Mon Mar  3 12:46:37 2025 : Debug: including dictionary file /usr/share/freeradius/dictionary.vqp
Mon Mar  3 12:46:37 2025 : Debug: including dictionary file /etc/freeradius/3.0/dictionary
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/radiusd.conf
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/proxy.conf
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/clients.conf
Mon Mar  3 12:46:37 2025 : Debug: including files in directory /etc/freeradius/3.0/mods-enabled/
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/echo
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/detail
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/detail.log
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/passwd
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/ntlm_auth
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/dynamic_clients
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/eap
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/digest
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/utf8
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/chap
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/logintime
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/preprocess
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/exec
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/expr
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/files
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/unix
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/sradutmp
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/unpack
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/cache_eap
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/mschap
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/pap
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/expiration
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/realm
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/soh
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/linelog
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/replicate
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/mods-enabled/radutmp
Mon Mar  3 12:46:37 2025 : Debug: including files in directory /etc/freeradius/3.0/policy.d/
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/filter
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/rfc7542
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/accounting
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/moonshot-targeted-ids
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/eap
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/debug
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/canonicalization
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/cui
Mon Mar  3 12:46:37 2025 : Debug: OPTIMIZING (${policy.cui_require_operator_name} == yes) --> FALSE
Mon Mar  3 12:46:37 2025 : Debug: OPTIMIZING (no == yes) --> FALSE
Mon Mar  3 12:46:37 2025 : Debug: OPTIMIZING (${policy.cui_require_operator_name} == yes) --> FALSE
Mon Mar  3 12:46:37 2025 : Debug: OPTIMIZING (no == yes) --> FALSE
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/dhcp
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/control
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/operator-name
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/policy.d/abfab-tr
Mon Mar  3 12:46:37 2025 : Debug: including files in directory /etc/freeradius/3.0/sites-enabled/
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/sites-enabled/inner-tunnel
Mon Mar  3 12:46:37 2025 : Debug: including configuration file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 12:46:37 2025 : Debug: main {
Mon Mar  3 12:46:37 2025 : Debug:  security {
Mon Mar  3 12:46:37 2025 : Debug:  	user = "freerad"
Mon Mar  3 12:46:37 2025 : Debug:  	group = "freerad"
Mon Mar  3 12:46:37 2025 : Debug:  	allow_core_dumps = no
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[557]: The item 'max_attributes' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[574]: The item 'reject_delay' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[594]: The item 'status_server' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[692]: The item 'require_message_authenticator' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[779]: The item 'limit_proxy_state' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Debug: 	name = "freeradius"
Mon Mar  3 12:46:37 2025 : Debug: 	prefix = "/usr"
Mon Mar  3 12:46:37 2025 : Debug: 	localstatedir = "/var"
Mon Mar  3 12:46:37 2025 : Debug: 	logdir = "/var/log/freeradius"
Mon Mar  3 12:46:37 2025 : Debug: 	run_dir = "/var/run/freeradius"
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[85]: The item 'sysconfdir' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[97]: The item 'confdir' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[99]: The item 'certdir' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[104]: The item 'db_dir' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[138]: The item 'libdir' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[149]: The item 'pidfile' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[170]: The item 'correct_escapes' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[224]: The item 'max_request_time' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[243]: The item 'cleanup_delay' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[280]: The item 'hostname_lookups' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[413]: The item 'checkrad' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[800]: The item 'proxy_requests' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Debug: }
Mon Mar  3 12:46:37 2025 : Debug: main {
Mon Mar  3 12:46:37 2025 : Debug: 	name = "freeradius"
Mon Mar  3 12:46:37 2025 : Debug: 	prefix = "/usr"
Mon Mar  3 12:46:37 2025 : Debug: 	localstatedir = "/var"
Mon Mar  3 12:46:37 2025 : Debug: 	sbindir = "/usr/sbin"
Mon Mar  3 12:46:37 2025 : Debug: 	logdir = "/var/log/freeradius"
Mon Mar  3 12:46:37 2025 : Debug: 	run_dir = "/var/run/freeradius"
Mon Mar  3 12:46:37 2025 : Debug: 	libdir = "/usr/lib/freeradius"
Mon Mar  3 12:46:37 2025 : Debug: 	radacctdir = "/var/log/freeradius/radacct"
Mon Mar  3 12:46:37 2025 : Debug: 	hostname_lookups = no
Mon Mar  3 12:46:37 2025 : Debug: 	max_request_time = 30
Mon Mar  3 12:46:37 2025 : Debug: 	cleanup_delay = 5
Mon Mar  3 12:46:37 2025 : Debug: 	max_requests = 16384
Mon Mar  3 12:46:37 2025 : Debug: 	postauth_client_lost = no
Mon Mar  3 12:46:37 2025 : Debug: 	pidfile = "/var/run/freeradius/freeradius.pid"
Mon Mar  3 12:46:37 2025 : Debug: 	checkrad = "/usr/sbin/checkrad"
Mon Mar  3 12:46:37 2025 : Debug: 	debug_level = 0
Mon Mar  3 12:46:37 2025 : Debug: 	proxy_requests = yes
Mon Mar  3 12:46:37 2025 : Debug:  log {
Mon Mar  3 12:46:37 2025 : Debug:  	stripped_names = no
Mon Mar  3 12:46:37 2025 : Debug:  	auth = no
Mon Mar  3 12:46:37 2025 : Debug:  	auth_badpass = no
Mon Mar  3 12:46:37 2025 : Debug:  	auth_goodpass = no
Mon Mar  3 12:46:37 2025 : Debug:  	colourise = yes
Mon Mar  3 12:46:37 2025 : Debug:  	msg_denied = "You are already logged in - access denied"
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[309]: The item 'destination' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[326]: The item 'file' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[334]: The item 'syslog_facility' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Debug:  resources {
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Debug:  security {
Mon Mar  3 12:46:37 2025 : Debug:  	max_attributes = 200
Mon Mar  3 12:46:37 2025 : Debug:  	reject_delay = 1.000000
Mon Mar  3 12:46:37 2025 : Debug:  	status_server = yes
Mon Mar  3 12:46:37 2025 : Debug:  	require_message_authenticator = "auto"
Mon Mar  3 12:46:37 2025 : Debug:  	limit_proxy_state = "auto"
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[85]: The item 'sysconfdir' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[97]: The item 'confdir' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[99]: The item 'certdir' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[104]: The item 'db_dir' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Warning: /etc/freeradius/3.0/radiusd.conf[170]: The item 'correct_escapes' is defined, but is unused by the configuration
Mon Mar  3 12:46:37 2025 : Debug: }
Mon Mar  3 12:46:37 2025 : Debug: radiusd: #### Loading Realms and Home Servers ####
Mon Mar  3 12:46:37 2025 : Debug:  proxy server {
Mon Mar  3 12:46:37 2025 : Debug:  	retry_delay = 5
Mon Mar  3 12:46:37 2025 : Debug:  	retry_count = 3
Mon Mar  3 12:46:37 2025 : Debug:  	default_fallback = no
Mon Mar  3 12:46:37 2025 : Debug:  	dead_time = 120
Mon Mar  3 12:46:37 2025 : Debug:  	wake_all_if_all_dead = no
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Debug:  home_server localhost {
Mon Mar  3 12:46:37 2025 : Debug:  	ipaddr = 127.0.0.1
Mon Mar  3 12:46:37 2025 : Debug:  	port = 1812
Mon Mar  3 12:46:37 2025 : Debug:  	type = "auth"
Mon Mar  3 12:46:37 2025 : Debug:  	secret = "testing123"
Mon Mar  3 12:46:37 2025 : Debug:  	response_window = 20.000000
Mon Mar  3 12:46:37 2025 : Debug:  	response_timeouts = 1
Mon Mar  3 12:46:37 2025 : Debug:  	max_outstanding = 65536
Mon Mar  3 12:46:37 2025 : Debug:  	zombie_period = 40
Mon Mar  3 12:46:37 2025 : Debug:  	status_check = "status-server"
Mon Mar  3 12:46:37 2025 : Debug:  	ping_interval = 30
Mon Mar  3 12:46:37 2025 : Debug:  	check_interval = 30
Mon Mar  3 12:46:37 2025 : Debug:  	check_timeout = 4
Mon Mar  3 12:46:37 2025 : Debug:  	num_answers_to_alive = 3
Mon Mar  3 12:46:37 2025 : Debug:  	revive_interval = 120
Mon Mar  3 12:46:37 2025 : Debug:   limit {
Mon Mar  3 12:46:37 2025 : Debug:   	max_connections = 16
Mon Mar  3 12:46:37 2025 : Debug:   	max_requests = 0
Mon Mar  3 12:46:37 2025 : Debug:   	lifetime = 0
Mon Mar  3 12:46:37 2025 : Debug:   	idle_timeout = 0
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   coa {
Mon Mar  3 12:46:37 2025 : Debug:   	irt = 2
Mon Mar  3 12:46:37 2025 : Debug:   	mrt = 16
Mon Mar  3 12:46:37 2025 : Debug:   	mrc = 5
Mon Mar  3 12:46:37 2025 : Debug:   	mrd = 30
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Debug:  home_server_pool my_auth_failover {
Mon Mar  3 12:46:37 2025 : Debug: 	type = fail-over
Mon Mar  3 12:46:37 2025 : Debug: 	home_server = localhost
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Debug:  realm example.com {
Mon Mar  3 12:46:37 2025 : Debug: 	auth_pool = my_auth_failover
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Debug:  realm LOCAL {
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Debug: radiusd: #### Loading Clients ####
Mon Mar  3 12:46:37 2025 : Debug:  client localhost {
Mon Mar  3 12:46:37 2025 : Debug:  	ipaddr = 127.0.0.1
Mon Mar  3 12:46:37 2025 : Debug:  	secret = "testing123"
Mon Mar  3 12:46:37 2025 : Debug:  	nas_type = "other"
Mon Mar  3 12:46:37 2025 : Debug:  	proto = "*"
Mon Mar  3 12:46:37 2025 : Debug:   limit {
Mon Mar  3 12:46:37 2025 : Debug:   	max_connections = 16
Mon Mar  3 12:46:37 2025 : Debug:   	lifetime = 0
Mon Mar  3 12:46:37 2025 : Debug:   	idle_timeout = 30
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Debug: Adding client 127.0.0.1/32 (127.0.0.1) to prefix tree 32
Mon Mar  3 12:46:37 2025 : Debug:  client localhost_ipv6 {
Mon Mar  3 12:46:37 2025 : Debug:  	ipv6addr = ::1
Mon Mar  3 12:46:37 2025 : Debug:  	secret = "testing123"
Mon Mar  3 12:46:37 2025 : Debug:   limit {
Mon Mar  3 12:46:37 2025 : Debug:   	max_connections = 16
Mon Mar  3 12:46:37 2025 : Debug:   	lifetime = 0
Mon Mar  3 12:46:37 2025 : Debug:   	idle_timeout = 30
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Debug: Adding client ::1/128 (::1) to prefix tree 128
Mon Mar  3 12:46:37 2025 : Debug:  client UE {
Mon Mar  3 12:46:37 2025 : Debug:  	ipaddr = 192.168.58.100
Mon Mar  3 12:46:37 2025 : Debug:  	secret = "0GeykzkV"
Mon Mar  3 12:46:37 2025 : Debug:   limit {
Mon Mar  3 12:46:37 2025 : Debug:   	max_connections = 16
Mon Mar  3 12:46:37 2025 : Debug:   	lifetime = 0
Mon Mar  3 12:46:37 2025 : Debug:   	idle_timeout = 30
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:  }
Mon Mar  3 12:46:37 2025 : Debug: Adding client 192.168.58.100/32 (192.168.58.100) to prefix tree 32
Mon Mar  3 12:46:37 2025 : Info: Debugger not attached
Mon Mar  3 12:46:37 2025 : Info: systemd watchdog is disabled
Mon Mar  3 12:46:37 2025 : Debug:  # Creating Auth-Type = mschap
Mon Mar  3 12:46:37 2025 : Debug:  # Creating Auth-Type = eap
Mon Mar  3 12:46:37 2025 : Debug:  # Creating Auth-Type = PAP
Mon Mar  3 12:46:37 2025 : Debug:  # Creating Auth-Type = CHAP
Mon Mar  3 12:46:37 2025 : Debug:  # Creating Auth-Type = MS-CHAP
Mon Mar  3 12:46:37 2025 : Debug:  # Creating Auth-Type = digest
Mon Mar  3 12:46:37 2025 : Debug:  # Creating Autz-Type = New-TLS-Connection
Mon Mar  3 12:46:37 2025 : Debug: radiusd: #### Instantiating modules ####
Mon Mar  3 12:46:37 2025 : Debug:  modules {
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_exec with path: /usr/lib/freeradius/rlm_exec.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_exec, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_exec
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "echo" from file /etc/freeradius/3.0/mods-enabled/echo
Mon Mar  3 12:46:37 2025 : Debug:   exec echo {
Mon Mar  3 12:46:37 2025 : Debug:   	wait = yes
Mon Mar  3 12:46:37 2025 : Debug:   	program = "/bin/echo %{User-Name}"
Mon Mar  3 12:46:37 2025 : Debug:   	input_pairs = "request"
Mon Mar  3 12:46:37 2025 : Debug:   	output_pairs = "reply"
Mon Mar  3 12:46:37 2025 : Debug:   	shell_escape = yes
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_detail with path: /usr/lib/freeradius/rlm_detail.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_detail, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_detail
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "detail" from file /etc/freeradius/3.0/mods-enabled/detail
Mon Mar  3 12:46:37 2025 : Debug:   detail {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
Mon Mar  3 12:46:37 2025 : Debug:   	header = "%t"
Mon Mar  3 12:46:37 2025 : Debug:   	permissions = 384
Mon Mar  3 12:46:37 2025 : Debug:   	locking = no
Mon Mar  3 12:46:37 2025 : Debug:   	escape_filenames = no
Mon Mar  3 12:46:37 2025 : Debug:   	log_packet_header = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "auth_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
Mon Mar  3 12:46:37 2025 : Debug:   detail auth_log {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d"
Mon Mar  3 12:46:37 2025 : Debug:   	header = "%t"
Mon Mar  3 12:46:37 2025 : Debug:   	permissions = 384
Mon Mar  3 12:46:37 2025 : Debug:   	locking = no
Mon Mar  3 12:46:37 2025 : Debug:   	escape_filenames = no
Mon Mar  3 12:46:37 2025 : Debug:   	log_packet_header = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "reply_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
Mon Mar  3 12:46:37 2025 : Debug:   detail reply_log {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d"
Mon Mar  3 12:46:37 2025 : Debug:   	header = "%t"
Mon Mar  3 12:46:37 2025 : Debug:   	permissions = 384
Mon Mar  3 12:46:37 2025 : Debug:   	locking = no
Mon Mar  3 12:46:37 2025 : Debug:   	escape_filenames = no
Mon Mar  3 12:46:37 2025 : Debug:   	log_packet_header = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "pre_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
Mon Mar  3 12:46:37 2025 : Debug:   detail pre_proxy_log {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/pre-proxy-detail-%Y%m%d"
Mon Mar  3 12:46:37 2025 : Debug:   	header = "%t"
Mon Mar  3 12:46:37 2025 : Debug:   	permissions = 384
Mon Mar  3 12:46:37 2025 : Debug:   	locking = no
Mon Mar  3 12:46:37 2025 : Debug:   	escape_filenames = no
Mon Mar  3 12:46:37 2025 : Debug:   	log_packet_header = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "post_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
Mon Mar  3 12:46:37 2025 : Debug:   detail post_proxy_log {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/post-proxy-detail-%Y%m%d"
Mon Mar  3 12:46:37 2025 : Debug:   	header = "%t"
Mon Mar  3 12:46:37 2025 : Debug:   	permissions = 384
Mon Mar  3 12:46:37 2025 : Debug:   	locking = no
Mon Mar  3 12:46:37 2025 : Debug:   	escape_filenames = no
Mon Mar  3 12:46:37 2025 : Debug:   	log_packet_header = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_passwd with path: /usr/lib/freeradius/rlm_passwd.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_passwd, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_passwd
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "etc_passwd" from file /etc/freeradius/3.0/mods-enabled/passwd
Mon Mar  3 12:46:37 2025 : Debug:   passwd etc_passwd {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/etc/passwd"
Mon Mar  3 12:46:37 2025 : Debug:   	format = "*User-Name:Crypt-Password:"
Mon Mar  3 12:46:37 2025 : Debug:   	delimiter = ":"
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_nislike = no
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_empty = yes
Mon Mar  3 12:46:37 2025 : Debug:   	allow_multiple_keys = no
Mon Mar  3 12:46:37 2025 : Debug:   	hash_size = 100
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "ntlm_auth" from file /etc/freeradius/3.0/mods-enabled/ntlm_auth
Mon Mar  3 12:46:37 2025 : Debug:   exec ntlm_auth {
Mon Mar  3 12:46:37 2025 : Debug:   	wait = yes
Mon Mar  3 12:46:37 2025 : Debug:   	program = "/path/to/ntlm_auth --request-nt-key --domain=MYDOMAIN --username=%{mschap:User-Name} --password=%{User-Password}"
Mon Mar  3 12:46:37 2025 : Debug:   	shell_escape = yes
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_dynamic_clients with path: /usr/lib/freeradius/rlm_dynamic_clients.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_dynamic_clients, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_dynamic_clients
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "dynamic_clients" from file /etc/freeradius/3.0/mods-enabled/dynamic_clients
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_eap with path: /usr/lib/freeradius/rlm_eap.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_eap, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_eap
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "eap" from file /etc/freeradius/3.0/mods-enabled/eap
Mon Mar  3 12:46:37 2025 : Debug:   eap {
Mon Mar  3 12:46:37 2025 : Debug:   	default_eap_type = "tls"
Mon Mar  3 12:46:37 2025 : Debug:   	timer_expire = 60
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_unknown_eap_types = no
Mon Mar  3 12:46:37 2025 : Debug:   	cisco_accounting_username_bug = no
Mon Mar  3 12:46:37 2025 : Debug:   	max_sessions = 16384
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_digest with path: /usr/lib/freeradius/rlm_digest.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_digest, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_digest
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "digest" from file /etc/freeradius/3.0/mods-enabled/digest
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_utf8 with path: /usr/lib/freeradius/rlm_utf8.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_utf8, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_utf8
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "utf8" from file /etc/freeradius/3.0/mods-enabled/utf8
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_always with path: /usr/lib/freeradius/rlm_always.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_always, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_always
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "reject" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   always reject {
Mon Mar  3 12:46:37 2025 : Debug:   	rcode = "reject"
Mon Mar  3 12:46:37 2025 : Debug:   	simulcount = 0
Mon Mar  3 12:46:37 2025 : Debug:   	mpp = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "fail" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   always fail {
Mon Mar  3 12:46:37 2025 : Debug:   	rcode = "fail"
Mon Mar  3 12:46:37 2025 : Debug:   	simulcount = 0
Mon Mar  3 12:46:37 2025 : Debug:   	mpp = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "ok" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   always ok {
Mon Mar  3 12:46:37 2025 : Debug:   	rcode = "ok"
Mon Mar  3 12:46:37 2025 : Debug:   	simulcount = 0
Mon Mar  3 12:46:37 2025 : Debug:   	mpp = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "handled" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   always handled {
Mon Mar  3 12:46:37 2025 : Debug:   	rcode = "handled"
Mon Mar  3 12:46:37 2025 : Debug:   	simulcount = 0
Mon Mar  3 12:46:37 2025 : Debug:   	mpp = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "invalid" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   always invalid {
Mon Mar  3 12:46:37 2025 : Debug:   	rcode = "invalid"
Mon Mar  3 12:46:37 2025 : Debug:   	simulcount = 0
Mon Mar  3 12:46:37 2025 : Debug:   	mpp = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "userlock" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   always userlock {
Mon Mar  3 12:46:37 2025 : Debug:   	rcode = "userlock"
Mon Mar  3 12:46:37 2025 : Debug:   	simulcount = 0
Mon Mar  3 12:46:37 2025 : Debug:   	mpp = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "notfound" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   always notfound {
Mon Mar  3 12:46:37 2025 : Debug:   	rcode = "notfound"
Mon Mar  3 12:46:37 2025 : Debug:   	simulcount = 0
Mon Mar  3 12:46:37 2025 : Debug:   	mpp = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "noop" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   always noop {
Mon Mar  3 12:46:37 2025 : Debug:   	rcode = "noop"
Mon Mar  3 12:46:37 2025 : Debug:   	simulcount = 0
Mon Mar  3 12:46:37 2025 : Debug:   	mpp = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "updated" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   always updated {
Mon Mar  3 12:46:37 2025 : Debug:   	rcode = "updated"
Mon Mar  3 12:46:37 2025 : Debug:   	simulcount = 0
Mon Mar  3 12:46:37 2025 : Debug:   	mpp = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_chap with path: /usr/lib/freeradius/rlm_chap.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_chap, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_chap
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "chap" from file /etc/freeradius/3.0/mods-enabled/chap
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_logintime with path: /usr/lib/freeradius/rlm_logintime.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_logintime, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_logintime
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "logintime" from file /etc/freeradius/3.0/mods-enabled/logintime
Mon Mar  3 12:46:37 2025 : Debug:   logintime {
Mon Mar  3 12:46:37 2025 : Debug:   	minimum_timeout = 60
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_preprocess with path: /usr/lib/freeradius/rlm_preprocess.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_preprocess, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_preprocess
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "preprocess" from file /etc/freeradius/3.0/mods-enabled/preprocess
Mon Mar  3 12:46:37 2025 : Debug:   preprocess {
Mon Mar  3 12:46:37 2025 : Debug:   	huntgroups = "/etc/freeradius/3.0/mods-config/preprocess/huntgroups"
Mon Mar  3 12:46:37 2025 : Debug:   	hints = "/etc/freeradius/3.0/mods-config/preprocess/hints"
Mon Mar  3 12:46:37 2025 : Debug:   	with_ascend_hack = no
Mon Mar  3 12:46:37 2025 : Debug:   	ascend_channels_per_line = 23
Mon Mar  3 12:46:37 2025 : Debug:   	with_ntdomain_hack = no
Mon Mar  3 12:46:37 2025 : Debug:   	with_specialix_jetstream_hack = no
Mon Mar  3 12:46:37 2025 : Debug:   	with_cisco_vsa_hack = no
Mon Mar  3 12:46:37 2025 : Debug:   	with_alvarion_vsa_hack = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "exec" from file /etc/freeradius/3.0/mods-enabled/exec
Mon Mar  3 12:46:37 2025 : Debug:   exec {
Mon Mar  3 12:46:37 2025 : Debug:   	wait = no
Mon Mar  3 12:46:37 2025 : Debug:   	input_pairs = "request"
Mon Mar  3 12:46:37 2025 : Debug:   	shell_escape = yes
Mon Mar  3 12:46:37 2025 : Debug:   	timeout = 10
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_expr with path: /usr/lib/freeradius/rlm_expr.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_expr, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_expr
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "expr" from file /etc/freeradius/3.0/mods-enabled/expr
Mon Mar  3 12:46:37 2025 : Debug:   expr {
Mon Mar  3 12:46:37 2025 : Debug:   	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /äéöüàâæçèéêëîïôœùûüaÿÄÉÖÜßÀÂÆÇÈÉÊËÎÏÔŒÙÛÜŸ"
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_files with path: /usr/lib/freeradius/rlm_files.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_files, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_files
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "files" from file /etc/freeradius/3.0/mods-enabled/files
Mon Mar  3 12:46:37 2025 : Debug:   files {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/etc/freeradius/3.0/mods-config/files/authorize"
Mon Mar  3 12:46:37 2025 : Debug:   	acctusersfile = "/etc/freeradius/3.0/mods-config/files/accounting"
Mon Mar  3 12:46:37 2025 : Debug:   	preproxy_usersfile = "/etc/freeradius/3.0/mods-config/files/pre-proxy"
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_unix with path: /usr/lib/freeradius/rlm_unix.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_unix, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_unix
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "unix" from file /etc/freeradius/3.0/mods-enabled/unix
Mon Mar  3 12:46:37 2025 : Debug:   unix {
Mon Mar  3 12:46:37 2025 : Debug:   	radwtmp = "/var/log/freeradius/radwtmp"
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Creating attribute Unix-Group
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_radutmp with path: /usr/lib/freeradius/rlm_radutmp.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_radutmp, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_radutmp
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "sradutmp" from file /etc/freeradius/3.0/mods-enabled/sradutmp
Mon Mar  3 12:46:37 2025 : Debug:   radutmp sradutmp {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/var/log/freeradius/sradutmp"
Mon Mar  3 12:46:37 2025 : Debug:   	username = "%{User-Name}"
Mon Mar  3 12:46:37 2025 : Debug:   	case_sensitive = yes
Mon Mar  3 12:46:37 2025 : Debug:   	check_with_nas = yes
Mon Mar  3 12:46:37 2025 : Debug:   	permissions = 420
Mon Mar  3 12:46:37 2025 : Debug:   	caller_id = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_unpack with path: /usr/lib/freeradius/rlm_unpack.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_unpack, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_unpack
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "unpack" from file /etc/freeradius/3.0/mods-enabled/unpack
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_cache with path: /usr/lib/freeradius/rlm_cache.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_cache, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_cache
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "cache_eap" from file /etc/freeradius/3.0/mods-enabled/cache_eap
Mon Mar  3 12:46:37 2025 : Debug:   cache cache_eap {
Mon Mar  3 12:46:37 2025 : Debug:   	driver = "rlm_cache_rbtree"
Mon Mar  3 12:46:37 2025 : Debug:   	key = "%{%{control:State}:-%{%{reply:State}:-%{State}}}"
Mon Mar  3 12:46:37 2025 : Debug:   	ttl = 15
Mon Mar  3 12:46:37 2025 : Debug:   	max_entries = 0
Mon Mar  3 12:46:37 2025 : Debug:   	epoch = 0
Mon Mar  3 12:46:37 2025 : Debug:   	add_stats = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_mschap with path: /usr/lib/freeradius/rlm_mschap.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_mschap, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_mschap
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "mschap" from file /etc/freeradius/3.0/mods-enabled/mschap
Mon Mar  3 12:46:37 2025 : Debug:   mschap {
Mon Mar  3 12:46:37 2025 : Debug:   	use_mppe = yes
Mon Mar  3 12:46:37 2025 : Debug:   	require_encryption = no
Mon Mar  3 12:46:37 2025 : Debug:   	require_strong = no
Mon Mar  3 12:46:37 2025 : Debug:   	with_ntdomain_hack = yes
Mon Mar  3 12:46:37 2025 : Debug:    passchange {
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:   	allow_retry = yes
Mon Mar  3 12:46:37 2025 : Debug:   	winbind_retry_with_normalised_username = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_pap with path: /usr/lib/freeradius/rlm_pap.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_pap, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_pap
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "pap" from file /etc/freeradius/3.0/mods-enabled/pap
Mon Mar  3 12:46:37 2025 : Debug:   pap {
Mon Mar  3 12:46:37 2025 : Debug:   	normalise = yes
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_expiration with path: /usr/lib/freeradius/rlm_expiration.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_expiration, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_expiration
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "expiration" from file /etc/freeradius/3.0/mods-enabled/expiration
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_realm with path: /usr/lib/freeradius/rlm_realm.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_realm, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_realm
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "IPASS" from file /etc/freeradius/3.0/mods-enabled/realm
Mon Mar  3 12:46:37 2025 : Debug:   realm IPASS {
Mon Mar  3 12:46:37 2025 : Debug:   	format = "prefix"
Mon Mar  3 12:46:37 2025 : Debug:   	delimiter = "/"
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_default = no
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_null = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "suffix" from file /etc/freeradius/3.0/mods-enabled/realm
Mon Mar  3 12:46:37 2025 : Debug:   realm suffix {
Mon Mar  3 12:46:37 2025 : Debug:   	format = "suffix"
Mon Mar  3 12:46:37 2025 : Debug:   	delimiter = "@"
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_default = no
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_null = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "bangpath" from file /etc/freeradius/3.0/mods-enabled/realm
Mon Mar  3 12:46:37 2025 : Debug:   realm bangpath {
Mon Mar  3 12:46:37 2025 : Debug:   	format = "prefix"
Mon Mar  3 12:46:37 2025 : Debug:   	delimiter = "!"
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_default = no
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_null = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "realmpercent" from file /etc/freeradius/3.0/mods-enabled/realm
Mon Mar  3 12:46:37 2025 : Debug:   realm realmpercent {
Mon Mar  3 12:46:37 2025 : Debug:   	format = "suffix"
Mon Mar  3 12:46:37 2025 : Debug:   	delimiter = "%"
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_default = no
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_null = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "ntdomain" from file /etc/freeradius/3.0/mods-enabled/realm
Mon Mar  3 12:46:37 2025 : Debug:   realm ntdomain {
Mon Mar  3 12:46:37 2025 : Debug:   	format = "prefix"
Mon Mar  3 12:46:37 2025 : Debug:   	delimiter = "\\"
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_default = no
Mon Mar  3 12:46:37 2025 : Debug:   	ignore_null = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_soh with path: /usr/lib/freeradius/rlm_soh.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_soh, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_soh
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "soh" from file /etc/freeradius/3.0/mods-enabled/soh
Mon Mar  3 12:46:37 2025 : Debug:   soh {
Mon Mar  3 12:46:37 2025 : Debug:   	dhcp = yes
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_linelog with path: /usr/lib/freeradius/rlm_linelog.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_linelog, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_linelog
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "linelog" from file /etc/freeradius/3.0/mods-enabled/linelog
Mon Mar  3 12:46:37 2025 : Debug:   linelog {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/var/log/freeradius/linelog"
Mon Mar  3 12:46:37 2025 : Debug:   	escape_filenames = no
Mon Mar  3 12:46:37 2025 : Debug:   	syslog_severity = "info"
Mon Mar  3 12:46:37 2025 : Debug:   	permissions = 384
Mon Mar  3 12:46:37 2025 : Debug:   	format = "This is a log message for %{User-Name}"
Mon Mar  3 12:46:37 2025 : Debug:   	reference = "messages.%{%{reply:Packet-Type}:-default}"
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "log_accounting" from file /etc/freeradius/3.0/mods-enabled/linelog
Mon Mar  3 12:46:37 2025 : Debug:   linelog log_accounting {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/var/log/freeradius/linelog-accounting"
Mon Mar  3 12:46:37 2025 : Debug:   	escape_filenames = no
Mon Mar  3 12:46:37 2025 : Debug:   	syslog_severity = "info"
Mon Mar  3 12:46:37 2025 : Debug:   	permissions = 384
Mon Mar  3 12:46:37 2025 : Debug:   	format = ""
Mon Mar  3 12:46:37 2025 : Debug:   	reference = "Accounting-Request.%{%{Acct-Status-Type}:-unknown}"
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_replicate with path: /usr/lib/freeradius/rlm_replicate.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_replicate, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_replicate
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "replicate" from file /etc/freeradius/3.0/mods-enabled/replicate
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_attr_filter with path: /usr/lib/freeradius/rlm_attr_filter.so
Mon Mar  3 12:46:37 2025 : Debug: Loaded rlm_attr_filter, checking if it's valid
Mon Mar  3 12:46:37 2025 : Debug:   # Loaded module rlm_attr_filter
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "attr_filter.post-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug:   attr_filter attr_filter.post-proxy {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/etc/freeradius/3.0/mods-config/attr_filter/post-proxy"
Mon Mar  3 12:46:37 2025 : Debug:   	key = "%{Realm}"
Mon Mar  3 12:46:37 2025 : Debug:   	relaxed = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "attr_filter.pre-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug:   attr_filter attr_filter.pre-proxy {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/etc/freeradius/3.0/mods-config/attr_filter/pre-proxy"
Mon Mar  3 12:46:37 2025 : Debug:   	key = "%{Realm}"
Mon Mar  3 12:46:37 2025 : Debug:   	relaxed = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "attr_filter.access_reject" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug:   attr_filter attr_filter.access_reject {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/etc/freeradius/3.0/mods-config/attr_filter/access_reject"
Mon Mar  3 12:46:37 2025 : Debug:   	key = "%{User-Name}"
Mon Mar  3 12:46:37 2025 : Debug:   	relaxed = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "attr_filter.access_challenge" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug:   attr_filter attr_filter.access_challenge {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/etc/freeradius/3.0/mods-config/attr_filter/access_challenge"
Mon Mar  3 12:46:37 2025 : Debug:   	key = "%{User-Name}"
Mon Mar  3 12:46:37 2025 : Debug:   	relaxed = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "attr_filter.accounting_response" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug:   attr_filter attr_filter.accounting_response {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/etc/freeradius/3.0/mods-config/attr_filter/accounting_response"
Mon Mar  3 12:46:37 2025 : Debug:   	key = "%{User-Name}"
Mon Mar  3 12:46:37 2025 : Debug:   	relaxed = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "attr_filter.coa" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug:   attr_filter attr_filter.coa {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/etc/freeradius/3.0/mods-config/attr_filter/coa"
Mon Mar  3 12:46:37 2025 : Debug:   	key = "%{User-Name}"
Mon Mar  3 12:46:37 2025 : Debug:   	relaxed = no
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Loading module "radutmp" from file /etc/freeradius/3.0/mods-enabled/radutmp
Mon Mar  3 12:46:37 2025 : Debug:   radutmp {
Mon Mar  3 12:46:37 2025 : Debug:   	filename = "/var/log/freeradius/radutmp"
Mon Mar  3 12:46:37 2025 : Debug:   	username = "%{User-Name}"
Mon Mar  3 12:46:37 2025 : Debug:   	case_sensitive = yes
Mon Mar  3 12:46:37 2025 : Debug:   	check_with_nas = yes
Mon Mar  3 12:46:37 2025 : Debug:   	permissions = 384
Mon Mar  3 12:46:37 2025 : Debug:   	caller_id = yes
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   instantiate {
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "detail" from file /etc/freeradius/3.0/mods-enabled/detail
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "auth_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
Mon Mar  3 12:46:37 2025 : Debug: rlm_detail (auth_log): 'User-Password' suppressed, will not appear in detail output
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "reply_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "pre_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "post_proxy_log" from file /etc/freeradius/3.0/mods-enabled/detail.log
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "etc_passwd" from file /etc/freeradius/3.0/mods-enabled/passwd
Mon Mar  3 12:46:37 2025 : Debug: rlm_passwd: nfields: 3 keyfield 0(User-Name) listable: no
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "eap" from file /etc/freeradius/3.0/mods-enabled/eap
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_eap_md5 with path: /usr/lib/freeradius/rlm_eap_md5.so
Mon Mar  3 12:46:37 2025 : Debug:    # Linked to sub-module rlm_eap_md5
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_eap_gtc with path: /usr/lib/freeradius/rlm_eap_gtc.so
Mon Mar  3 12:46:37 2025 : Debug:    # Linked to sub-module rlm_eap_gtc
Mon Mar  3 12:46:37 2025 : Debug:    gtc {
Mon Mar  3 12:46:37 2025 : Debug:    	challenge = "Password: "
Mon Mar  3 12:46:37 2025 : Debug:    	auth_type = "PAP"
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_eap_tls with path: /usr/lib/freeradius/rlm_eap_tls.so
Mon Mar  3 12:46:37 2025 : Debug:    # Linked to sub-module rlm_eap_tls
Mon Mar  3 12:46:37 2025 : Debug:    tls {
Mon Mar  3 12:46:37 2025 : Debug:    	tls = "tls-common"
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:    tls-config tls-common {
Mon Mar  3 12:46:37 2025 : Debug:    	verify_depth = 0
Mon Mar  3 12:46:37 2025 : Debug:    	ca_path = "/etc/freeradius/3.0/certs"
Mon Mar  3 12:46:37 2025 : Debug:    	pem_file_type = yes
Mon Mar  3 12:46:37 2025 : Debug:    	private_key_file = "/etc/freeradius/3.0/certs/server.key"
Mon Mar  3 12:46:37 2025 : Debug:    	certificate_file = "/etc/freeradius/3.0/certs/server.pem"
Mon Mar  3 12:46:37 2025 : Debug:    	ca_file = "/etc/freeradius/3.0/certs/ca.pem"
Mon Mar  3 12:46:37 2025 : Debug:    	private_key_password = "3rVmDSLb"
Mon Mar  3 12:46:37 2025 : Debug:    	fragment_size = 1024
Mon Mar  3 12:46:37 2025 : Debug:    	include_length = yes
Mon Mar  3 12:46:37 2025 : Debug:    	auto_chain = yes
Mon Mar  3 12:46:37 2025 : Debug:    	check_crl = no
Mon Mar  3 12:46:37 2025 : Debug:    	check_all_crl = no
Mon Mar  3 12:46:37 2025 : Debug:    	ca_path_reload_interval = 0
Mon Mar  3 12:46:37 2025 : Debug:    	cipher_list = "DEFAULT"
Mon Mar  3 12:46:37 2025 : Debug:    	cipher_server_preference = no
Mon Mar  3 12:46:37 2025 : Debug:    	reject_unknown_intermediate_ca = no
Mon Mar  3 12:46:37 2025 : Debug:    	ecdh_curve = ""
Mon Mar  3 12:46:37 2025 : Debug:    	tls_max_version = "1.2"
Mon Mar  3 12:46:37 2025 : Debug:    	tls_min_version = "1.2"
Mon Mar  3 12:46:37 2025 : Debug:     cache {
Mon Mar  3 12:46:37 2025 : Debug:     	enable = no
Mon Mar  3 12:46:37 2025 : Debug:     	lifetime = 24
Mon Mar  3 12:46:37 2025 : Debug:     	max_entries = 255
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     verify {
Mon Mar  3 12:46:37 2025 : Debug:     	skip_if_ocsp_ok = no
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     ocsp {
Mon Mar  3 12:46:37 2025 : Debug:     	enable = no
Mon Mar  3 12:46:37 2025 : Debug:     	override_cert_url = yes
Mon Mar  3 12:46:37 2025 : Debug:     	url = "http://127.0.0.1/ocsp/"
Mon Mar  3 12:46:37 2025 : Debug:     	use_nonce = yes
Mon Mar  3 12:46:37 2025 : Debug:     	timeout = 0
Mon Mar  3 12:46:37 2025 : Debug:     	softfail = no
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_eap_ttls with path: /usr/lib/freeradius/rlm_eap_ttls.so
Mon Mar  3 12:46:37 2025 : Debug:    # Linked to sub-module rlm_eap_ttls
Mon Mar  3 12:46:37 2025 : Debug:    ttls {
Mon Mar  3 12:46:37 2025 : Debug:    	tls = "tls-common"
Mon Mar  3 12:46:37 2025 : Debug:    	default_eap_type = "tls"
Mon Mar  3 12:46:37 2025 : Debug:    	copy_request_to_tunnel = no
Mon Mar  3 12:46:37 2025 : Debug:    	use_tunneled_reply = no
Mon Mar  3 12:46:37 2025 : Debug:    	virtual_server = "inner-tunnel"
Mon Mar  3 12:46:37 2025 : Debug:    	include_length = yes
Mon Mar  3 12:46:37 2025 : Debug:    	require_client_cert = no
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug: tls: Using cached TLS configuration from previous invocation
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_eap_peap with path: /usr/lib/freeradius/rlm_eap_peap.so
Mon Mar  3 12:46:37 2025 : Debug:    # Linked to sub-module rlm_eap_peap
Mon Mar  3 12:46:37 2025 : Debug:    peap {
Mon Mar  3 12:46:37 2025 : Debug:    	tls = "tls-common"
Mon Mar  3 12:46:37 2025 : Debug:    	default_eap_type = "tls"
Mon Mar  3 12:46:37 2025 : Debug:    	copy_request_to_tunnel = no
Mon Mar  3 12:46:37 2025 : Debug:    	use_tunneled_reply = no
Mon Mar  3 12:46:37 2025 : Debug:    	proxy_tunneled_request_as_eap = yes
Mon Mar  3 12:46:37 2025 : Debug:    	virtual_server = "inner-tunnel"
Mon Mar  3 12:46:37 2025 : Debug:    	soh = no
Mon Mar  3 12:46:37 2025 : Debug:    	require_client_cert = no
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug: tls: Using cached TLS configuration from previous invocation
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_eap_mschapv2 with path: /usr/lib/freeradius/rlm_eap_mschapv2.so
Mon Mar  3 12:46:37 2025 : Debug:    # Linked to sub-module rlm_eap_mschapv2
Mon Mar  3 12:46:37 2025 : Debug:    mschapv2 {
Mon Mar  3 12:46:37 2025 : Debug:    	with_ntdomain_hack = no
Mon Mar  3 12:46:37 2025 : Debug:    	send_error = no
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "reject" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "fail" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "ok" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "handled" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "invalid" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "userlock" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "notfound" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "noop" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "updated" from file /etc/freeradius/3.0/mods-enabled/always
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "logintime" from file /etc/freeradius/3.0/mods-enabled/logintime
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "preprocess" from file /etc/freeradius/3.0/mods-enabled/preprocess
Mon Mar  3 12:46:37 2025 : Debug: reading pairlist file /etc/freeradius/3.0/mods-config/preprocess/huntgroups
Mon Mar  3 12:46:37 2025 : Debug: reading pairlist file /etc/freeradius/3.0/mods-config/preprocess/hints
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "files" from file /etc/freeradius/3.0/mods-enabled/files
Mon Mar  3 12:46:37 2025 : Debug: reading pairlist file /etc/freeradius/3.0/mods-config/files/authorize
Mon Mar  3 12:46:37 2025 : Debug: reading pairlist file /etc/freeradius/3.0/mods-config/files/accounting
Mon Mar  3 12:46:37 2025 : Debug: reading pairlist file /etc/freeradius/3.0/mods-config/files/pre-proxy
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "cache_eap" from file /etc/freeradius/3.0/mods-enabled/cache_eap
Mon Mar  3 12:46:37 2025 : Debug: Loading rlm_cache_rbtree with path: /usr/lib/freeradius/rlm_cache_rbtree.so
Mon Mar  3 12:46:37 2025 : Debug: rlm_cache (cache_eap): Driver rlm_cache_rbtree (module rlm_cache_rbtree) loaded and linked
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "mschap" from file /etc/freeradius/3.0/mods-enabled/mschap
Mon Mar  3 12:46:37 2025 : Debug: rlm_mschap (mschap): using internal authentication
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "pap" from file /etc/freeradius/3.0/mods-enabled/pap
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "expiration" from file /etc/freeradius/3.0/mods-enabled/expiration
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "IPASS" from file /etc/freeradius/3.0/mods-enabled/realm
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "suffix" from file /etc/freeradius/3.0/mods-enabled/realm
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "bangpath" from file /etc/freeradius/3.0/mods-enabled/realm
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "realmpercent" from file /etc/freeradius/3.0/mods-enabled/realm
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "ntdomain" from file /etc/freeradius/3.0/mods-enabled/realm
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "linelog" from file /etc/freeradius/3.0/mods-enabled/linelog
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "log_accounting" from file /etc/freeradius/3.0/mods-enabled/linelog
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "attr_filter.post-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug: reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/post-proxy
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "attr_filter.pre-proxy" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug: reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/pre-proxy
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "attr_filter.access_reject" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug: reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/access_reject
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "attr_filter.access_challenge" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug: reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/access_challenge
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "attr_filter.accounting_response" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug: reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/accounting_response
Mon Mar  3 12:46:37 2025 : Debug:   # Instantiating module "attr_filter.coa" from file /etc/freeradius/3.0/mods-enabled/attr_filter
Mon Mar  3 12:46:37 2025 : Debug: reading pairlist file /etc/freeradius/3.0/mods-config/attr_filter/coa
Mon Mar  3 12:46:37 2025 : Debug:  } # modules
Mon Mar  3 12:46:37 2025 : Debug: radiusd: #### Loading Virtual Servers ####
Mon Mar  3 12:46:37 2025 : Debug: server { # from file /etc/freeradius/3.0/radiusd.conf
Mon Mar  3 12:46:37 2025 : Debug: } # server
Mon Mar  3 12:46:37 2025 : Debug: server inner-tunnel { # from file /etc/freeradius/3.0/sites-enabled/inner-tunnel
Mon Mar  3 12:46:37 2025 : Debug:  authenticate {
Mon Mar  3 12:46:37 2025 : Debug: Compiling Auth-Type PAP for attr Auth-Type
Mon Mar  3 12:46:37 2025 : Debug:   group {
Mon Mar  3 12:46:37 2025 : Debug:    pap
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Compiling Auth-Type CHAP for attr Auth-Type
Mon Mar  3 12:46:37 2025 : Debug:   group {
Mon Mar  3 12:46:37 2025 : Debug:    chap
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Compiling Auth-Type MS-CHAP for attr Auth-Type
Mon Mar  3 12:46:37 2025 : Debug:   group {
Mon Mar  3 12:46:37 2025 : Debug:    mschap
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   mschap
Mon Mar  3 12:46:37 2025 : Debug:   eap
Mon Mar  3 12:46:37 2025 : Debug:  } # authenticate
Mon Mar  3 12:46:37 2025 : Debug:  authorize {
Mon Mar  3 12:46:37 2025 : Debug:   policy filter_username {
Mon Mar  3 12:46:37 2025 : Debug:    if (&User-Name) {
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ / /) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: User-Name contains whitespace'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ /@[^@]*@/) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: Multiple @ in User-Name'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ /\.\./) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: User-Name contains multiple ..s'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ /@/ && !&User-Name =~ /@(.+)\.(.+)$/) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: Realm does not have at least one dot separator'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ /\.$/) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: Realm ends with a dot'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ /@\./) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: Realm begins with a dot'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   chap
Mon Mar  3 12:46:37 2025 : Debug:   mschap
Mon Mar  3 12:46:37 2025 : Debug:   suffix
Mon Mar  3 12:46:37 2025 : Debug:   update {
Mon Mar  3 12:46:37 2025 : Debug:    &control:Proxy-To-Realm := LOCAL
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   eap
Mon Mar  3 12:46:37 2025 : Debug:   files
Mon Mar  3 12:46:37 2025 : Warning: Ignoring "sql" (see raddb/mods-available/README.rst)
Mon Mar  3 12:46:37 2025 : Warning: Ignoring "ldap" (see raddb/mods-available/README.rst)
Mon Mar  3 12:46:37 2025 : Debug:   expiration
Mon Mar  3 12:46:37 2025 : Debug:   logintime
Mon Mar  3 12:46:37 2025 : Debug:   pap
Mon Mar  3 12:46:37 2025 : Debug:  } # authorize
Mon Mar  3 12:46:37 2025 : Debug:  session {
Mon Mar  3 12:46:37 2025 : Debug:   radutmp
Mon Mar  3 12:46:37 2025 : Debug:  } # session
Mon Mar  3 12:46:37 2025 : Debug:  post-proxy {
Mon Mar  3 12:46:37 2025 : Debug:   eap
Mon Mar  3 12:46:37 2025 : Debug:  } # post-proxy
Mon Mar  3 12:46:37 2025 : Debug:  post-auth {
Mon Mar  3 12:46:37 2025 : Info:  # Skipping contents of 'if' as it is always 'false' -- /etc/freeradius/3.0/sites-enabled/inner-tunnel:336
Mon Mar  3 12:46:37 2025 : Debug:   if (false) {
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Mon Mar  3 12:46:37 2025 : Debug:   group {
Mon Mar  3 12:46:37 2025 : Debug:    attr_filter.access_reject
Mon Mar  3 12:46:37 2025 : Debug:    update {
Mon Mar  3 12:46:37 2025 : Debug:     &outer.session-state:Module-Failure-Message := &Module-Failure-Message
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:  } # post-auth
Mon Mar  3 12:46:37 2025 : Debug: } # server inner-tunnel
Mon Mar  3 12:46:37 2025 : Debug: server default { # from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 12:46:37 2025 : Debug:  authenticate {
Mon Mar  3 12:46:37 2025 : Debug: Compiling Auth-Type PAP for attr Auth-Type
Mon Mar  3 12:46:37 2025 : Debug:   group {
Mon Mar  3 12:46:37 2025 : Debug:    pap
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Compiling Auth-Type CHAP for attr Auth-Type
Mon Mar  3 12:46:37 2025 : Debug:   group {
Mon Mar  3 12:46:37 2025 : Debug:    chap
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Compiling Auth-Type MS-CHAP for attr Auth-Type
Mon Mar  3 12:46:37 2025 : Debug:   group {
Mon Mar  3 12:46:37 2025 : Debug:    mschap
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   mschap
Mon Mar  3 12:46:37 2025 : Debug:   digest
Mon Mar  3 12:46:37 2025 : Debug:   eap
Mon Mar  3 12:46:37 2025 : Debug:  } # authenticate
Mon Mar  3 12:46:37 2025 : Debug:  authorize {
Mon Mar  3 12:46:37 2025 : Debug:   policy filter_username {
Mon Mar  3 12:46:37 2025 : Debug:    if (&User-Name) {
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ / /) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: User-Name contains whitespace'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ /@[^@]*@/) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: Multiple @ in User-Name'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ /\.\./) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: User-Name contains multiple ..s'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ /@/ && !&User-Name =~ /@(.+)\.(.+)$/) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: Realm does not have at least one dot separator'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ /\.$/) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: Realm ends with a dot'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     if (&User-Name =~ /@\./) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &Module-Failure-Message += 'Rejected: Realm begins with a dot'
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:      reject
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   preprocess
Mon Mar  3 12:46:37 2025 : Debug:   chap
Mon Mar  3 12:46:37 2025 : Debug:   mschap
Mon Mar  3 12:46:37 2025 : Debug:   digest
Mon Mar  3 12:46:37 2025 : Debug:   suffix
Mon Mar  3 12:46:37 2025 : Debug:   eap
Mon Mar  3 12:46:37 2025 : Debug:   files
Mon Mar  3 12:46:37 2025 : Debug:   expiration
Mon Mar  3 12:46:37 2025 : Debug:   logintime
Mon Mar  3 12:46:37 2025 : Debug:   pap
Mon Mar  3 12:46:37 2025 : Debug: Compiling Autz-Type New-TLS-Connection for attr Autz-Type
Mon Mar  3 12:46:37 2025 : Debug:   group {
Mon Mar  3 12:46:37 2025 : Debug:    ok
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:  } # authorize
Mon Mar  3 12:46:37 2025 : Debug:  preacct {
Mon Mar  3 12:46:37 2025 : Debug:   preprocess
Mon Mar  3 12:46:37 2025 : Debug:   policy acct_unique {
Mon Mar  3 12:46:37 2025 : Debug:    update {
Mon Mar  3 12:46:37 2025 : Debug:     &Tmp-String-9 := "ai:"
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:    if ("%{hex:&Class}" =~ /^%{hex:&Tmp-String-9}/ && "%{string:&Class}" =~ /^ai:([0-9a-f]{32})/) {
Mon Mar  3 12:46:37 2025 : Debug:     update {
Mon Mar  3 12:46:37 2025 : Debug:      &Acct-Unique-Session-Id := "%{md5:%{1},%{Acct-Session-ID}}"
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:    else {
Mon Mar  3 12:46:37 2025 : Debug:     update {
Mon Mar  3 12:46:37 2025 : Debug:      &Acct-Unique-Session-Id := "%{md5:%{User-Name},%{Acct-Session-ID},%{%{NAS-IPv6-Address}:-%{NAS-IP-Address}},%{NAS-Identifier},%{NAS-Port-ID},%{NAS-Port}}"
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:    update {
Mon Mar  3 12:46:37 2025 : Debug:     &Tmp-String-9 !* ANY
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   suffix
Mon Mar  3 12:46:37 2025 : Debug:   files
Mon Mar  3 12:46:37 2025 : Debug:  } # preacct
Mon Mar  3 12:46:37 2025 : Debug:  accounting {
Mon Mar  3 12:46:37 2025 : Debug:   detail
Mon Mar  3 12:46:37 2025 : Debug:   unix
Mon Mar  3 12:46:37 2025 : Debug:   exec
Mon Mar  3 12:46:37 2025 : Debug:   attr_filter.accounting_response
Mon Mar  3 12:46:37 2025 : Debug:  } # accounting
Mon Mar  3 12:46:37 2025 : Debug:  post-proxy {
Mon Mar  3 12:46:37 2025 : Debug:   eap
Mon Mar  3 12:46:37 2025 : Debug:  } # post-proxy
Mon Mar  3 12:46:37 2025 : Debug:  post-auth {
Mon Mar  3 12:46:37 2025 : Debug:   if (&session-state:User-Name && &reply:User-Name && &User-Name && &reply:User-Name == &User-Name) {
Mon Mar  3 12:46:37 2025 : Debug:    update {
Mon Mar  3 12:46:37 2025 : Debug:     &reply:User-Name !* ANY
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   update {
Mon Mar  3 12:46:37 2025 : Debug:    &reply:[*] += &session-state:[*]
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   exec
Mon Mar  3 12:46:37 2025 : Debug:   policy remove_reply_message_if_eap {
Mon Mar  3 12:46:37 2025 : Debug:    if (&reply:EAP-Message && &reply:Reply-Message) {
Mon Mar  3 12:46:37 2025 : Debug:     update {
Mon Mar  3 12:46:37 2025 : Debug:      &reply:Reply-Message !* ANY
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:    else {
Mon Mar  3 12:46:37 2025 : Debug:     noop
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Mon Mar  3 12:46:37 2025 : Debug:   group {
Mon Mar  3 12:46:37 2025 : Debug:    attr_filter.access_reject
Mon Mar  3 12:46:37 2025 : Debug:    eap
Mon Mar  3 12:46:37 2025 : Debug:    policy remove_reply_message_if_eap {
Mon Mar  3 12:46:37 2025 : Debug:     if (&reply:EAP-Message && &reply:Reply-Message) {
Mon Mar  3 12:46:37 2025 : Debug:      update {
Mon Mar  3 12:46:37 2025 : Debug:       &reply:Reply-Message !* ANY
Mon Mar  3 12:46:37 2025 : Debug:      }
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:     else {
Mon Mar  3 12:46:37 2025 : Debug:      noop
Mon Mar  3 12:46:37 2025 : Debug:     }
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Compiling Post-Auth-Type Challenge for attr Post-Auth-Type
Mon Mar  3 12:46:37 2025 : Debug:   group {
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug: Compiling Post-Auth-Type Client-Lost for attr Post-Auth-Type
Mon Mar  3 12:46:37 2025 : Debug:   group {
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:   if (&EAP-Key-Name && &reply:EAP-Session-Id) {
Mon Mar  3 12:46:37 2025 : Debug:    update {
Mon Mar  3 12:46:37 2025 : Debug:     &reply:EAP-Key-Name := &reply:EAP-Session-Id
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug:   }
Mon Mar  3 12:46:37 2025 : Debug:  } # post-auth
Mon Mar  3 12:46:37 2025 : Debug: } # server default
Mon Mar  3 12:46:37 2025 : Debug: Created signal pipe.  Read end FD 5, write end FD 6
Mon Mar  3 12:46:37 2025 : Debug: radiusd: #### Opening IP addresses and Ports ####
Mon Mar  3 12:46:37 2025 : Debug: Loading proto_auth with path: /usr/lib/freeradius/proto_auth.so
Mon Mar  3 12:46:37 2025 : Debug: Loading proto_auth failed: /usr/lib/freeradius/proto_auth.so: cannot open shared object file: No such file or directory - No such file or directory
Mon Mar  3 12:46:37 2025 : Debug: Loading library using linker search path(s)
Mon Mar  3 12:46:37 2025 : Debug: Defaults         : /lib:/usr/lib
Mon Mar  3 12:46:37 2025 : Debug: Failed with error: proto_auth.so: cannot open shared object file: No such file or directory
Mon Mar  3 12:46:37 2025 : Debug: listen {
Mon Mar  3 12:46:37 2025 : Debug:   	type = "auth"
Mon Mar  3 12:46:37 2025 : Debug:   	ipaddr = 127.0.0.1
Mon Mar  3 12:46:37 2025 : Debug:   	port = 18120
Mon Mar  3 12:46:37 2025 : Debug: }
Mon Mar  3 12:46:37 2025 : Debug: Loading proto_auth with path: /usr/lib/freeradius/proto_auth.so
Mon Mar  3 12:46:37 2025 : Debug: Loading proto_auth failed: /usr/lib/freeradius/proto_auth.so: cannot open shared object file: No such file or directory - No such file or directory
Mon Mar  3 12:46:37 2025 : Debug: Loading library using linker search path(s)
Mon Mar  3 12:46:37 2025 : Debug: Defaults         : /lib:/usr/lib
Mon Mar  3 12:46:37 2025 : Debug: Failed with error: proto_auth.so: cannot open shared object file: No such file or directory
Mon Mar  3 12:46:37 2025 : Debug: listen {
Mon Mar  3 12:46:37 2025 : Debug:   	type = "auth"
Mon Mar  3 12:46:37 2025 : Debug:   	ipaddr = *
Mon Mar  3 12:46:37 2025 : Debug:   	port = 0
Mon Mar  3 12:46:37 2025 : Debug:    limit {
Mon Mar  3 12:46:37 2025 : Debug:    	max_connections = 16
Mon Mar  3 12:46:37 2025 : Debug:    	lifetime = 0
Mon Mar  3 12:46:37 2025 : Debug:    	idle_timeout = 30
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug: }
Mon Mar  3 12:46:37 2025 : Debug: Loading proto_acct with path: /usr/lib/freeradius/proto_acct.so
Mon Mar  3 12:46:37 2025 : Debug: Loading proto_acct failed: /usr/lib/freeradius/proto_acct.so: cannot open shared object file: No such file or directory - No such file or directory
Mon Mar  3 12:46:37 2025 : Debug: Loading library using linker search path(s)
Mon Mar  3 12:46:37 2025 : Debug: Defaults         : /lib:/usr/lib
Mon Mar  3 12:46:37 2025 : Debug: Failed with error: proto_acct.so: cannot open shared object file: No such file or directory
Mon Mar  3 12:46:37 2025 : Debug: listen {
Mon Mar  3 12:46:37 2025 : Debug:   	type = "acct"
Mon Mar  3 12:46:37 2025 : Debug:   	ipaddr = *
Mon Mar  3 12:46:37 2025 : Debug:   	port = 0
Mon Mar  3 12:46:37 2025 : Debug:    limit {
Mon Mar  3 12:46:37 2025 : Debug:    	max_connections = 16
Mon Mar  3 12:46:37 2025 : Debug:    	lifetime = 0
Mon Mar  3 12:46:37 2025 : Debug:    	idle_timeout = 30
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug: }
Mon Mar  3 12:46:37 2025 : Debug: Loading proto_auth with path: /usr/lib/freeradius/proto_auth.so
Mon Mar  3 12:46:37 2025 : Debug: Loading proto_auth failed: /usr/lib/freeradius/proto_auth.so: cannot open shared object file: No such file or directory - No such file or directory
Mon Mar  3 12:46:37 2025 : Debug: Loading library using linker search path(s)
Mon Mar  3 12:46:37 2025 : Debug: Defaults         : /lib:/usr/lib
Mon Mar  3 12:46:37 2025 : Debug: Failed with error: proto_auth.so: cannot open shared object file: No such file or directory
Mon Mar  3 12:46:37 2025 : Debug: listen {
Mon Mar  3 12:46:37 2025 : Debug:   	type = "auth"
Mon Mar  3 12:46:37 2025 : Debug:   	ipv6addr = ::
Mon Mar  3 12:46:37 2025 : Debug:   	port = 0
Mon Mar  3 12:46:37 2025 : Debug:    limit {
Mon Mar  3 12:46:37 2025 : Debug:    	max_connections = 16
Mon Mar  3 12:46:37 2025 : Debug:    	lifetime = 0
Mon Mar  3 12:46:37 2025 : Debug:    	idle_timeout = 30
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug: }
Mon Mar  3 12:46:37 2025 : Debug: Loading proto_acct with path: /usr/lib/freeradius/proto_acct.so
Mon Mar  3 12:46:37 2025 : Debug: Loading proto_acct failed: /usr/lib/freeradius/proto_acct.so: cannot open shared object file: No such file or directory - No such file or directory
Mon Mar  3 12:46:37 2025 : Debug: Loading library using linker search path(s)
Mon Mar  3 12:46:37 2025 : Debug: Defaults         : /lib:/usr/lib
Mon Mar  3 12:46:37 2025 : Debug: Failed with error: proto_acct.so: cannot open shared object file: No such file or directory
Mon Mar  3 12:46:37 2025 : Debug: listen {
Mon Mar  3 12:46:37 2025 : Debug:   	type = "acct"
Mon Mar  3 12:46:37 2025 : Debug:   	ipv6addr = ::
Mon Mar  3 12:46:37 2025 : Debug:   	port = 0
Mon Mar  3 12:46:37 2025 : Debug:    limit {
Mon Mar  3 12:46:37 2025 : Debug:    	max_connections = 16
Mon Mar  3 12:46:37 2025 : Debug:    	lifetime = 0
Mon Mar  3 12:46:37 2025 : Debug:    	idle_timeout = 30
Mon Mar  3 12:46:37 2025 : Debug:    }
Mon Mar  3 12:46:37 2025 : Debug: }
Mon Mar  3 12:46:37 2025 : Debug: Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Mon Mar  3 12:46:37 2025 : Debug: Listening on auth address * port 1812 bound to server default
Mon Mar  3 12:46:37 2025 : Debug: Listening on acct address * port 1813 bound to server default
Mon Mar  3 12:46:37 2025 : Debug: Listening on auth address :: port 1812 bound to server default
Mon Mar  3 12:46:37 2025 : Debug: Listening on acct address :: port 1813 bound to server default
Mon Mar  3 12:46:37 2025 : Debug: Opened new proxy socket 'proxy address * port 44877'
Mon Mar  3 12:46:37 2025 : Debug: Listening on proxy address * port 44877
Mon Mar  3 12:46:37 2025 : Debug: Opened new proxy socket 'proxy address :: port 57736'
Mon Mar  3 12:46:37 2025 : Debug: Listening on proxy address :: port 57736
Mon Mar  3 12:46:37 2025 : Info: Ready to process requests
Mon Mar  3 13:09:34 2025 : Error: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Mon Mar  3 13:09:34 2025 : Error: BlastRADIUS check: Received packet with Message-Authenticator.
Mon Mar  3 13:09:34 2025 : Error: Setting "require_message_authenticator = true" for client localhost
Mon Mar  3 13:09:34 2025 : Error: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Mon Mar  3 13:09:34 2025 : Error: It looks like the client has been updated to protect from the BlastRADIUS attack.
Mon Mar  3 13:09:34 2025 : Error: Please set "require_message_authenticator = true" for client localhost
Mon Mar  3 13:09:34 2025 : Error: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Mon Mar  3 13:09:34 2025 : Debug: (0) Received Access-Request Id 7 from 127.0.0.1:46126 to 127.0.0.1:1812 length 77
Mon Mar  3 13:09:34 2025 : Debug: (0)   Message-Authenticator = 0x1087c5541c3659021452039565645b47
Mon Mar  3 13:09:34 2025 : Debug: (0)   User-Name = "testing"
Mon Mar  3 13:09:34 2025 : Debug: (0)   User-Password = "password"
Mon Mar  3 13:09:34 2025 : Debug: (0)   NAS-IP-Address = 127.0.2.1
Mon Mar  3 13:09:34 2025 : Debug: (0)   NAS-Port = 0
Mon Mar  3 13:09:34 2025 : Debug: (0) session-state: No State attribute
Mon Mar  3 13:09:34 2025 : Debug: (0) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:09:34 2025 : Debug: (0)   authorize {
Mon Mar  3 13:09:34 2025 : Debug: (0)     policy filter_username {
Mon Mar  3 13:09:34 2025 : Debug: (0)       if (&User-Name) {
Mon Mar  3 13:09:34 2025 : Debug: (0)       if (&User-Name)  -> TRUE
Mon Mar  3 13:09:34 2025 : Debug: (0)       if (&User-Name)  {
Mon Mar  3 13:09:34 2025 : Debug: (0)         if (&User-Name =~ / /) {
Mon Mar  3 13:09:34 2025 : Debug: No old matches
Mon Mar  3 13:09:34 2025 : Debug: (0)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 13:09:34 2025 : Debug: (0)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 13:09:34 2025 : Debug: No old matches
Mon Mar  3 13:09:34 2025 : Debug: (0)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 13:09:34 2025 : Debug: (0)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 13:09:34 2025 : Debug: No old matches
Mon Mar  3 13:09:34 2025 : Debug: (0)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 13:09:34 2025 : Debug: (0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 13:09:34 2025 : Debug: No old matches
Mon Mar  3 13:09:34 2025 : Debug: (0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 13:09:34 2025 : Debug: (0)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 13:09:34 2025 : Debug: No old matches
Mon Mar  3 13:09:34 2025 : Debug: (0)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 13:09:34 2025 : Debug: (0)         if (&User-Name =~ /@\./)  {
Mon Mar  3 13:09:34 2025 : Debug: No old matches
Mon Mar  3 13:09:34 2025 : Debug: (0)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 13:09:34 2025 : Debug: (0)       } # if (&User-Name)  = notfound
Mon Mar  3 13:09:34 2025 : Debug: (0)     } # policy filter_username = notfound
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [preprocess] = ok
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [chap] = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [mschap] = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [digest] = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 13:09:34 2025 : Debug: (0) suffix: Checking for suffix after "@"
Mon Mar  3 13:09:34 2025 : Debug: (0) suffix: No '@' in User-Name = "testing", looking up realm NULL
Mon Mar  3 13:09:34 2025 : Debug: (0) suffix: No such realm "NULL"
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [suffix] = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 13:09:34 2025 : Debug: (0) eap: No EAP-Message, not doing EAP
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [eap] = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [files] = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [expiration] = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [logintime] = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 13:09:34 2025 : WARNING: (0) pap: No "known good" password found for the user.  Not setting Auth-Type
Mon Mar  3 13:09:34 2025 : WARNING: (0) pap: Authentication will fail unless a "known good" password is available
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [pap] = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)   } # authorize = ok
Mon Mar  3 13:09:34 2025 : ERROR: (0) No Auth-Type found: rejecting the user via Post-Auth-Type = Reject
Mon Mar  3 13:09:34 2025 : Debug: (0) Failed to authenticate the user
Mon Mar  3 13:09:34 2025 : Debug: (0) Using Post-Auth-Type Reject
Mon Mar  3 13:09:34 2025 : Debug: (0) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:09:34 2025 : Debug: (0)   Post-Auth-Type REJECT {
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[post-auth]: calling attr_filter.access_reject (rlm_attr_filter)
Mon Mar  3 13:09:34 2025 : Debug: %{User-Name}
Mon Mar  3 13:09:34 2025 : Debug: Parsed xlat tree:
Mon Mar  3 13:09:34 2025 : Debug: attribute --> User-Name
Mon Mar  3 13:09:34 2025 : Debug: (0) attr_filter.access_reject: EXPAND %{User-Name}
Mon Mar  3 13:09:34 2025 : Debug: (0) attr_filter.access_reject:    --> testing
Mon Mar  3 13:09:34 2025 : Debug: (0) attr_filter.access_reject: Matched entry DEFAULT at line 11
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[post-auth]: returned from attr_filter.access_reject (rlm_attr_filter)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [attr_filter.access_reject] = updated
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[post-auth]: calling eap (rlm_eap)
Mon Mar  3 13:09:34 2025 : Debug: (0) eap: Request didn't contain an EAP-Message, not inserting EAP-Failure
Mon Mar  3 13:09:34 2025 : Debug: (0)     modsingle[post-auth]: returned from eap (rlm_eap)
Mon Mar  3 13:09:34 2025 : Debug: (0)     [eap] = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)     policy remove_reply_message_if_eap {
Mon Mar  3 13:09:34 2025 : Debug: (0)       if (&reply:EAP-Message && &reply:Reply-Message) {
Mon Mar  3 13:09:34 2025 : Debug: (0)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
Mon Mar  3 13:09:34 2025 : Debug: (0)       else {
Mon Mar  3 13:09:34 2025 : Debug: (0)         modsingle[post-auth]: calling noop (rlm_always)
Mon Mar  3 13:09:34 2025 : Debug: (0)         modsingle[post-auth]: returned from noop (rlm_always)
Mon Mar  3 13:09:34 2025 : Debug: (0)         [noop] = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)       } # else = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)     } # policy remove_reply_message_if_eap = noop
Mon Mar  3 13:09:34 2025 : Debug: (0)   } # Post-Auth-Type REJECT = updated
Mon Mar  3 13:09:34 2025 : Debug: (0) Delaying response for 1.000000 seconds
Mon Mar  3 13:09:34 2025 : Debug: Waking up in 0.3 seconds.
Mon Mar  3 13:09:34 2025 : Debug: Waking up in 0.6 seconds.
Mon Mar  3 13:09:35 2025 : Debug: (0) Sending delayed response
Mon Mar  3 13:09:35 2025 : Debug: (0) Sent Access-Reject Id 7 from 127.0.0.1:1812 to 127.0.0.1:46126 length 38
Mon Mar  3 13:09:35 2025 : Debug: Waking up in 3.9 seconds.
Mon Mar  3 13:09:39 2025 : Debug: (0) Cleaning up request packet ID 7 with timestamp +1377 due to cleanup_delay was reached
Mon Mar  3 13:09:39 2025 : Info: Ready to process requests
Mon Mar  3 13:10:50 2025 : Debug: (1) Received Access-Request Id 147 from 127.0.0.1:49157 to 127.0.0.1:1812 length 72
Mon Mar  3 13:10:50 2025 : Debug: (1)   Message-Authenticator = 0xb46f8c2180aa556042573f614e117ee9
Mon Mar  3 13:10:50 2025 : Debug: (1)   User-Name = "ue"
Mon Mar  3 13:10:50 2025 : Debug: (1)   User-Password = "password"
Mon Mar  3 13:10:50 2025 : Debug: (1)   NAS-IP-Address = 127.0.2.1
Mon Mar  3 13:10:50 2025 : Debug: (1)   NAS-Port = 0
Mon Mar  3 13:10:50 2025 : Debug: (1) session-state: No State attribute
Mon Mar  3 13:10:50 2025 : Debug: (1) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:10:50 2025 : Debug: (1)   authorize {
Mon Mar  3 13:10:50 2025 : Debug: (1)     policy filter_username {
Mon Mar  3 13:10:50 2025 : Debug: (1)       if (&User-Name) {
Mon Mar  3 13:10:50 2025 : Debug: (1)       if (&User-Name)  -> TRUE
Mon Mar  3 13:10:50 2025 : Debug: (1)       if (&User-Name)  {
Mon Mar  3 13:10:50 2025 : Debug: (1)         if (&User-Name =~ / /) {
Mon Mar  3 13:10:50 2025 : Debug: No old matches
Mon Mar  3 13:10:50 2025 : Debug: (1)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 13:10:50 2025 : Debug: (1)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 13:10:50 2025 : Debug: No old matches
Mon Mar  3 13:10:50 2025 : Debug: (1)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 13:10:50 2025 : Debug: (1)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 13:10:50 2025 : Debug: No old matches
Mon Mar  3 13:10:50 2025 : Debug: (1)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 13:10:50 2025 : Debug: (1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 13:10:50 2025 : Debug: No old matches
Mon Mar  3 13:10:50 2025 : Debug: (1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 13:10:50 2025 : Debug: (1)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 13:10:50 2025 : Debug: No old matches
Mon Mar  3 13:10:50 2025 : Debug: (1)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 13:10:50 2025 : Debug: (1)         if (&User-Name =~ /@\./)  {
Mon Mar  3 13:10:50 2025 : Debug: No old matches
Mon Mar  3 13:10:50 2025 : Debug: (1)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 13:10:50 2025 : Debug: (1)       } # if (&User-Name)  = notfound
Mon Mar  3 13:10:50 2025 : Debug: (1)     } # policy filter_username = notfound
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [preprocess] = ok
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [chap] = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [mschap] = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [digest] = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 13:10:50 2025 : Debug: (1) suffix: Checking for suffix after "@"
Mon Mar  3 13:10:50 2025 : Debug: (1) suffix: No '@' in User-Name = "ue", looking up realm NULL
Mon Mar  3 13:10:50 2025 : Debug: (1) suffix: No such realm "NULL"
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [suffix] = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 13:10:50 2025 : Debug: (1) eap: No EAP-Message, not doing EAP
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [eap] = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [files] = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [expiration] = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [logintime] = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 13:10:50 2025 : WARNING: (1) pap: No "known good" password found for the user.  Not setting Auth-Type
Mon Mar  3 13:10:50 2025 : WARNING: (1) pap: Authentication will fail unless a "known good" password is available
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [pap] = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)   } # authorize = ok
Mon Mar  3 13:10:50 2025 : ERROR: (1) No Auth-Type found: rejecting the user via Post-Auth-Type = Reject
Mon Mar  3 13:10:50 2025 : Debug: (1) Failed to authenticate the user
Mon Mar  3 13:10:50 2025 : Debug: (1) Using Post-Auth-Type Reject
Mon Mar  3 13:10:50 2025 : Debug: (1) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:10:50 2025 : Debug: (1)   Post-Auth-Type REJECT {
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[post-auth]: calling attr_filter.access_reject (rlm_attr_filter)
Mon Mar  3 13:10:50 2025 : Debug: %{User-Name}
Mon Mar  3 13:10:50 2025 : Debug: Parsed xlat tree:
Mon Mar  3 13:10:50 2025 : Debug: attribute --> User-Name
Mon Mar  3 13:10:50 2025 : Debug: (1) attr_filter.access_reject: EXPAND %{User-Name}
Mon Mar  3 13:10:50 2025 : Debug: (1) attr_filter.access_reject:    --> ue
Mon Mar  3 13:10:50 2025 : Debug: (1) attr_filter.access_reject: Matched entry DEFAULT at line 11
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[post-auth]: returned from attr_filter.access_reject (rlm_attr_filter)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [attr_filter.access_reject] = updated
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[post-auth]: calling eap (rlm_eap)
Mon Mar  3 13:10:50 2025 : Debug: (1) eap: Request didn't contain an EAP-Message, not inserting EAP-Failure
Mon Mar  3 13:10:50 2025 : Debug: (1)     modsingle[post-auth]: returned from eap (rlm_eap)
Mon Mar  3 13:10:50 2025 : Debug: (1)     [eap] = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)     policy remove_reply_message_if_eap {
Mon Mar  3 13:10:50 2025 : Debug: (1)       if (&reply:EAP-Message && &reply:Reply-Message) {
Mon Mar  3 13:10:50 2025 : Debug: (1)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
Mon Mar  3 13:10:50 2025 : Debug: (1)       else {
Mon Mar  3 13:10:50 2025 : Debug: (1)         modsingle[post-auth]: calling noop (rlm_always)
Mon Mar  3 13:10:50 2025 : Debug: (1)         modsingle[post-auth]: returned from noop (rlm_always)
Mon Mar  3 13:10:50 2025 : Debug: (1)         [noop] = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)       } # else = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)     } # policy remove_reply_message_if_eap = noop
Mon Mar  3 13:10:50 2025 : Debug: (1)   } # Post-Auth-Type REJECT = updated
Mon Mar  3 13:10:50 2025 : Debug: (1) Delaying response for 1.000000 seconds
Mon Mar  3 13:10:50 2025 : Debug: Waking up in 0.3 seconds.
Mon Mar  3 13:10:50 2025 : Debug: Waking up in 0.6 seconds.
Mon Mar  3 13:10:51 2025 : Debug: (1) Sending delayed response
Mon Mar  3 13:10:51 2025 : Debug: (1) Sent Access-Reject Id 147 from 127.0.0.1:1812 to 127.0.0.1:49157 length 38
Mon Mar  3 13:10:51 2025 : Debug: Waking up in 3.9 seconds.
Mon Mar  3 13:10:55 2025 : Debug: (1) Cleaning up request packet ID 147 with timestamp +1453 due to cleanup_delay was reached
Mon Mar  3 13:10:55 2025 : Info: Ready to process requests
Mon Mar  3 13:11:34 2025 : Error: Ignoring request to auth address * port 1812 bound to server default from unknown client 192.168.58.2 port 55160 proto udp
Mon Mar  3 13:11:34 2025 : Info: Ready to process requests
Mon Mar  3 13:11:39 2025 : Error: Ignoring request to auth address * port 1812 bound to server default from unknown client 192.168.58.2 port 55160 proto udp
Mon Mar  3 13:11:39 2025 : Info: Ready to process requests
Mon Mar  3 13:11:44 2025 : Error: Ignoring request to auth address * port 1812 bound to server default from unknown client 192.168.58.2 port 55160 proto udp
Mon Mar  3 13:11:44 2025 : Info: Ready to process requests
Mon Mar  3 13:13:54 2025 : Debug: (2) Received Access-Request Id 0 from 192.168.58.100:34715 to 192.168.58.2:1812 length 183
Mon Mar  3 13:13:54 2025 : Debug: (2)   Message-Authenticator = 0x8f21ec0dd7d3f458df305ee31a454464
Mon Mar  3 13:13:54 2025 : Debug: (2)   User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (2)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 13:13:54 2025 : Debug: (2)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 13:13:54 2025 : Debug: (2)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 13:13:54 2025 : Debug: (2)   Service-Type = Framed-User
Mon Mar  3 13:13:54 2025 : Debug: (2)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 13:13:54 2025 : Debug: (2)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 13:13:54 2025 : Debug: (2)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 13:13:54 2025 : Debug: (2)   Framed-MTU = 1400
Mon Mar  3 13:13:54 2025 : Debug: (2)   EAP-Message = 0x024500150175736572406578616d706c652e6f7267
Mon Mar  3 13:13:54 2025 : Debug: (2) session-state: No State attribute
Mon Mar  3 13:13:54 2025 : Debug: (2) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (2)   authorize {
Mon Mar  3 13:13:54 2025 : Debug: (2)     policy filter_username {
Mon Mar  3 13:13:54 2025 : Debug: (2)       if (&User-Name) {
Mon Mar  3 13:13:54 2025 : Debug: (2)       if (&User-Name)  -> TRUE
Mon Mar  3 13:13:54 2025 : Debug: (2)       if (&User-Name)  {
Mon Mar  3 13:13:54 2025 : Debug: (2)         if (&User-Name =~ / /) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (2)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (2)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (2)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (2)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (2)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 1 matches
Mon Mar  3 13:13:54 2025 : Debug: Clearing 1 old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 3 matches
Mon Mar  3 13:13:54 2025 : Debug: (2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (2)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 13:13:54 2025 : Debug: Clearing 3 old matches
Mon Mar  3 13:13:54 2025 : Debug: (2)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (2)         if (&User-Name =~ /@\./)  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (2)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (2)       } # if (&User-Name)  = notfound
Mon Mar  3 13:13:54 2025 : Debug: (2)     } # policy filter_username = notfound
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (2)     [preprocess] = ok
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (2)     [chap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (2)     [mschap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (2)     [digest] = noop
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (2) suffix: Checking for suffix after "@"
Mon Mar  3 13:13:54 2025 : Debug: (2) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (2) suffix: No such realm "example.org"
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (2)     [suffix] = noop
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (2) eap: Peer sent EAP Response (code 2) ID 69 length 21
Mon Mar  3 13:13:54 2025 : Debug: (2) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (2)     [eap] = ok
Mon Mar  3 13:13:54 2025 : Debug: (2)   } # authorize = ok
Mon Mar  3 13:13:54 2025 : Debug: (2) Found Auth-Type = eap
Mon Mar  3 13:13:54 2025 : Debug: (2) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (2)   authenticate {
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (2) eap: Peer sent packet with method EAP Identity (1)
Mon Mar  3 13:13:54 2025 : Debug: (2) eap: Calling submodule eap_tls to process data
Mon Mar  3 13:13:54 2025 : Debug: (2) eap_tls: (TLS) Initiating new session
Mon Mar  3 13:13:54 2025 : Debug: (2) eap_tls: (TLS) Setting verify mode to require certificate from client
Mon Mar  3 13:13:54 2025 : Debug: (2) eap_tls: [eaptls start] = request
Mon Mar  3 13:13:54 2025 : Debug: (2) eap: Sending EAP Request (code 1) ID 70 length 6
Mon Mar  3 13:13:54 2025 : Debug: (2) eap: EAP session adding &reply:State = 0xf118589af15e5562
Mon Mar  3 13:13:54 2025 : Debug: (2)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (2)     [eap] = handled
Mon Mar  3 13:13:54 2025 : Debug: (2)   } # authenticate = handled
Mon Mar  3 13:13:54 2025 : Debug: (2) Using Post-Auth-Type Challenge
Mon Mar  3 13:13:54 2025 : Debug: (2) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (2)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 13:13:54 2025 : Debug: (2) session-state: Saving cached attributes
Mon Mar  3 13:13:54 2025 : Debug: (2)   Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (2) Sent Access-Challenge Id 0 from 192.168.58.2:1812 to 192.168.58.100:34715 length 64
Mon Mar  3 13:13:54 2025 : Debug: (2)   EAP-Message = 0x014600060d20
Mon Mar  3 13:13:54 2025 : Debug: (2)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 13:13:54 2025 : Debug: (2)   State = 0xf118589af15e5562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (2) Finished request
Mon Mar  3 13:13:54 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 13:13:54 2025 : Debug: (3) Received Access-Request Id 1 from 192.168.58.100:34715 to 192.168.58.2:1812 length 370
Mon Mar  3 13:13:54 2025 : Debug: (3)   Message-Authenticator = 0xcd6bb1f82c3c700515a009a82799c7a2
Mon Mar  3 13:13:54 2025 : Debug: (3)   User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (3)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 13:13:54 2025 : Debug: (3)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 13:13:54 2025 : Debug: (3)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 13:13:54 2025 : Debug: (3)   Service-Type = Framed-User
Mon Mar  3 13:13:54 2025 : Debug: (3)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 13:13:54 2025 : Debug: (3)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 13:13:54 2025 : Debug: (3)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 13:13:54 2025 : Debug: (3)   Framed-MTU = 1400
Mon Mar  3 13:13:54 2025 : Debug: (3)   EAP-Message = 0x024600be0d0016030100b3010000af0303c1d7ae09ca203274fece939b9610c263562941c65a06705c7f173fced981781e000038c02cc030009fcca9cca8ccaac02bc02f009ec024c028006bc023c0270067c00ac0140039c009c0130033009d009c003d003c0035002f00ff0100004e000b000403000102000a000c000a001d0017001e001900180016000000170000000d002a0028040305030603080708080809080a080b080408050806040105010601030303010302040205020602
Mon Mar  3 13:13:54 2025 : Debug: (3)   State = 0xf118589af15e5562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (3) Restoring &session-state
Mon Mar  3 13:13:54 2025 : Debug: (3)   &session-state:Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (3) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (3)   authorize {
Mon Mar  3 13:13:54 2025 : Debug: (3)     policy filter_username {
Mon Mar  3 13:13:54 2025 : Debug: (3)       if (&User-Name) {
Mon Mar  3 13:13:54 2025 : Debug: (3)       if (&User-Name)  -> TRUE
Mon Mar  3 13:13:54 2025 : Debug: (3)       if (&User-Name)  {
Mon Mar  3 13:13:54 2025 : Debug: (3)         if (&User-Name =~ / /) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (3)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (3)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (3)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (3)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (3)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 1 matches
Mon Mar  3 13:13:54 2025 : Debug: Clearing 1 old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 3 matches
Mon Mar  3 13:13:54 2025 : Debug: (3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (3)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 13:13:54 2025 : Debug: Clearing 3 old matches
Mon Mar  3 13:13:54 2025 : Debug: (3)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (3)         if (&User-Name =~ /@\./)  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (3)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (3)       } # if (&User-Name)  = notfound
Mon Mar  3 13:13:54 2025 : Debug: (3)     } # policy filter_username = notfound
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (3)     [preprocess] = ok
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (3)     [chap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (3)     [mschap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (3)     [digest] = noop
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (3) suffix: Checking for suffix after "@"
Mon Mar  3 13:13:54 2025 : Debug: (3) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (3) suffix: No such realm "example.org"
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (3)     [suffix] = noop
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (3) eap: Peer sent EAP Response (code 2) ID 70 length 190
Mon Mar  3 13:13:54 2025 : Debug: (3) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (3)     [eap] = updated
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (3)     [files] = noop
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (3)     [expiration] = noop
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (3)     [logintime] = noop
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (3)     [pap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (3)   } # authorize = updated
Mon Mar  3 13:13:54 2025 : Debug: (3) Found Auth-Type = eap
Mon Mar  3 13:13:54 2025 : Debug: (3) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (3)   authenticate {
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (3) eap: Expiring EAP session with state 0xf118589af15e5562
Mon Mar  3 13:13:54 2025 : Debug: (3) eap: Finished EAP session with state 0xf118589af15e5562
Mon Mar  3 13:13:54 2025 : Debug: (3) eap: Previous EAP request found for state 0xf118589af15e5562, released from the list
Mon Mar  3 13:13:54 2025 : Debug: (3) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 13:13:54 2025 : Debug: (3) eap: Calling submodule eap_tls to process data
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) EAP Peer sent flags ---
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) EAP Got final fragment (184 bytes)
Mon Mar  3 13:13:54 2025 : WARNING: (3) eap_tls: (TLS) EAP Total received record fragments (184 bytes), does not equal expected expected data length (0 bytes)
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) EAP Verification says ok
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) EAP Done initial handshake
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) Handshake state [PINIT] - before SSL initialization (0)
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) Handshake state [PINIT] - Server before SSL initialization (0)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 769
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) Handshake state [PINIT] - Server before SSL initialization (0)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 179 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        01 00 00 af 03 03 c1 d7 ae 09 ca 20 32 74 fe ce 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        93 9b 96 10 c2 63 56 29 41 c6 5a 06 70 5c 7f 17 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        3f ce d9 81 78 1e 00 00 38 c0 2c c0 30 00 9f cc 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        a9 cc a8 cc aa c0 2b c0 2f 00 9e c0 24 c0 28 00 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        6b c0 23 c0 27 00 67 c0 0a c0 14 00 39 c0 09 c0 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        13 00 33 00 9d 00 9c 00 3d 00 3c 00 35 00 2f 00 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        ff 01 00 00 4e 00 0b 00 04 03 00 01 02 00 0a 00 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0c 00 0a 00 1d 00 17 00 1e 00 19 00 18 00 16 00 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        00 00 17 00 00 00 0d 00 2a 00 28 04 03 05 03 06 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        03 08 07 08 08 08 09 08 0a 08 0b 08 04 08 05 08 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        06 04 01 05 01 06 01 03 03 03 01 03 02 04 02 05 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        02 06 02 
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) recv TLS 1.3 Handshake, ClientHello
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) Handshake state [TRCH] - Server SSLv3/TLS read client hello (20)
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: Server preferred ciphers (by priority)
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [0] TLS_AES_256_GCM_SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [1] TLS_CHACHA20_POLY1305_SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [2] TLS_AES_128_GCM_SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [3] ECDHE-ECDSA-AES256-GCM-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [4] ECDHE-RSA-AES256-GCM-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [5] DHE-RSA-AES256-GCM-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [6] ECDHE-ECDSA-CHACHA20-POLY1305
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [7] ECDHE-RSA-CHACHA20-POLY1305
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [8] DHE-RSA-CHACHA20-POLY1305
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [9] ECDHE-ECDSA-AES128-GCM-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [10] ECDHE-RSA-AES128-GCM-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [11] DHE-RSA-AES128-GCM-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [12] ECDHE-ECDSA-AES256-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [13] ECDHE-RSA-AES256-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [14] DHE-RSA-AES256-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [15] ECDHE-ECDSA-AES128-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [16] ECDHE-RSA-AES128-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [17] DHE-RSA-AES128-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [18] ECDHE-ECDSA-AES256-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [19] ECDHE-RSA-AES256-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [20] DHE-RSA-AES256-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [21] ECDHE-ECDSA-AES128-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [22] ECDHE-RSA-AES128-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [23] DHE-RSA-AES128-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [24] RSA-PSK-AES256-GCM-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [25] DHE-PSK-AES256-GCM-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [26] RSA-PSK-CHACHA20-POLY1305
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [27] DHE-PSK-CHACHA20-POLY1305
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [28] ECDHE-PSK-CHACHA20-POLY1305
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [29] AES256-GCM-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [30] PSK-AES256-GCM-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [31] PSK-CHACHA20-POLY1305
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [32] RSA-PSK-AES128-GCM-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [33] DHE-PSK-AES128-GCM-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [34] AES128-GCM-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [35] PSK-AES128-GCM-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [36] AES256-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [37] AES128-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [38] ECDHE-PSK-AES256-CBC-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [39] ECDHE-PSK-AES256-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [40] SRP-RSA-AES-256-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [41] SRP-AES-256-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [42] RSA-PSK-AES256-CBC-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [43] DHE-PSK-AES256-CBC-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [44] RSA-PSK-AES256-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [45] DHE-PSK-AES256-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [46] AES256-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [47] PSK-AES256-CBC-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [48] PSK-AES256-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [49] ECDHE-PSK-AES128-CBC-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [50] ECDHE-PSK-AES128-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [51] SRP-RSA-AES-128-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [52] SRP-AES-128-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [53] RSA-PSK-AES128-CBC-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [54] DHE-PSK-AES128-CBC-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [55] RSA-PSK-AES128-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [56] DHE-PSK-AES128-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [57] AES128-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [58] PSK-AES128-CBC-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [59] PSK-AES128-CBC-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: Client preferred ciphers (by priority)
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [0] ECDHE-ECDSA-AES256-GCM-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [1] ECDHE-RSA-AES256-GCM-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [2] DHE-RSA-AES256-GCM-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [3] ECDHE-ECDSA-CHACHA20-POLY1305
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [4] ECDHE-RSA-CHACHA20-POLY1305
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [5] DHE-RSA-CHACHA20-POLY1305
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [6] ECDHE-ECDSA-AES128-GCM-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [7] ECDHE-RSA-AES128-GCM-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [8] DHE-RSA-AES128-GCM-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [9] ECDHE-ECDSA-AES256-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [10] ECDHE-RSA-AES256-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [11] DHE-RSA-AES256-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [12] ECDHE-ECDSA-AES128-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [13] ECDHE-RSA-AES128-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [14] DHE-RSA-AES128-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [15] ECDHE-ECDSA-AES256-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [16] ECDHE-RSA-AES256-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [17] DHE-RSA-AES256-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [18] ECDHE-ECDSA-AES128-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [19] ECDHE-RSA-AES128-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [20] DHE-RSA-AES128-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [21] AES256-GCM-SHA384
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [22] AES128-GCM-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [23] AES256-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [24] AES128-SHA256
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [25] AES256-SHA
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS)    [26] AES128-SHA
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 61 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        02 00 00 39 03 03 08 9a ad e8 69 fd 7b 94 95 0a 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        c5 b7 ff d6 96 94 99 95 38 99 25 63 4a 87 2f 2b 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        3a 84 d6 dc 71 1a 00 c0 30 00 00 11 ff 01 00 01 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        00 00 0b 00 04 03 00 01 02 00 17 00 00 
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) send TLS 1.2 Handshake, ServerHello
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) Handshake state [TWSH] - Server SSLv3/TLS write server hello (22)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 2373 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0b 00 09 41 00 09 3e 00 04 3a 30 82 04 36 30 82 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        03 1e a0 03 02 01 02 02 01 01 30 0d 06 09 2a 86 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        48 86 f7 0d 01 01 0b 05 00 30 81 93 31 0b 30 09 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        06 03 55 04 06 13 02 46 52 31 0f 30 0d 06 03 55 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        04 08 0c 06 52 61 64 69 75 73 31 12 30 10 06 03 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        55 04 07 0c 09 53 6f 6d 65 77 68 65 72 65 31 15 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        30 13 06 03 55 04 0a 0c 0c 45 78 61 6d 70 6c 65 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        20 49 6e 63 2e 31 20 30 1e 06 09 2a 86 48 86 f7 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0d 01 09 01 16 11 61 64 6d 69 6e 40 65 78 61 6d 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        70 6c 65 2e 6f 72 67 31 26 30 24 06 03 55 04 03 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0c 1d 45 78 61 6d 70 6c 65 20 43 65 72 74 69 66 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        69 63 61 74 65 20 41 75 74 68 6f 72 69 74 79 30 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        1e 17 0d 32 35 30 33 30 33 31 32 34 36 33 36 5a 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        17 0d 32 35 30 35 30 32 31 32 34 36 33 36 5a 30 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        7c 31 0b 30 09 06 03 55 04 06 13 02 46 52 31 0f 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        30 0d 06 03 55 04 08 0c 06 52 61 64 69 75 73 31 
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) send TLS 1.2 Handshake, Certificate
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) Handshake state [TWSC] - Server SSLv3/TLS write certificate (23)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 300 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0c 00 01 28 03 00 1d 20 78 a2 76 4d 44 ec f1 5f 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        02 4f e3 23 73 9e 9a 79 68 36 c8 93 bc 27 6c 2f 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        b0 db 31 63 5c 9c f2 36 08 04 01 00 a8 87 37 db 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        01 f5 6f d9 cc 7e 5a 58 13 16 73 3a 03 63 0a 20 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        3b 74 2e f9 42 0f 2c 48 2a 62 b3 a2 52 0d 4a d3 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        e0 26 68 6c f0 82 5d 04 ed c5 07 14 19 33 68 50 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        3b c2 16 41 29 69 16 02 2d 3d a1 60 f4 b0 ec b0 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        fe 8a 55 84 a9 a6 66 e0 26 4b c1 53 87 4d cf 8b 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        69 09 f8 22 ce 68 ba 51 9a da 31 51 4f 15 d2 bc 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        e3 dc d6 c9 15 e2 f4 5b 44 74 9e a0 76 ce 4a 5d 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        ba c0 92 c6 e7 eb 10 f3 06 a3 81 4c d6 8d 6b 64 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        98 e7 4c b2 92 f2 71 89 ed 41 9e 6c 05 c1 54 48 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        3f 62 39 52 f9 b0 1e fa 46 60 68 10 4d f1 29 ef 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        62 bc f9 64 91 78 0b 5a 0f 95 62 ec c3 5d d4 ca 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        3d c4 35 63 1c ab c0 2c 77 bf 70 b1 25 6e ce ef 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        aa 58 84 1d 7d 55 b2 14 12 78 89 29 d5 64 85 9e 
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) Handshake state [TWSKE] - Server SSLv3/TLS write key exchange (24)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 204 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0d 00 00 c8 03 01 02 40 00 28 04 03 05 03 06 03 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        08 07 08 08 08 09 08 0a 08 0b 08 04 08 05 08 06 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        04 01 05 01 06 01 03 03 03 01 03 02 04 02 05 02 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        06 02 00 98 00 96 30 81 93 31 0b 30 09 06 03 55 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        04 06 13 02 46 52 31 0f 30 0d 06 03 55 04 08 0c 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        06 52 61 64 69 75 73 31 12 30 10 06 03 55 04 07 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0c 09 53 6f 6d 65 77 68 65 72 65 31 15 30 13 06 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        03 55 04 0a 0c 0c 45 78 61 6d 70 6c 65 20 49 6e 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        63 2e 31 20 30 1e 06 09 2a 86 48 86 f7 0d 01 09 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        01 16 11 61 64 6d 69 6e 40 65 78 61 6d 70 6c 65 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        2e 6f 72 67 31 26 30 24 06 03 55 04 03 0c 1d 45 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        78 61 6d 70 6c 65 20 43 65 72 74 69 66 69 63 61 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        74 65 20 41 75 74 68 6f 72 69 74 79 
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) send TLS 1.2 Handshake, CertificateRequest
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) Handshake state [TWCR] - Server SSLv3/TLS write certificate request (25)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 4 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0e 00 00 00 
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) send TLS 1.2 Handshake, ServerHelloDone
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) Handshake state [TWSD] - Server SSLv3/TLS write server done (26)
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) Server : Need to read more data: SSLv3/TLS write server done
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) In Handshake Phase
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: (TLS) got 2967 bytes of data
Mon Mar  3 13:13:54 2025 : Debug: (3) eap_tls: [eaptls process] = handled
Mon Mar  3 13:13:54 2025 : Debug: (3) eap: Sending EAP Request (code 1) ID 71 length 1004
Mon Mar  3 13:13:54 2025 : Debug: (3) eap: EAP session adding &reply:State = 0xf118589af05f5562
Mon Mar  3 13:13:54 2025 : Debug: (3)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (3)     [eap] = handled
Mon Mar  3 13:13:54 2025 : Debug: (3)   } # authenticate = handled
Mon Mar  3 13:13:54 2025 : Debug: (3) Using Post-Auth-Type Challenge
Mon Mar  3 13:13:54 2025 : Debug: (3) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (3)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 13:13:54 2025 : Debug: (3) session-state: Saving cached attributes
Mon Mar  3 13:13:54 2025 : Debug: (3)   Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 13:13:54 2025 : Debug: (3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 13:13:54 2025 : Debug: (3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 13:13:54 2025 : Debug: (3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 13:13:54 2025 : Debug: (3) Sent Access-Challenge Id 1 from 192.168.58.2:1812 to 192.168.58.100:34715 length 1068
Mon Mar  3 13:13:54 2025 : Debug: (3)   EAP-Message = 0x014703ec0dc000000b97160303003d020000390303089aade869fd7b94950ac5b7ffd696949995389925634a872f2b3a84d6dc711a00c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3235303330333132343633365a170d3235303530323132343633365a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
Mon Mar  3 13:13:54 2025 : Debug: (3)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 13:13:54 2025 : Debug: (3)   State = 0xf118589af05f5562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (3) Finished request
Mon Mar  3 13:13:54 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 13:13:54 2025 : Debug: (4) Received Access-Request Id 2 from 192.168.58.100:34715 to 192.168.58.2:1812 length 186
Mon Mar  3 13:13:54 2025 : Debug: (4)   Message-Authenticator = 0x8b49f62b6a93c14dc41c49f37a7ecfae
Mon Mar  3 13:13:54 2025 : Debug: (4)   User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (4)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 13:13:54 2025 : Debug: (4)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 13:13:54 2025 : Debug: (4)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 13:13:54 2025 : Debug: (4)   Service-Type = Framed-User
Mon Mar  3 13:13:54 2025 : Debug: (4)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 13:13:54 2025 : Debug: (4)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 13:13:54 2025 : Debug: (4)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 13:13:54 2025 : Debug: (4)   Framed-MTU = 1400
Mon Mar  3 13:13:54 2025 : Debug: (4)   EAP-Message = 0x024700060d00
Mon Mar  3 13:13:54 2025 : Debug: (4)   State = 0xf118589af05f5562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (4) Restoring &session-state
Mon Mar  3 13:13:54 2025 : Debug: (4)   &session-state:Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 13:13:54 2025 : Debug: (4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 13:13:54 2025 : Debug: (4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 13:13:54 2025 : Debug: (4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 13:13:54 2025 : Debug: (4) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (4)   authorize {
Mon Mar  3 13:13:54 2025 : Debug: (4)     policy filter_username {
Mon Mar  3 13:13:54 2025 : Debug: (4)       if (&User-Name) {
Mon Mar  3 13:13:54 2025 : Debug: (4)       if (&User-Name)  -> TRUE
Mon Mar  3 13:13:54 2025 : Debug: (4)       if (&User-Name)  {
Mon Mar  3 13:13:54 2025 : Debug: (4)         if (&User-Name =~ / /) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (4)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (4)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (4)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (4)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (4)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 1 matches
Mon Mar  3 13:13:54 2025 : Debug: Clearing 1 old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 3 matches
Mon Mar  3 13:13:54 2025 : Debug: (4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (4)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 13:13:54 2025 : Debug: Clearing 3 old matches
Mon Mar  3 13:13:54 2025 : Debug: (4)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (4)         if (&User-Name =~ /@\./)  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (4)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (4)       } # if (&User-Name)  = notfound
Mon Mar  3 13:13:54 2025 : Debug: (4)     } # policy filter_username = notfound
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (4)     [preprocess] = ok
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (4)     [chap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (4)     [mschap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (4)     [digest] = noop
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (4) suffix: Checking for suffix after "@"
Mon Mar  3 13:13:54 2025 : Debug: (4) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (4) suffix: No such realm "example.org"
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (4)     [suffix] = noop
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (4) eap: Peer sent EAP Response (code 2) ID 71 length 6
Mon Mar  3 13:13:54 2025 : Debug: (4) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (4)     [eap] = updated
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (4)     [files] = noop
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (4)     [expiration] = noop
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (4)     [logintime] = noop
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (4)     [pap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (4)   } # authorize = updated
Mon Mar  3 13:13:54 2025 : Debug: (4) Found Auth-Type = eap
Mon Mar  3 13:13:54 2025 : Debug: (4) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (4)   authenticate {
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (4) eap: Expiring EAP session with state 0xf118589af05f5562
Mon Mar  3 13:13:54 2025 : Debug: (4) eap: Finished EAP session with state 0xf118589af05f5562
Mon Mar  3 13:13:54 2025 : Debug: (4) eap: Previous EAP request found for state 0xf118589af05f5562, released from the list
Mon Mar  3 13:13:54 2025 : Debug: (4) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 13:13:54 2025 : Debug: (4) eap: Calling submodule eap_tls to process data
Mon Mar  3 13:13:54 2025 : Debug: (4) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 13:13:54 2025 : Debug: (4) eap_tls: (TLS) EAP Peer sent flags ---
Mon Mar  3 13:13:54 2025 : Debug: (4) eap_tls: (TLS) Peer ACKed our handshake fragment
Mon Mar  3 13:13:54 2025 : Debug: (4) eap_tls: (TLS) EAP Verification says request
Mon Mar  3 13:13:54 2025 : Debug: (4) eap_tls: [eaptls process] = handled
Mon Mar  3 13:13:54 2025 : Debug: (4) eap: Sending EAP Request (code 1) ID 72 length 1004
Mon Mar  3 13:13:54 2025 : Debug: (4) eap: EAP session adding &reply:State = 0xf118589af3505562
Mon Mar  3 13:13:54 2025 : Debug: (4)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (4)     [eap] = handled
Mon Mar  3 13:13:54 2025 : Debug: (4)   } # authenticate = handled
Mon Mar  3 13:13:54 2025 : Debug: (4) Using Post-Auth-Type Challenge
Mon Mar  3 13:13:54 2025 : Debug: (4) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (4)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 13:13:54 2025 : Debug: (4) session-state: Saving cached attributes
Mon Mar  3 13:13:54 2025 : Debug: (4)   Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 13:13:54 2025 : Debug: (4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 13:13:54 2025 : Debug: (4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 13:13:54 2025 : Debug: (4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 13:13:54 2025 : Debug: (4) Sent Access-Challenge Id 2 from 192.168.58.2:1812 to 192.168.58.100:34715 length 1068
Mon Mar  3 13:13:54 2025 : Debug: (4)   EAP-Message = 0x014803ec0dc000000b9777337cbd678b387f083537aa4e3a5fef0ce305c0ad8ea1084bf470721d412eef71aaf237dff3edc2d26f2d4a5ef462cff5f751ef8d71a79b73eef8e73dece669331befcc27287879737a7a75f6fc169b2212467b2d3a2bbae3d27b27b234574a9d67bccf31948a66767c45805ce125530eb3e9dec8453e491761d1c733777efcae5e82001db8d47c56dbc1894dc657a11159983d2fc1c409ea5c36ddda37d466d51258ad6fd907bddd0004fe308204fa308203e2a00302010202145f94ac48a74cbabc4bde9d6bbdf038e8194c70c1300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c65204365727469666963617465204175
Mon Mar  3 13:13:54 2025 : Debug: (4)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 13:13:54 2025 : Debug: (4)   State = 0xf118589af3505562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (4) Finished request
Mon Mar  3 13:13:54 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 13:13:54 2025 : Debug: (5) Received Access-Request Id 3 from 192.168.58.100:34715 to 192.168.58.2:1812 length 186
Mon Mar  3 13:13:54 2025 : Debug: (5)   Message-Authenticator = 0x5d0a604ffd794324cdb530fa53acd3b3
Mon Mar  3 13:13:54 2025 : Debug: (5)   User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (5)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 13:13:54 2025 : Debug: (5)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 13:13:54 2025 : Debug: (5)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 13:13:54 2025 : Debug: (5)   Service-Type = Framed-User
Mon Mar  3 13:13:54 2025 : Debug: (5)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 13:13:54 2025 : Debug: (5)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 13:13:54 2025 : Debug: (5)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 13:13:54 2025 : Debug: (5)   Framed-MTU = 1400
Mon Mar  3 13:13:54 2025 : Debug: (5)   EAP-Message = 0x024800060d00
Mon Mar  3 13:13:54 2025 : Debug: (5)   State = 0xf118589af3505562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (5) Restoring &session-state
Mon Mar  3 13:13:54 2025 : Debug: (5)   &session-state:Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 13:13:54 2025 : Debug: (5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 13:13:54 2025 : Debug: (5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 13:13:54 2025 : Debug: (5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 13:13:54 2025 : Debug: (5) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (5)   authorize {
Mon Mar  3 13:13:54 2025 : Debug: (5)     policy filter_username {
Mon Mar  3 13:13:54 2025 : Debug: (5)       if (&User-Name) {
Mon Mar  3 13:13:54 2025 : Debug: (5)       if (&User-Name)  -> TRUE
Mon Mar  3 13:13:54 2025 : Debug: (5)       if (&User-Name)  {
Mon Mar  3 13:13:54 2025 : Debug: (5)         if (&User-Name =~ / /) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (5)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (5)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (5)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (5)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (5)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 1 matches
Mon Mar  3 13:13:54 2025 : Debug: Clearing 1 old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 3 matches
Mon Mar  3 13:13:54 2025 : Debug: (5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (5)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 13:13:54 2025 : Debug: Clearing 3 old matches
Mon Mar  3 13:13:54 2025 : Debug: (5)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (5)         if (&User-Name =~ /@\./)  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (5)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (5)       } # if (&User-Name)  = notfound
Mon Mar  3 13:13:54 2025 : Debug: (5)     } # policy filter_username = notfound
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (5)     [preprocess] = ok
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (5)     [chap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (5)     [mschap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (5)     [digest] = noop
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (5) suffix: Checking for suffix after "@"
Mon Mar  3 13:13:54 2025 : Debug: (5) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (5) suffix: No such realm "example.org"
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (5)     [suffix] = noop
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (5) eap: Peer sent EAP Response (code 2) ID 72 length 6
Mon Mar  3 13:13:54 2025 : Debug: (5) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (5)     [eap] = updated
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (5)     [files] = noop
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (5)     [expiration] = noop
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (5)     [logintime] = noop
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (5)     [pap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (5)   } # authorize = updated
Mon Mar  3 13:13:54 2025 : Debug: (5) Found Auth-Type = eap
Mon Mar  3 13:13:54 2025 : Debug: (5) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (5)   authenticate {
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (5) eap: Expiring EAP session with state 0xf118589af3505562
Mon Mar  3 13:13:54 2025 : Debug: (5) eap: Finished EAP session with state 0xf118589af3505562
Mon Mar  3 13:13:54 2025 : Debug: (5) eap: Previous EAP request found for state 0xf118589af3505562, released from the list
Mon Mar  3 13:13:54 2025 : Debug: (5) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 13:13:54 2025 : Debug: (5) eap: Calling submodule eap_tls to process data
Mon Mar  3 13:13:54 2025 : Debug: (5) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 13:13:54 2025 : Debug: (5) eap_tls: (TLS) EAP Peer sent flags ---
Mon Mar  3 13:13:54 2025 : Debug: (5) eap_tls: (TLS) Peer ACKed our handshake fragment
Mon Mar  3 13:13:54 2025 : Debug: (5) eap_tls: (TLS) EAP Verification says request
Mon Mar  3 13:13:54 2025 : Debug: (5) eap_tls: [eaptls process] = handled
Mon Mar  3 13:13:54 2025 : Debug: (5) eap: Sending EAP Request (code 1) ID 73 length 989
Mon Mar  3 13:13:54 2025 : Debug: (5) eap: EAP session adding &reply:State = 0xf118589af2515562
Mon Mar  3 13:13:54 2025 : Debug: (5)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (5)     [eap] = handled
Mon Mar  3 13:13:54 2025 : Debug: (5)   } # authenticate = handled
Mon Mar  3 13:13:54 2025 : Debug: (5) Using Post-Auth-Type Challenge
Mon Mar  3 13:13:54 2025 : Debug: (5) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (5)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 13:13:54 2025 : Debug: (5) session-state: Saving cached attributes
Mon Mar  3 13:13:54 2025 : Debug: (5)   Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (5)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 13:13:54 2025 : Debug: (5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 13:13:54 2025 : Debug: (5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 13:13:54 2025 : Debug: (5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 13:13:54 2025 : Debug: (5) Sent Access-Challenge Id 3 from 192.168.58.2:1812 to 192.168.58.100:34715 length 1053
Mon Mar  3 13:13:54 2025 : Debug: (5)   EAP-Message = 0x014903dd0d8000000b9778616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982145f94ac48a74cbabc4bde9d6bbdf038e8194c70c1300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100240eebd478cae18e97bbd47019425fff55088f75e2c6876a8dcc342b4f172b0082cc1266546cf9392eaf79a1d72c07c84341225cb53ae618b3c76006e298e3e3703d43543e50c06664d97e4c5b9f2263f982ad3ef1ae6feea4096366db5bd6b3c7b9077ff242684329f9cb3d3e8a950961654dae9ae8369a156f6ea18a7b1cf688c3cb082df1fe25f331272fa0f410972b3058cdef518d5f7f2e27209126325bed5ea0e20d
Mon Mar  3 13:13:54 2025 : Debug: (5)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 13:13:54 2025 : Debug: (5)   State = 0xf118589af2515562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (5) Finished request
Mon Mar  3 13:13:54 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 13:13:54 2025 : Debug: (6) Received Access-Request Id 4 from 192.168.58.100:34715 to 192.168.58.2:1812 length 1598
Mon Mar  3 13:13:54 2025 : Debug: (6)   Message-Authenticator = 0x69f4ff362e073d96b786be2e1003c034
Mon Mar  3 13:13:54 2025 : Debug: (6)   User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (6)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 13:13:54 2025 : Debug: (6)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 13:13:54 2025 : Debug: (6)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 13:13:54 2025 : Debug: (6)   Service-Type = Framed-User
Mon Mar  3 13:13:54 2025 : Debug: (6)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 13:13:54 2025 : Debug: (6)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 13:13:54 2025 : Debug: (6)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 13:13:54 2025 : Debug: (6)   Framed-MTU = 1400
Mon Mar  3 13:13:54 2025 : Debug: (6)   EAP-Message = 0x024905800dc000000a8f16030309200b00091c00091900041530820411308202f9a003020102020102300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3235303330333132343633375a170d3235303530323132343633375a3071310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3119301706035504030c1075736572406578616d706c652e6f7267311f301d06092a864886f70d010901161075736572406578616d706c652e6f726730820122300d06092a864886f70d0101010500038201
Mon Mar  3 13:13:54 2025 : Debug: (6)   State = 0xf118589af2515562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (6) Restoring &session-state
Mon Mar  3 13:13:54 2025 : Debug: (6)   &session-state:Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 13:13:54 2025 : Debug: (6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 13:13:54 2025 : Debug: (6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 13:13:54 2025 : Debug: (6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 13:13:54 2025 : Debug: (6) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (6)   authorize {
Mon Mar  3 13:13:54 2025 : Debug: (6)     policy filter_username {
Mon Mar  3 13:13:54 2025 : Debug: (6)       if (&User-Name) {
Mon Mar  3 13:13:54 2025 : Debug: (6)       if (&User-Name)  -> TRUE
Mon Mar  3 13:13:54 2025 : Debug: (6)       if (&User-Name)  {
Mon Mar  3 13:13:54 2025 : Debug: (6)         if (&User-Name =~ / /) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (6)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (6)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (6)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (6)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (6)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 1 matches
Mon Mar  3 13:13:54 2025 : Debug: Clearing 1 old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 3 matches
Mon Mar  3 13:13:54 2025 : Debug: (6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (6)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 13:13:54 2025 : Debug: Clearing 3 old matches
Mon Mar  3 13:13:54 2025 : Debug: (6)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (6)         if (&User-Name =~ /@\./)  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (6)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (6)       } # if (&User-Name)  = notfound
Mon Mar  3 13:13:54 2025 : Debug: (6)     } # policy filter_username = notfound
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (6)     [preprocess] = ok
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (6)     [chap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (6)     [mschap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (6)     [digest] = noop
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (6) suffix: Checking for suffix after "@"
Mon Mar  3 13:13:54 2025 : Debug: (6) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (6) suffix: No such realm "example.org"
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (6)     [suffix] = noop
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (6) eap: Peer sent EAP Response (code 2) ID 73 length 1408
Mon Mar  3 13:13:54 2025 : Debug: (6) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (6)     [eap] = updated
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (6)     [files] = noop
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (6)     [expiration] = noop
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (6)     [logintime] = noop
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (6)     [pap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (6)   } # authorize = updated
Mon Mar  3 13:13:54 2025 : Debug: (6) Found Auth-Type = eap
Mon Mar  3 13:13:54 2025 : Debug: (6) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (6)   authenticate {
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (6) eap: Expiring EAP session with state 0xf118589af2515562
Mon Mar  3 13:13:54 2025 : Debug: (6) eap: Finished EAP session with state 0xf118589af2515562
Mon Mar  3 13:13:54 2025 : Debug: (6) eap: Previous EAP request found for state 0xf118589af2515562, released from the list
Mon Mar  3 13:13:54 2025 : Debug: (6) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 13:13:54 2025 : Debug: (6) eap: Calling submodule eap_tls to process data
Mon Mar  3 13:13:54 2025 : Debug: (6) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 13:13:54 2025 : Debug: (6) eap_tls: (TLS) EAP Peer sent flags -ML
Mon Mar  3 13:13:54 2025 : Debug: (6) eap_tls: (TLS) EAP Peer says that the final record size will be 2703 bytes
Mon Mar  3 13:13:54 2025 : Debug: (6) eap_tls: (TLS) EAP Expecting 2 fragments
Mon Mar  3 13:13:54 2025 : Debug: (6) eap_tls: (TLS) EAP Got first TLS fragment (1398 bytes).  Peer says more fragments will follow
Mon Mar  3 13:13:54 2025 : Debug: (6) eap_tls: (TLS) EAP Verification says first fragment
Mon Mar  3 13:13:54 2025 : Debug: (6) eap_tls: (TLS) EAP ACKing fragment, the peer should send more data.
Mon Mar  3 13:13:54 2025 : Debug: (6) eap_tls: [eaptls process] = handled
Mon Mar  3 13:13:54 2025 : Debug: (6) eap: Sending EAP Request (code 1) ID 74 length 6
Mon Mar  3 13:13:54 2025 : Debug: (6) eap: EAP session adding &reply:State = 0xf118589af5525562
Mon Mar  3 13:13:54 2025 : Debug: (6)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (6)     [eap] = handled
Mon Mar  3 13:13:54 2025 : Debug: (6)   } # authenticate = handled
Mon Mar  3 13:13:54 2025 : Debug: (6) Using Post-Auth-Type Challenge
Mon Mar  3 13:13:54 2025 : Debug: (6) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (6)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 13:13:54 2025 : Debug: (6) session-state: Saving cached attributes
Mon Mar  3 13:13:54 2025 : Debug: (6)   Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (6)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 13:13:54 2025 : Debug: (6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 13:13:54 2025 : Debug: (6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 13:13:54 2025 : Debug: (6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 13:13:54 2025 : Debug: (6) Sent Access-Challenge Id 4 from 192.168.58.2:1812 to 192.168.58.100:34715 length 64
Mon Mar  3 13:13:54 2025 : Debug: (6)   EAP-Message = 0x014a00060d00
Mon Mar  3 13:13:54 2025 : Debug: (6)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 13:13:54 2025 : Debug: (6)   State = 0xf118589af5525562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (6) Finished request
Mon Mar  3 13:13:54 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 13:13:54 2025 : Debug: (7) Received Access-Request Id 5 from 192.168.58.100:34715 to 192.168.58.2:1812 length 1501
Mon Mar  3 13:13:54 2025 : Debug: (7)   Message-Authenticator = 0x9e76c7ae7a7197343a8295e2f6c736af
Mon Mar  3 13:13:54 2025 : Debug: (7)   User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (7)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 13:13:54 2025 : Debug: (7)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 13:13:54 2025 : Debug: (7)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 13:13:54 2025 : Debug: (7)   Service-Type = Framed-User
Mon Mar  3 13:13:54 2025 : Debug: (7)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 13:13:54 2025 : Debug: (7)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 13:13:54 2025 : Debug: (7)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 13:13:54 2025 : Debug: (7)   Framed-MTU = 1400
Mon Mar  3 13:13:54 2025 : Debug: (7)   EAP-Message = 0x024a051f0d00706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747930820122300d06092a864886f70d01010105000382010f003082010a0282010100b22c849c5c3293029ab62739544eb38827f305d4935b2932c1d56e0f486751406caf648ce12891e867b2599b051d02c4165ac314bb3a8d2b8a4786e829780f20b935ce792b43bdbeac45759f352ba7c1a2bf9c8e33d4701004c189f80dc1257e432fcb879df7f2cff3bab5d847d4ba791155c09f873a748e9f3f887a47070f4a418623aba05700732c6fe8898a4dc714cc00665c2724e1f0a68464edaa098901a85e07adff4b43d70399cd84ff4f3fc9e31f3abf8b027b29426956bae4afe0b1fa7f6392c3705ad56d9944f6f8c71923b1896476394b21ec629b1ee8edb1790b9f19cc8e1a5a73032a8ffb766da7d7aa3589c2294b8d5961233f397745e0577f0203010001a38201423082013e301d0603551d0e041604146b1605742c90aee1f8
Mon Mar  3 13:13:54 2025 : Debug: (7)   State = 0xf118589af5525562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (7) Restoring &session-state
Mon Mar  3 13:13:54 2025 : Debug: (7)   &session-state:Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 13:13:54 2025 : Debug: (7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 13:13:54 2025 : Debug: (7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 13:13:54 2025 : Debug: (7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 13:13:54 2025 : Debug: (7) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (7)   authorize {
Mon Mar  3 13:13:54 2025 : Debug: (7)     policy filter_username {
Mon Mar  3 13:13:54 2025 : Debug: (7)       if (&User-Name) {
Mon Mar  3 13:13:54 2025 : Debug: (7)       if (&User-Name)  -> TRUE
Mon Mar  3 13:13:54 2025 : Debug: (7)       if (&User-Name)  {
Mon Mar  3 13:13:54 2025 : Debug: (7)         if (&User-Name =~ / /) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (7)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (7)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (7)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (7)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (7)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 1 matches
Mon Mar  3 13:13:54 2025 : Debug: Clearing 1 old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 3 matches
Mon Mar  3 13:13:54 2025 : Debug: (7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (7)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 13:13:54 2025 : Debug: Clearing 3 old matches
Mon Mar  3 13:13:54 2025 : Debug: (7)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (7)         if (&User-Name =~ /@\./)  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (7)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (7)       } # if (&User-Name)  = notfound
Mon Mar  3 13:13:54 2025 : Debug: (7)     } # policy filter_username = notfound
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (7)     [preprocess] = ok
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (7)     [chap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (7)     [mschap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (7)     [digest] = noop
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (7) suffix: Checking for suffix after "@"
Mon Mar  3 13:13:54 2025 : Debug: (7) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (7) suffix: No such realm "example.org"
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (7)     [suffix] = noop
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (7) eap: Peer sent EAP Response (code 2) ID 74 length 1311
Mon Mar  3 13:13:54 2025 : Debug: (7) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (7)     [eap] = updated
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (7)     [files] = noop
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (7)     [expiration] = noop
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (7)     [logintime] = noop
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (7)     [pap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (7)   } # authorize = updated
Mon Mar  3 13:13:54 2025 : Debug: (7) Found Auth-Type = eap
Mon Mar  3 13:13:54 2025 : Debug: (7) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (7)   authenticate {
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (7) eap: Expiring EAP session with state 0xf118589af5525562
Mon Mar  3 13:13:54 2025 : Debug: (7) eap: Finished EAP session with state 0xf118589af5525562
Mon Mar  3 13:13:54 2025 : Debug: (7) eap: Previous EAP request found for state 0xf118589af5525562, released from the list
Mon Mar  3 13:13:54 2025 : Debug: (7) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 13:13:54 2025 : Debug: (7) eap: Calling submodule eap_tls to process data
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) EAP Peer sent flags ---
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) EAP Got final fragment (1305 bytes)
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) EAP Verification says ok
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) EAP Done initial handshake
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Handshake state [TWSD] - Server SSLv3/TLS write server done (26)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 2336 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0b 00 09 1c 00 09 19 00 04 15 30 82 04 11 30 82 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        02 f9 a0 03 02 01 02 02 01 02 30 0d 06 09 2a 86 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        48 86 f7 0d 01 01 0b 05 00 30 81 93 31 0b 30 09 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        06 03 55 04 06 13 02 46 52 31 0f 30 0d 06 03 55 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        04 08 0c 06 52 61 64 69 75 73 31 12 30 10 06 03 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        55 04 07 0c 09 53 6f 6d 65 77 68 65 72 65 31 15 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        30 13 06 03 55 04 0a 0c 0c 45 78 61 6d 70 6c 65 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        20 49 6e 63 2e 31 20 30 1e 06 09 2a 86 48 86 f7 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0d 01 09 01 16 11 61 64 6d 69 6e 40 65 78 61 6d 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        70 6c 65 2e 6f 72 67 31 26 30 24 06 03 55 04 03 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0c 1d 45 78 61 6d 70 6c 65 20 43 65 72 74 69 66 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        69 63 61 74 65 20 41 75 74 68 6f 72 69 74 79 30 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        1e 17 0d 32 35 30 33 30 33 31 32 34 36 33 37 5a 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        17 0d 32 35 30 35 30 32 31 32 34 36 33 37 5a 30 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        71 31 0b 30 09 06 03 55 04 06 13 02 46 52 31 0f 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        30 0d 06 03 55 04 08 0c 06 52 61 64 69 75 73 31 
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) recv TLS 1.2 Handshake, Certificate
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Creating attributes from server certificate
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Cert-Serial := "5f94ac48a74cbabc4bde9d6bbdf038e8194c70c1"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Cert-Expiration := "250502124636Z"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Cert-Valid-Since := "250303124636Z"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Cert-Subject := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Cert-Issuer := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Cert-Common-Name := "Example Certificate Authority"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) chain-depth   : 1
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) error         : 0
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: identity      : user@example.org
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) common name   : Example Certificate Authority
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) subject       : /C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) issuer        : /C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) verify return : 1
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Creating attributes from client certificate
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Client-Cert-Serial := "02"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Client-Cert-Expiration := "250502124637Z"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Client-Cert-Valid-Since := "250303124637Z"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Client-Cert-Subject := "/C=FR/ST=Radius/O=Example Inc./CN=user@example.org/emailAddress=user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Client-Cert-Issuer := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Client-Cert-Common-Name := "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Client-Cert-X509v3-Extended-Key-Usage += "TLS Web Client Authentication"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   Skipping TLS-Client-Cert-X509v3-CRL-Distribution-Points += 'Full Name:   URI:http://www.example.com/example_ca.crl'.  Please check that both the attribute and value are defined in the dictionaries
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Client-Cert-X509v3-Subject-Key-Identifier += "D2:ED:4E:FC:B1:51:0F:0A:04:BA:57:34:40:54:98:35:3B:9C:C5:91"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Client-Cert-X509v3-Authority-Key-Identifier += "6B:16:05:74:2C:90:AE:E1:F8:68:7B:49:7E:66:D1:CE:96:D7:11:35"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Client-Cert-X509v3-Extended-Key-Usage-OID += "1.3.6.1.5.5.7.3.2"
Mon Mar  3 13:13:54 2025 : Warning: Certificate chain - 1 cert(s) untrusted
Mon Mar  3 13:13:54 2025 : Warning: (TLS) untrusted certificate with depth [1] subject name /C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority
Mon Mar  3 13:13:54 2025 : Warning: (TLS) untrusted certificate with depth [0] subject name /C=FR/ST=Radius/O=Example Inc./CN=user@example.org/emailAddress=user@example.org
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) chain-depth   : 0
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) error         : 0
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: identity      : user@example.org
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) common name   : user@example.org
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) subject       : /C=FR/ST=Radius/O=Example Inc./CN=user@example.org/emailAddress=user@example.org
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) issuer        : /C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) verify return : 1
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Handshake state [TRCC] - Server SSLv3/TLS read client certificate (27)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 37 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        10 00 00 21 20 24 29 ca 87 fe 44 43 fd a0 69 ad 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        af 1c 3c b8 4b ca 95 1c 01 93 ea 11 92 38 98 34 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        35 0d 5f fb 57 
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Handshake state [TRCKE] - Server SSLv3/TLS read client key exchange (28)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 264 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        0f 00 01 04 08 04 01 00 1c 66 27 b8 c1 dc 4a c1 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        5e 43 0d 3c bd 9a 6d 13 9f 95 12 d7 b6 a5 a1 ce 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        40 d7 43 13 67 65 7c 01 68 1e 54 ff 48 50 75 54 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        e4 3a 98 d6 4e 29 54 58 e4 cb 57 80 89 35 b0 b5 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        6e 26 04 19 fa b3 e4 eb 11 da df 0e 28 e0 4f 08 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        a1 77 dc bf 6d 52 59 a5 94 d2 2b d3 ec f1 8c b3 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        d0 a2 2a 7b e3 63 1d 81 6c 18 a7 9e 14 56 06 38 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        9e c1 d3 39 7c f8 22 a2 8c 5a 63 da a6 ef f9 11 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        b4 11 0d c3 fe 37 61 88 eb 12 14 37 a5 37 9b 22 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        e2 48 65 93 de a4 8e 3f a6 db 31 c9 da 9e 82 d9 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        47 a5 42 bc 42 36 ec 1c 85 22 28 13 10 28 f4 00 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        d6 d7 cb 8e 8d f7 f4 63 8a cc ba 2f 5f c7 47 e3 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        20 d7 98 6f 87 23 90 41 4f 48 c2 3b ed db 27 b6 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        86 1a 55 47 be af 31 6d fc 76 b8 0c 5d 3e 7a d7 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        18 7f 00 d3 2a 23 ac f6 08 5b f5 ee ee 03 e3 55 
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        c6 50 fd 03 b7 c5 a1 3f 7a cb 62 09 f8 d5 42 d9 
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) recv TLS 1.2 Handshake, CertificateVerify
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Handshake state [TRCV] - Server SSLv3/TLS read certificate verify (29)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Handshake state [TRCCS] - Server SSLv3/TLS read change cipher spec (31)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 16 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        14 00 00 0c d4 40 d7 4f 44 25 27 cf 83 8e c6 24 
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) recv TLS 1.2 Handshake, Finished
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Handshake state [TRFIN] - Server SSLv3/TLS read finished (32)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 1 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        01 
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) send TLS 1.2 ChangeCipherSpec
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Handshake state [TWCCS] - Server SSLv3/TLS write change cipher spec (35)
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 13:13:54 2025 : Debug: (TLS) Received 16 bytes of TLS data
Mon Mar  3 13:13:54 2025 : Debug: (TLS)        14 00 00 0c 96 a9 ab 6f fd 00 2f a0 87 39 ad 03 
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) send TLS 1.2 Handshake, Finished
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Handshake state [TWFIN] - Server SSLv3/TLS write finished (36)
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Handshake state [SSLOK] - SSL negotiation finished successfully (1)
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) Connection Established
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls:   TLS-Session-Version = "TLS 1.2"
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: (TLS) got 51 bytes of data
Mon Mar  3 13:13:54 2025 : Debug: (7) eap_tls: [eaptls process] = handled
Mon Mar  3 13:13:54 2025 : Debug: (7) eap: Sending EAP Request (code 1) ID 75 length 61
Mon Mar  3 13:13:54 2025 : Debug: (7) eap: EAP session adding &reply:State = 0xf118589af4535562
Mon Mar  3 13:13:54 2025 : Debug: (7)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (7)     [eap] = handled
Mon Mar  3 13:13:54 2025 : Debug: (7)   } # authenticate = handled
Mon Mar  3 13:13:54 2025 : Debug: (7) Using Post-Auth-Type Challenge
Mon Mar  3 13:13:54 2025 : Debug: (7) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (7)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 13:13:54 2025 : Debug: (7) session-state: Saving cached attributes
Mon Mar  3 13:13:54 2025 : Debug: (7)   Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, CertificateVerify"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
Mon Mar  3 13:13:54 2025 : Debug: (7)   TLS-Session-Version = "TLS 1.2"
Mon Mar  3 13:13:54 2025 : Debug: (7) Sent Access-Challenge Id 5 from 192.168.58.2:1812 to 192.168.58.100:34715 length 119
Mon Mar  3 13:13:54 2025 : Debug: (7)   EAP-Message = 0x014b003d0d80000000331403030001011603030028f7f37a2005d4871b6012fb71201b6d5aa30e4bcd30706c806a0fb8720d4724976c3406894b8446c2
Mon Mar  3 13:13:54 2025 : Debug: (7)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 13:13:54 2025 : Debug: (7)   State = 0xf118589af4535562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (7) Finished request
Mon Mar  3 13:13:54 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 13:13:54 2025 : Debug: (8) Received Access-Request Id 6 from 192.168.58.100:34715 to 192.168.58.2:1812 length 186
Mon Mar  3 13:13:54 2025 : Debug: (8)   Message-Authenticator = 0xc00099eb246cac94e443c37a20f75980
Mon Mar  3 13:13:54 2025 : Debug: (8)   User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (8)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 13:13:54 2025 : Debug: (8)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 13:13:54 2025 : Debug: (8)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 13:13:54 2025 : Debug: (8)   Service-Type = Framed-User
Mon Mar  3 13:13:54 2025 : Debug: (8)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 13:13:54 2025 : Debug: (8)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 13:13:54 2025 : Debug: (8)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 13:13:54 2025 : Debug: (8)   Framed-MTU = 1400
Mon Mar  3 13:13:54 2025 : Debug: (8)   EAP-Message = 0x024b00060d00
Mon Mar  3 13:13:54 2025 : Debug: (8)   State = 0xf118589af4535562f0b001d34e6ac38b
Mon Mar  3 13:13:54 2025 : Debug: (8) Restoring &session-state
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:Framed-MTU = 994
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Certificate"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, CertificateVerify"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
Mon Mar  3 13:13:54 2025 : Debug: (8)   &session-state:TLS-Session-Version = "TLS 1.2"
Mon Mar  3 13:13:54 2025 : Debug: (8) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (8)   authorize {
Mon Mar  3 13:13:54 2025 : Debug: (8)     policy filter_username {
Mon Mar  3 13:13:54 2025 : Debug: (8)       if (&User-Name) {
Mon Mar  3 13:13:54 2025 : Debug: (8)       if (&User-Name)  -> TRUE
Mon Mar  3 13:13:54 2025 : Debug: (8)       if (&User-Name)  {
Mon Mar  3 13:13:54 2025 : Debug: (8)         if (&User-Name =~ / /) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (8)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (8)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (8)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (8)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (8)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 1 matches
Mon Mar  3 13:13:54 2025 : Debug: Clearing 1 old matches
Mon Mar  3 13:13:54 2025 : Debug: Adding 3 matches
Mon Mar  3 13:13:54 2025 : Debug: (8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (8)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 13:13:54 2025 : Debug: Clearing 3 old matches
Mon Mar  3 13:13:54 2025 : Debug: (8)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (8)         if (&User-Name =~ /@\./)  {
Mon Mar  3 13:13:54 2025 : Debug: No old matches
Mon Mar  3 13:13:54 2025 : Debug: (8)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (8)       } # if (&User-Name)  = notfound
Mon Mar  3 13:13:54 2025 : Debug: (8)     } # policy filter_username = notfound
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [preprocess] = ok
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [chap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [mschap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [digest] = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (8) suffix: Checking for suffix after "@"
Mon Mar  3 13:13:54 2025 : Debug: (8) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (8) suffix: No such realm "example.org"
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [suffix] = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (8) eap: Peer sent EAP Response (code 2) ID 75 length 6
Mon Mar  3 13:13:54 2025 : Debug: (8) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [eap] = updated
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [files] = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [expiration] = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [logintime] = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [pap] = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)   } # authorize = updated
Mon Mar  3 13:13:54 2025 : Debug: (8) Found Auth-Type = eap
Mon Mar  3 13:13:54 2025 : Debug: (8) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (8)   authenticate {
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (8) eap: Expiring EAP session with state 0xf118589af4535562
Mon Mar  3 13:13:54 2025 : Debug: (8) eap: Finished EAP session with state 0xf118589af4535562
Mon Mar  3 13:13:54 2025 : Debug: (8) eap: Previous EAP request found for state 0xf118589af4535562, released from the list
Mon Mar  3 13:13:54 2025 : Debug: (8) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 13:13:54 2025 : Debug: (8) eap: Calling submodule eap_tls to process data
Mon Mar  3 13:13:54 2025 : Debug: (8) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 13:13:54 2025 : Debug: (8) eap_tls: (TLS) EAP Peer sent flags ---
Mon Mar  3 13:13:54 2025 : Debug: (8) eap_tls: (TLS) Peer ACKed our handshake fragment.  handshake is finished
Mon Mar  3 13:13:54 2025 : Debug: (8) eap_tls: (TLS) EAP Verification says success
Mon Mar  3 13:13:54 2025 : Debug: (8) eap_tls: [eaptls process] = success
Mon Mar  3 13:13:54 2025 : Debug: (8) eap: Sending EAP Success (code 3) ID 75 length 4
Mon Mar  3 13:13:54 2025 : Debug: (8) eap: Freeing handler
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [eap] = ok
Mon Mar  3 13:13:54 2025 : Debug: (8)   } # authenticate = ok
Mon Mar  3 13:13:54 2025 : Debug: (8) # Executing section post-auth from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 13:13:54 2025 : Debug: (8)   post-auth {
Mon Mar  3 13:13:54 2025 : Debug: (8)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
Mon Mar  3 13:13:54 2025 : Debug: (8)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (8)     update {
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, CertificateRequest'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Certificate'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, CertificateVerify'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
Mon Mar  3 13:13:54 2025 : Debug: (8)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
Mon Mar  3 13:13:54 2025 : Debug: (8)     } # update = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[post-auth]: calling exec (rlm_exec)
Mon Mar  3 13:13:54 2025 : Debug: (8)     modsingle[post-auth]: returned from exec (rlm_exec)
Mon Mar  3 13:13:54 2025 : Debug: (8)     [exec] = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)     policy remove_reply_message_if_eap {
Mon Mar  3 13:13:54 2025 : Debug: (8)       if (&reply:EAP-Message && &reply:Reply-Message) {
Mon Mar  3 13:13:54 2025 : Debug: (8)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (8)       else {
Mon Mar  3 13:13:54 2025 : Debug: (8)         modsingle[post-auth]: calling noop (rlm_always)
Mon Mar  3 13:13:54 2025 : Debug: (8)         modsingle[post-auth]: returned from noop (rlm_always)
Mon Mar  3 13:13:54 2025 : Debug: (8)         [noop] = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)       } # else = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)     } # policy remove_reply_message_if_eap = noop
Mon Mar  3 13:13:54 2025 : Debug: (8)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
Mon Mar  3 13:13:54 2025 : Debug: (8)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
Mon Mar  3 13:13:54 2025 : Debug: (8)   } # post-auth = noop
Mon Mar  3 13:13:54 2025 : Debug: (8) Sent Access-Accept Id 6 from 192.168.58.2:1812 to 192.168.58.100:34715 length 184
Mon Mar  3 13:13:54 2025 : Debug: (8)   MS-MPPE-Recv-Key = 0x68a27287e3e9eb6b0c95c576f22c578d71f434c43177edc45e3d194005ac4a79
Mon Mar  3 13:13:54 2025 : Debug: (8)   MS-MPPE-Send-Key = 0xfaaa2b56745e8f91efbe6b0ed982cdf98b1a87ac4ec9d63fcf26e33ba30b7b4b
Mon Mar  3 13:13:54 2025 : Debug: (8)   EAP-Message = 0x034b0004
Mon Mar  3 13:13:54 2025 : Debug: (8)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 13:13:54 2025 : Debug: (8)   User-Name = "user@example.org"
Mon Mar  3 13:13:54 2025 : Debug: (8)   Framed-MTU += 994
Mon Mar  3 13:13:54 2025 : Debug: (8) Finished request
Mon Mar  3 13:13:54 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 13:13:59 2025 : Debug: (2) Cleaning up request packet ID 0 with timestamp +1637 due to cleanup_delay was reached
Mon Mar  3 13:13:59 2025 : Debug: (3) Cleaning up request packet ID 1 with timestamp +1637 due to cleanup_delay was reached
Mon Mar  3 13:13:59 2025 : Debug: (4) Cleaning up request packet ID 2 with timestamp +1637 due to cleanup_delay was reached
Mon Mar  3 13:13:59 2025 : Debug: (5) Cleaning up request packet ID 3 with timestamp +1637 due to cleanup_delay was reached
Mon Mar  3 13:13:59 2025 : Debug: (6) Cleaning up request packet ID 4 with timestamp +1637 due to cleanup_delay was reached
Mon Mar  3 13:13:59 2025 : Debug: (7) Cleaning up request packet ID 5 with timestamp +1637 due to cleanup_delay was reached
Mon Mar  3 13:13:59 2025 : Debug: (8) Cleaning up request packet ID 6 with timestamp +1637 due to cleanup_delay was reached
Mon Mar  3 13:13:59 2025 : Info: Ready to process requests
Mon Mar  3 15:14:59 2025 : Debug: (9) Received Access-Request Id 7 from 192.168.58.100:34715 to 192.168.58.2:1812 length 183
Mon Mar  3 15:14:59 2025 : Debug: (9)   Message-Authenticator = 0xca4dad6284b9c444050bbcab4083b95b
Mon Mar  3 15:14:59 2025 : Debug: (9)   User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (9)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 15:14:59 2025 : Debug: (9)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 15:14:59 2025 : Debug: (9)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 15:14:59 2025 : Debug: (9)   Service-Type = Framed-User
Mon Mar  3 15:14:59 2025 : Debug: (9)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 15:14:59 2025 : Debug: (9)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 15:14:59 2025 : Debug: (9)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 15:14:59 2025 : Debug: (9)   Framed-MTU = 1400
Mon Mar  3 15:14:59 2025 : Debug: (9)   EAP-Message = 0x02e400150175736572406578616d706c652e6f7267
Mon Mar  3 15:14:59 2025 : Debug: (9) session-state: No State attribute
Mon Mar  3 15:14:59 2025 : Debug: (9) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (9)   authorize {
Mon Mar  3 15:14:59 2025 : Debug: (9)     policy filter_username {
Mon Mar  3 15:14:59 2025 : Debug: (9)       if (&User-Name) {
Mon Mar  3 15:14:59 2025 : Debug: (9)       if (&User-Name)  -> TRUE
Mon Mar  3 15:14:59 2025 : Debug: (9)       if (&User-Name)  {
Mon Mar  3 15:14:59 2025 : Debug: (9)         if (&User-Name =~ / /) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (9)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (9)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (9)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (9)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (9)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 1 matches
Mon Mar  3 15:14:59 2025 : Debug: Clearing 1 old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 3 matches
Mon Mar  3 15:14:59 2025 : Debug: (9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (9)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 15:14:59 2025 : Debug: Clearing 3 old matches
Mon Mar  3 15:14:59 2025 : Debug: (9)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (9)         if (&User-Name =~ /@\./)  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (9)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (9)       } # if (&User-Name)  = notfound
Mon Mar  3 15:14:59 2025 : Debug: (9)     } # policy filter_username = notfound
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (9)     [preprocess] = ok
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (9)     [chap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (9)     [mschap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (9)     [digest] = noop
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (9) suffix: Checking for suffix after "@"
Mon Mar  3 15:14:59 2025 : Debug: (9) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (9) suffix: No such realm "example.org"
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (9)     [suffix] = noop
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (9) eap: Peer sent EAP Response (code 2) ID 228 length 21
Mon Mar  3 15:14:59 2025 : Debug: (9) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (9)     [eap] = ok
Mon Mar  3 15:14:59 2025 : Debug: (9)   } # authorize = ok
Mon Mar  3 15:14:59 2025 : Debug: (9) Found Auth-Type = eap
Mon Mar  3 15:14:59 2025 : Debug: (9) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (9)   authenticate {
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (9) eap: Peer sent packet with method EAP Identity (1)
Mon Mar  3 15:14:59 2025 : Debug: (9) eap: Calling submodule eap_tls to process data
Mon Mar  3 15:14:59 2025 : Debug: (9) eap_tls: (TLS) Initiating new session
Mon Mar  3 15:14:59 2025 : Debug: (9) eap_tls: (TLS) Setting verify mode to require certificate from client
Mon Mar  3 15:14:59 2025 : Debug: (9) eap_tls: [eaptls start] = request
Mon Mar  3 15:14:59 2025 : Debug: (9) eap: Sending EAP Request (code 1) ID 229 length 6
Mon Mar  3 15:14:59 2025 : Debug: (9) eap: EAP session adding &reply:State = 0x1b8b24da1b6e29fc
Mon Mar  3 15:14:59 2025 : Debug: (9)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (9)     [eap] = handled
Mon Mar  3 15:14:59 2025 : Debug: (9)   } # authenticate = handled
Mon Mar  3 15:14:59 2025 : Debug: (9) Using Post-Auth-Type Challenge
Mon Mar  3 15:14:59 2025 : Debug: (9) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (9)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 15:14:59 2025 : Debug: (9) session-state: Saving cached attributes
Mon Mar  3 15:14:59 2025 : Debug: (9)   Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (9) Sent Access-Challenge Id 7 from 192.168.58.2:1812 to 192.168.58.100:34715 length 64
Mon Mar  3 15:14:59 2025 : Debug: (9)   EAP-Message = 0x01e500060d20
Mon Mar  3 15:14:59 2025 : Debug: (9)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 15:14:59 2025 : Debug: (9)   State = 0x1b8b24da1b6e29fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (9) Finished request
Mon Mar  3 15:14:59 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 15:14:59 2025 : Debug: (10) Received Access-Request Id 8 from 192.168.58.100:34715 to 192.168.58.2:1812 length 370
Mon Mar  3 15:14:59 2025 : Debug: (10)   Message-Authenticator = 0x0aae0cef14fa3628f50f564d3323b7a5
Mon Mar  3 15:14:59 2025 : Debug: (10)   User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (10)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 15:14:59 2025 : Debug: (10)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 15:14:59 2025 : Debug: (10)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 15:14:59 2025 : Debug: (10)   Service-Type = Framed-User
Mon Mar  3 15:14:59 2025 : Debug: (10)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 15:14:59 2025 : Debug: (10)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 15:14:59 2025 : Debug: (10)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 15:14:59 2025 : Debug: (10)   Framed-MTU = 1400
Mon Mar  3 15:14:59 2025 : Debug: (10)   EAP-Message = 0x02e500be0d0016030100b3010000af030316f428b392c21062e7d15157dc696538447864c5bb8498452489fd35f770d761000038c02cc030009fcca9cca8ccaac02bc02f009ec024c028006bc023c0270067c00ac0140039c009c0130033009d009c003d003c0035002f00ff0100004e000b000403000102000a000c000a001d0017001e001900180016000000170000000d002a0028040305030603080708080809080a080b080408050806040105010601030303010302040205020602
Mon Mar  3 15:14:59 2025 : Debug: (10)   State = 0x1b8b24da1b6e29fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (10) Restoring &session-state
Mon Mar  3 15:14:59 2025 : Debug: (10)   &session-state:Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (10) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (10)   authorize {
Mon Mar  3 15:14:59 2025 : Debug: (10)     policy filter_username {
Mon Mar  3 15:14:59 2025 : Debug: (10)       if (&User-Name) {
Mon Mar  3 15:14:59 2025 : Debug: (10)       if (&User-Name)  -> TRUE
Mon Mar  3 15:14:59 2025 : Debug: (10)       if (&User-Name)  {
Mon Mar  3 15:14:59 2025 : Debug: (10)         if (&User-Name =~ / /) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (10)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (10)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (10)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (10)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (10)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 1 matches
Mon Mar  3 15:14:59 2025 : Debug: Clearing 1 old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 3 matches
Mon Mar  3 15:14:59 2025 : Debug: (10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (10)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 15:14:59 2025 : Debug: Clearing 3 old matches
Mon Mar  3 15:14:59 2025 : Debug: (10)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (10)         if (&User-Name =~ /@\./)  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (10)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (10)       } # if (&User-Name)  = notfound
Mon Mar  3 15:14:59 2025 : Debug: (10)     } # policy filter_username = notfound
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (10)     [preprocess] = ok
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (10)     [chap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (10)     [mschap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (10)     [digest] = noop
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (10) suffix: Checking for suffix after "@"
Mon Mar  3 15:14:59 2025 : Debug: (10) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (10) suffix: No such realm "example.org"
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (10)     [suffix] = noop
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (10) eap: Peer sent EAP Response (code 2) ID 229 length 190
Mon Mar  3 15:14:59 2025 : Debug: (10) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (10)     [eap] = updated
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (10)     [files] = noop
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (10)     [expiration] = noop
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (10)     [logintime] = noop
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (10)     [pap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (10)   } # authorize = updated
Mon Mar  3 15:14:59 2025 : Debug: (10) Found Auth-Type = eap
Mon Mar  3 15:14:59 2025 : Debug: (10) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (10)   authenticate {
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (10) eap: Expiring EAP session with state 0x1b8b24da1b6e29fc
Mon Mar  3 15:14:59 2025 : Debug: (10) eap: Finished EAP session with state 0x1b8b24da1b6e29fc
Mon Mar  3 15:14:59 2025 : Debug: (10) eap: Previous EAP request found for state 0x1b8b24da1b6e29fc, released from the list
Mon Mar  3 15:14:59 2025 : Debug: (10) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 15:14:59 2025 : Debug: (10) eap: Calling submodule eap_tls to process data
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) EAP Peer sent flags ---
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) EAP Got final fragment (184 bytes)
Mon Mar  3 15:14:59 2025 : WARNING: (10) eap_tls: (TLS) EAP Total received record fragments (184 bytes), does not equal expected expected data length (0 bytes)
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) EAP Verification says ok
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) EAP Done initial handshake
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) Handshake state [PINIT] - before SSL initialization (0)
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) Handshake state [PINIT] - Server before SSL initialization (0)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 769
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) Handshake state [PINIT] - Server before SSL initialization (0)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 179 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        01 00 00 af 03 03 16 f4 28 b3 92 c2 10 62 e7 d1 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        51 57 dc 69 65 38 44 78 64 c5 bb 84 98 45 24 89 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        fd 35 f7 70 d7 61 00 00 38 c0 2c c0 30 00 9f cc 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        a9 cc a8 cc aa c0 2b c0 2f 00 9e c0 24 c0 28 00 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        6b c0 23 c0 27 00 67 c0 0a c0 14 00 39 c0 09 c0 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        13 00 33 00 9d 00 9c 00 3d 00 3c 00 35 00 2f 00 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        ff 01 00 00 4e 00 0b 00 04 03 00 01 02 00 0a 00 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0c 00 0a 00 1d 00 17 00 1e 00 19 00 18 00 16 00 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        00 00 17 00 00 00 0d 00 2a 00 28 04 03 05 03 06 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        03 08 07 08 08 08 09 08 0a 08 0b 08 04 08 05 08 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        06 04 01 05 01 06 01 03 03 03 01 03 02 04 02 05 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        02 06 02 
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) recv TLS 1.3 Handshake, ClientHello
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) Handshake state [TRCH] - Server SSLv3/TLS read client hello (20)
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: Server preferred ciphers (by priority)
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [0] TLS_AES_256_GCM_SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [1] TLS_CHACHA20_POLY1305_SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [2] TLS_AES_128_GCM_SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [3] ECDHE-ECDSA-AES256-GCM-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [4] ECDHE-RSA-AES256-GCM-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [5] DHE-RSA-AES256-GCM-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [6] ECDHE-ECDSA-CHACHA20-POLY1305
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [7] ECDHE-RSA-CHACHA20-POLY1305
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [8] DHE-RSA-CHACHA20-POLY1305
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [9] ECDHE-ECDSA-AES128-GCM-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [10] ECDHE-RSA-AES128-GCM-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [11] DHE-RSA-AES128-GCM-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [12] ECDHE-ECDSA-AES256-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [13] ECDHE-RSA-AES256-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [14] DHE-RSA-AES256-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [15] ECDHE-ECDSA-AES128-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [16] ECDHE-RSA-AES128-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [17] DHE-RSA-AES128-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [18] ECDHE-ECDSA-AES256-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [19] ECDHE-RSA-AES256-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [20] DHE-RSA-AES256-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [21] ECDHE-ECDSA-AES128-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [22] ECDHE-RSA-AES128-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [23] DHE-RSA-AES128-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [24] RSA-PSK-AES256-GCM-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [25] DHE-PSK-AES256-GCM-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [26] RSA-PSK-CHACHA20-POLY1305
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [27] DHE-PSK-CHACHA20-POLY1305
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [28] ECDHE-PSK-CHACHA20-POLY1305
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [29] AES256-GCM-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [30] PSK-AES256-GCM-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [31] PSK-CHACHA20-POLY1305
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [32] RSA-PSK-AES128-GCM-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [33] DHE-PSK-AES128-GCM-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [34] AES128-GCM-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [35] PSK-AES128-GCM-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [36] AES256-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [37] AES128-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [38] ECDHE-PSK-AES256-CBC-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [39] ECDHE-PSK-AES256-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [40] SRP-RSA-AES-256-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [41] SRP-AES-256-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [42] RSA-PSK-AES256-CBC-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [43] DHE-PSK-AES256-CBC-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [44] RSA-PSK-AES256-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [45] DHE-PSK-AES256-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [46] AES256-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [47] PSK-AES256-CBC-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [48] PSK-AES256-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [49] ECDHE-PSK-AES128-CBC-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [50] ECDHE-PSK-AES128-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [51] SRP-RSA-AES-128-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [52] SRP-AES-128-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [53] RSA-PSK-AES128-CBC-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [54] DHE-PSK-AES128-CBC-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [55] RSA-PSK-AES128-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [56] DHE-PSK-AES128-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [57] AES128-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [58] PSK-AES128-CBC-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [59] PSK-AES128-CBC-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: Client preferred ciphers (by priority)
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [0] ECDHE-ECDSA-AES256-GCM-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [1] ECDHE-RSA-AES256-GCM-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [2] DHE-RSA-AES256-GCM-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [3] ECDHE-ECDSA-CHACHA20-POLY1305
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [4] ECDHE-RSA-CHACHA20-POLY1305
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [5] DHE-RSA-CHACHA20-POLY1305
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [6] ECDHE-ECDSA-AES128-GCM-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [7] ECDHE-RSA-AES128-GCM-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [8] DHE-RSA-AES128-GCM-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [9] ECDHE-ECDSA-AES256-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [10] ECDHE-RSA-AES256-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [11] DHE-RSA-AES256-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [12] ECDHE-ECDSA-AES128-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [13] ECDHE-RSA-AES128-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [14] DHE-RSA-AES128-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [15] ECDHE-ECDSA-AES256-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [16] ECDHE-RSA-AES256-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [17] DHE-RSA-AES256-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [18] ECDHE-ECDSA-AES128-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [19] ECDHE-RSA-AES128-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [20] DHE-RSA-AES128-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [21] AES256-GCM-SHA384
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [22] AES128-GCM-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [23] AES256-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [24] AES128-SHA256
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [25] AES256-SHA
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS)    [26] AES128-SHA
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 61 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        02 00 00 39 03 03 c7 63 49 69 20 79 d5 a0 d7 3a 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        00 da 1f 6e d4 a5 33 46 40 36 ac 98 a6 48 c6 5d 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        1a 6b 58 53 15 14 00 c0 30 00 00 11 ff 01 00 01 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        00 00 0b 00 04 03 00 01 02 00 17 00 00 
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) send TLS 1.2 Handshake, ServerHello
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) Handshake state [TWSH] - Server SSLv3/TLS write server hello (22)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 2373 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0b 00 09 41 00 09 3e 00 04 3a 30 82 04 36 30 82 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        03 1e a0 03 02 01 02 02 01 01 30 0d 06 09 2a 86 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        48 86 f7 0d 01 01 0b 05 00 30 81 93 31 0b 30 09 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        06 03 55 04 06 13 02 46 52 31 0f 30 0d 06 03 55 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        04 08 0c 06 52 61 64 69 75 73 31 12 30 10 06 03 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        55 04 07 0c 09 53 6f 6d 65 77 68 65 72 65 31 15 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        30 13 06 03 55 04 0a 0c 0c 45 78 61 6d 70 6c 65 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        20 49 6e 63 2e 31 20 30 1e 06 09 2a 86 48 86 f7 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0d 01 09 01 16 11 61 64 6d 69 6e 40 65 78 61 6d 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        70 6c 65 2e 6f 72 67 31 26 30 24 06 03 55 04 03 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0c 1d 45 78 61 6d 70 6c 65 20 43 65 72 74 69 66 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        69 63 61 74 65 20 41 75 74 68 6f 72 69 74 79 30 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        1e 17 0d 32 35 30 33 30 33 31 32 34 36 33 36 5a 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        17 0d 32 35 30 35 30 32 31 32 34 36 33 36 5a 30 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        7c 31 0b 30 09 06 03 55 04 06 13 02 46 52 31 0f 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        30 0d 06 03 55 04 08 0c 06 52 61 64 69 75 73 31 
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) send TLS 1.2 Handshake, Certificate
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) Handshake state [TWSC] - Server SSLv3/TLS write certificate (23)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 300 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0c 00 01 28 03 00 1d 20 ed 1f 61 46 32 84 2e 0c 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        b8 36 69 cd 84 af 96 cc 32 ac 6f 4a f0 4a 53 94 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        b2 54 09 fb ec 09 5e 37 08 04 01 00 00 a3 e2 92 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        cf 60 ba b7 20 17 e5 2b db 49 18 6b 90 19 04 5c 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        e3 8e 78 35 c5 d5 b9 8c 17 49 8b 3b 5f be e2 5c 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        8b 91 7c ca d6 1d 2a f1 ed fc dc bb a0 64 bd b8 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        7e 62 14 14 72 a1 28 5f 90 22 72 1a 9d 41 ce e6 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        1b 9e 9a 63 14 8b e6 bf 35 e8 1b 27 11 a8 ce b6 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        bc 5f ee a5 c9 e6 ad c9 6d 16 d1 6a 9d 15 3c a8 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        17 44 8e 57 fe a2 8e 16 f0 3f d1 1c e5 f8 e4 7b 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        96 60 78 38 5d b4 4e 22 99 f6 d0 d1 97 4d af f1 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        40 95 88 b5 ed 0d f0 f5 5e 10 e8 15 21 c5 9b 4e 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        ab 87 34 29 26 bd e8 cc f6 19 e4 be a8 55 83 54 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        2e 7e 26 d8 c6 0d 49 ba cf 8f c2 84 7d 74 bf 6a 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        5f c8 dc 6a dd f2 3c 7d a6 e6 15 12 51 a6 29 35 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        86 55 16 f8 02 77 2c 3e f2 8b 86 a8 bc 54 0a 7b 
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) Handshake state [TWSKE] - Server SSLv3/TLS write key exchange (24)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 204 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0d 00 00 c8 03 01 02 40 00 28 04 03 05 03 06 03 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        08 07 08 08 08 09 08 0a 08 0b 08 04 08 05 08 06 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        04 01 05 01 06 01 03 03 03 01 03 02 04 02 05 02 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        06 02 00 98 00 96 30 81 93 31 0b 30 09 06 03 55 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        04 06 13 02 46 52 31 0f 30 0d 06 03 55 04 08 0c 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        06 52 61 64 69 75 73 31 12 30 10 06 03 55 04 07 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0c 09 53 6f 6d 65 77 68 65 72 65 31 15 30 13 06 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        03 55 04 0a 0c 0c 45 78 61 6d 70 6c 65 20 49 6e 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        63 2e 31 20 30 1e 06 09 2a 86 48 86 f7 0d 01 09 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        01 16 11 61 64 6d 69 6e 40 65 78 61 6d 70 6c 65 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        2e 6f 72 67 31 26 30 24 06 03 55 04 03 0c 1d 45 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        78 61 6d 70 6c 65 20 43 65 72 74 69 66 69 63 61 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        74 65 20 41 75 74 68 6f 72 69 74 79 
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) send TLS 1.2 Handshake, CertificateRequest
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) Handshake state [TWCR] - Server SSLv3/TLS write certificate request (25)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 4 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0e 00 00 00 
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) send TLS 1.2 Handshake, ServerHelloDone
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) Handshake state [TWSD] - Server SSLv3/TLS write server done (26)
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) Server : Need to read more data: SSLv3/TLS write server done
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) In Handshake Phase
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: (TLS) got 2967 bytes of data
Mon Mar  3 15:14:59 2025 : Debug: (10) eap_tls: [eaptls process] = handled
Mon Mar  3 15:14:59 2025 : Debug: (10) eap: Sending EAP Request (code 1) ID 230 length 1004
Mon Mar  3 15:14:59 2025 : Debug: (10) eap: EAP session adding &reply:State = 0x1b8b24da1a6d29fc
Mon Mar  3 15:14:59 2025 : Debug: (10)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (10)     [eap] = handled
Mon Mar  3 15:14:59 2025 : Debug: (10)   } # authenticate = handled
Mon Mar  3 15:14:59 2025 : Debug: (10) Using Post-Auth-Type Challenge
Mon Mar  3 15:14:59 2025 : Debug: (10) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (10)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 15:14:59 2025 : Debug: (10) session-state: Saving cached attributes
Mon Mar  3 15:14:59 2025 : Debug: (10)   Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (10)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 15:14:59 2025 : Debug: (10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 15:14:59 2025 : Debug: (10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 15:14:59 2025 : Debug: (10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 15:14:59 2025 : Debug: (10) Sent Access-Challenge Id 8 from 192.168.58.2:1812 to 192.168.58.100:34715 length 1068
Mon Mar  3 15:14:59 2025 : Debug: (10)   EAP-Message = 0x01e603ec0dc000000b97160303003d020000390303c76349692079d5a0d73a00da1f6ed4a533464036ac98a648c65d1a6b5853151400c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3235303330333132343633365a170d3235303530323132343633365a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
Mon Mar  3 15:14:59 2025 : Debug: (10)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 15:14:59 2025 : Debug: (10)   State = 0x1b8b24da1a6d29fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (10) Finished request
Mon Mar  3 15:14:59 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 15:14:59 2025 : Debug: (11) Received Access-Request Id 9 from 192.168.58.100:34715 to 192.168.58.2:1812 length 186
Mon Mar  3 15:14:59 2025 : Debug: (11)   Message-Authenticator = 0xd77a7bd2fed51c4a7fc6ce495c547b6e
Mon Mar  3 15:14:59 2025 : Debug: (11)   User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (11)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 15:14:59 2025 : Debug: (11)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 15:14:59 2025 : Debug: (11)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 15:14:59 2025 : Debug: (11)   Service-Type = Framed-User
Mon Mar  3 15:14:59 2025 : Debug: (11)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 15:14:59 2025 : Debug: (11)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 15:14:59 2025 : Debug: (11)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 15:14:59 2025 : Debug: (11)   Framed-MTU = 1400
Mon Mar  3 15:14:59 2025 : Debug: (11)   EAP-Message = 0x02e600060d00
Mon Mar  3 15:14:59 2025 : Debug: (11)   State = 0x1b8b24da1a6d29fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (11) Restoring &session-state
Mon Mar  3 15:14:59 2025 : Debug: (11)   &session-state:Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (11)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 15:14:59 2025 : Debug: (11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 15:14:59 2025 : Debug: (11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 15:14:59 2025 : Debug: (11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 15:14:59 2025 : Debug: (11) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (11)   authorize {
Mon Mar  3 15:14:59 2025 : Debug: (11)     policy filter_username {
Mon Mar  3 15:14:59 2025 : Debug: (11)       if (&User-Name) {
Mon Mar  3 15:14:59 2025 : Debug: (11)       if (&User-Name)  -> TRUE
Mon Mar  3 15:14:59 2025 : Debug: (11)       if (&User-Name)  {
Mon Mar  3 15:14:59 2025 : Debug: (11)         if (&User-Name =~ / /) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (11)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (11)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (11)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (11)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (11)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 1 matches
Mon Mar  3 15:14:59 2025 : Debug: Clearing 1 old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 3 matches
Mon Mar  3 15:14:59 2025 : Debug: (11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (11)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 15:14:59 2025 : Debug: Clearing 3 old matches
Mon Mar  3 15:14:59 2025 : Debug: (11)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (11)         if (&User-Name =~ /@\./)  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (11)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (11)       } # if (&User-Name)  = notfound
Mon Mar  3 15:14:59 2025 : Debug: (11)     } # policy filter_username = notfound
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (11)     [preprocess] = ok
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (11)     [chap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (11)     [mschap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (11)     [digest] = noop
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (11) suffix: Checking for suffix after "@"
Mon Mar  3 15:14:59 2025 : Debug: (11) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (11) suffix: No such realm "example.org"
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (11)     [suffix] = noop
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (11) eap: Peer sent EAP Response (code 2) ID 230 length 6
Mon Mar  3 15:14:59 2025 : Debug: (11) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (11)     [eap] = updated
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (11)     [files] = noop
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (11)     [expiration] = noop
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (11)     [logintime] = noop
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (11)     [pap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (11)   } # authorize = updated
Mon Mar  3 15:14:59 2025 : Debug: (11) Found Auth-Type = eap
Mon Mar  3 15:14:59 2025 : Debug: (11) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (11)   authenticate {
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (11) eap: Expiring EAP session with state 0x1b8b24da1a6d29fc
Mon Mar  3 15:14:59 2025 : Debug: (11) eap: Finished EAP session with state 0x1b8b24da1a6d29fc
Mon Mar  3 15:14:59 2025 : Debug: (11) eap: Previous EAP request found for state 0x1b8b24da1a6d29fc, released from the list
Mon Mar  3 15:14:59 2025 : Debug: (11) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 15:14:59 2025 : Debug: (11) eap: Calling submodule eap_tls to process data
Mon Mar  3 15:14:59 2025 : Debug: (11) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 15:14:59 2025 : Debug: (11) eap_tls: (TLS) EAP Peer sent flags ---
Mon Mar  3 15:14:59 2025 : Debug: (11) eap_tls: (TLS) Peer ACKed our handshake fragment
Mon Mar  3 15:14:59 2025 : Debug: (11) eap_tls: (TLS) EAP Verification says request
Mon Mar  3 15:14:59 2025 : Debug: (11) eap_tls: [eaptls process] = handled
Mon Mar  3 15:14:59 2025 : Debug: (11) eap: Sending EAP Request (code 1) ID 231 length 1004
Mon Mar  3 15:14:59 2025 : Debug: (11) eap: EAP session adding &reply:State = 0x1b8b24da196c29fc
Mon Mar  3 15:14:59 2025 : Debug: (11)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (11)     [eap] = handled
Mon Mar  3 15:14:59 2025 : Debug: (11)   } # authenticate = handled
Mon Mar  3 15:14:59 2025 : Debug: (11) Using Post-Auth-Type Challenge
Mon Mar  3 15:14:59 2025 : Debug: (11) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (11)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 15:14:59 2025 : Debug: (11) session-state: Saving cached attributes
Mon Mar  3 15:14:59 2025 : Debug: (11)   Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (11)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 15:14:59 2025 : Debug: (11)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 15:14:59 2025 : Debug: (11)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (11)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (11)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 15:14:59 2025 : Debug: (11)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 15:14:59 2025 : Debug: (11) Sent Access-Challenge Id 9 from 192.168.58.2:1812 to 192.168.58.100:34715 length 1068
Mon Mar  3 15:14:59 2025 : Debug: (11)   EAP-Message = 0x01e703ec0dc000000b9777337cbd678b387f083537aa4e3a5fef0ce305c0ad8ea1084bf470721d412eef71aaf237dff3edc2d26f2d4a5ef462cff5f751ef8d71a79b73eef8e73dece669331befcc27287879737a7a75f6fc169b2212467b2d3a2bbae3d27b27b234574a9d67bccf31948a66767c45805ce125530eb3e9dec8453e491761d1c733777efcae5e82001db8d47c56dbc1894dc657a11159983d2fc1c409ea5c36ddda37d466d51258ad6fd907bddd0004fe308204fa308203e2a00302010202145f94ac48a74cbabc4bde9d6bbdf038e8194c70c1300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c65204365727469666963617465204175
Mon Mar  3 15:14:59 2025 : Debug: (11)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 15:14:59 2025 : Debug: (11)   State = 0x1b8b24da196c29fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (11) Finished request
Mon Mar  3 15:14:59 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 15:14:59 2025 : Debug: (12) Received Access-Request Id 10 from 192.168.58.100:34715 to 192.168.58.2:1812 length 186
Mon Mar  3 15:14:59 2025 : Debug: (12)   Message-Authenticator = 0x7df15d5f01ccfe5f88dede0fb92d6409
Mon Mar  3 15:14:59 2025 : Debug: (12)   User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (12)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 15:14:59 2025 : Debug: (12)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 15:14:59 2025 : Debug: (12)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 15:14:59 2025 : Debug: (12)   Service-Type = Framed-User
Mon Mar  3 15:14:59 2025 : Debug: (12)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 15:14:59 2025 : Debug: (12)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 15:14:59 2025 : Debug: (12)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 15:14:59 2025 : Debug: (12)   Framed-MTU = 1400
Mon Mar  3 15:14:59 2025 : Debug: (12)   EAP-Message = 0x02e700060d00
Mon Mar  3 15:14:59 2025 : Debug: (12)   State = 0x1b8b24da196c29fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (12) Restoring &session-state
Mon Mar  3 15:14:59 2025 : Debug: (12)   &session-state:Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (12)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 15:14:59 2025 : Debug: (12)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 15:14:59 2025 : Debug: (12)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (12)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (12)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 15:14:59 2025 : Debug: (12)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 15:14:59 2025 : Debug: (12) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (12)   authorize {
Mon Mar  3 15:14:59 2025 : Debug: (12)     policy filter_username {
Mon Mar  3 15:14:59 2025 : Debug: (12)       if (&User-Name) {
Mon Mar  3 15:14:59 2025 : Debug: (12)       if (&User-Name)  -> TRUE
Mon Mar  3 15:14:59 2025 : Debug: (12)       if (&User-Name)  {
Mon Mar  3 15:14:59 2025 : Debug: (12)         if (&User-Name =~ / /) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (12)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (12)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (12)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (12)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (12)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 1 matches
Mon Mar  3 15:14:59 2025 : Debug: Clearing 1 old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 3 matches
Mon Mar  3 15:14:59 2025 : Debug: (12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (12)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 15:14:59 2025 : Debug: Clearing 3 old matches
Mon Mar  3 15:14:59 2025 : Debug: (12)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (12)         if (&User-Name =~ /@\./)  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (12)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (12)       } # if (&User-Name)  = notfound
Mon Mar  3 15:14:59 2025 : Debug: (12)     } # policy filter_username = notfound
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (12)     [preprocess] = ok
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (12)     [chap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (12)     [mschap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (12)     [digest] = noop
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (12) suffix: Checking for suffix after "@"
Mon Mar  3 15:14:59 2025 : Debug: (12) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (12) suffix: No such realm "example.org"
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (12)     [suffix] = noop
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (12) eap: Peer sent EAP Response (code 2) ID 231 length 6
Mon Mar  3 15:14:59 2025 : Debug: (12) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (12)     [eap] = updated
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (12)     [files] = noop
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (12)     [expiration] = noop
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (12)     [logintime] = noop
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (12)     [pap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (12)   } # authorize = updated
Mon Mar  3 15:14:59 2025 : Debug: (12) Found Auth-Type = eap
Mon Mar  3 15:14:59 2025 : Debug: (12) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (12)   authenticate {
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (12) eap: Expiring EAP session with state 0x1b8b24da196c29fc
Mon Mar  3 15:14:59 2025 : Debug: (12) eap: Finished EAP session with state 0x1b8b24da196c29fc
Mon Mar  3 15:14:59 2025 : Debug: (12) eap: Previous EAP request found for state 0x1b8b24da196c29fc, released from the list
Mon Mar  3 15:14:59 2025 : Debug: (12) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 15:14:59 2025 : Debug: (12) eap: Calling submodule eap_tls to process data
Mon Mar  3 15:14:59 2025 : Debug: (12) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 15:14:59 2025 : Debug: (12) eap_tls: (TLS) EAP Peer sent flags ---
Mon Mar  3 15:14:59 2025 : Debug: (12) eap_tls: (TLS) Peer ACKed our handshake fragment
Mon Mar  3 15:14:59 2025 : Debug: (12) eap_tls: (TLS) EAP Verification says request
Mon Mar  3 15:14:59 2025 : Debug: (12) eap_tls: [eaptls process] = handled
Mon Mar  3 15:14:59 2025 : Debug: (12) eap: Sending EAP Request (code 1) ID 232 length 989
Mon Mar  3 15:14:59 2025 : Debug: (12) eap: EAP session adding &reply:State = 0x1b8b24da186329fc
Mon Mar  3 15:14:59 2025 : Debug: (12)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (12)     [eap] = handled
Mon Mar  3 15:14:59 2025 : Debug: (12)   } # authenticate = handled
Mon Mar  3 15:14:59 2025 : Debug: (12) Using Post-Auth-Type Challenge
Mon Mar  3 15:14:59 2025 : Debug: (12) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (12)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 15:14:59 2025 : Debug: (12) session-state: Saving cached attributes
Mon Mar  3 15:14:59 2025 : Debug: (12)   Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (12)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 15:14:59 2025 : Debug: (12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 15:14:59 2025 : Debug: (12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 15:14:59 2025 : Debug: (12)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 15:14:59 2025 : Debug: (12) Sent Access-Challenge Id 10 from 192.168.58.2:1812 to 192.168.58.100:34715 length 1053
Mon Mar  3 15:14:59 2025 : Debug: (12)   EAP-Message = 0x01e803dd0d8000000b9778616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982145f94ac48a74cbabc4bde9d6bbdf038e8194c70c1300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100240eebd478cae18e97bbd47019425fff55088f75e2c6876a8dcc342b4f172b0082cc1266546cf9392eaf79a1d72c07c84341225cb53ae618b3c76006e298e3e3703d43543e50c06664d97e4c5b9f2263f982ad3ef1ae6feea4096366db5bd6b3c7b9077ff242684329f9cb3d3e8a950961654dae9ae8369a156f6ea18a7b1cf688c3cb082df1fe25f331272fa0f410972b3058cdef518d5f7f2e27209126325bed5ea0e20d
Mon Mar  3 15:14:59 2025 : Debug: (12)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 15:14:59 2025 : Debug: (12)   State = 0x1b8b24da186329fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (12) Finished request
Mon Mar  3 15:14:59 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 15:14:59 2025 : Debug: (13) Received Access-Request Id 11 from 192.168.58.100:34715 to 192.168.58.2:1812 length 1598
Mon Mar  3 15:14:59 2025 : Debug: (13)   Message-Authenticator = 0x277a459539c17277c53a35989a61d511
Mon Mar  3 15:14:59 2025 : Debug: (13)   User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (13)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 15:14:59 2025 : Debug: (13)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 15:14:59 2025 : Debug: (13)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 15:14:59 2025 : Debug: (13)   Service-Type = Framed-User
Mon Mar  3 15:14:59 2025 : Debug: (13)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 15:14:59 2025 : Debug: (13)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 15:14:59 2025 : Debug: (13)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 15:14:59 2025 : Debug: (13)   Framed-MTU = 1400
Mon Mar  3 15:14:59 2025 : Debug: (13)   EAP-Message = 0x02e805800dc000000a8f16030309200b00091c00091900041530820411308202f9a003020102020102300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3235303330333132343633375a170d3235303530323132343633375a3071310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3119301706035504030c1075736572406578616d706c652e6f7267311f301d06092a864886f70d010901161075736572406578616d706c652e6f726730820122300d06092a864886f70d0101010500038201
Mon Mar  3 15:14:59 2025 : Debug: (13)   State = 0x1b8b24da186329fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (13) Restoring &session-state
Mon Mar  3 15:14:59 2025 : Debug: (13)   &session-state:Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (13)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 15:14:59 2025 : Debug: (13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 15:14:59 2025 : Debug: (13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 15:14:59 2025 : Debug: (13)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 15:14:59 2025 : Debug: (13) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (13)   authorize {
Mon Mar  3 15:14:59 2025 : Debug: (13)     policy filter_username {
Mon Mar  3 15:14:59 2025 : Debug: (13)       if (&User-Name) {
Mon Mar  3 15:14:59 2025 : Debug: (13)       if (&User-Name)  -> TRUE
Mon Mar  3 15:14:59 2025 : Debug: (13)       if (&User-Name)  {
Mon Mar  3 15:14:59 2025 : Debug: (13)         if (&User-Name =~ / /) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (13)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (13)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (13)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (13)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (13)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 1 matches
Mon Mar  3 15:14:59 2025 : Debug: Clearing 1 old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 3 matches
Mon Mar  3 15:14:59 2025 : Debug: (13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (13)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 15:14:59 2025 : Debug: Clearing 3 old matches
Mon Mar  3 15:14:59 2025 : Debug: (13)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (13)         if (&User-Name =~ /@\./)  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (13)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (13)       } # if (&User-Name)  = notfound
Mon Mar  3 15:14:59 2025 : Debug: (13)     } # policy filter_username = notfound
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (13)     [preprocess] = ok
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (13)     [chap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (13)     [mschap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (13)     [digest] = noop
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (13) suffix: Checking for suffix after "@"
Mon Mar  3 15:14:59 2025 : Debug: (13) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (13) suffix: No such realm "example.org"
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (13)     [suffix] = noop
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (13) eap: Peer sent EAP Response (code 2) ID 232 length 1408
Mon Mar  3 15:14:59 2025 : Debug: (13) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (13)     [eap] = updated
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (13)     [files] = noop
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (13)     [expiration] = noop
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (13)     [logintime] = noop
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (13)     [pap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (13)   } # authorize = updated
Mon Mar  3 15:14:59 2025 : Debug: (13) Found Auth-Type = eap
Mon Mar  3 15:14:59 2025 : Debug: (13) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (13)   authenticate {
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (13) eap: Expiring EAP session with state 0x1b8b24da186329fc
Mon Mar  3 15:14:59 2025 : Debug: (13) eap: Finished EAP session with state 0x1b8b24da186329fc
Mon Mar  3 15:14:59 2025 : Debug: (13) eap: Previous EAP request found for state 0x1b8b24da186329fc, released from the list
Mon Mar  3 15:14:59 2025 : Debug: (13) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 15:14:59 2025 : Debug: (13) eap: Calling submodule eap_tls to process data
Mon Mar  3 15:14:59 2025 : Debug: (13) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 15:14:59 2025 : Debug: (13) eap_tls: (TLS) EAP Peer sent flags -ML
Mon Mar  3 15:14:59 2025 : Debug: (13) eap_tls: (TLS) EAP Peer says that the final record size will be 2703 bytes
Mon Mar  3 15:14:59 2025 : Debug: (13) eap_tls: (TLS) EAP Expecting 2 fragments
Mon Mar  3 15:14:59 2025 : Debug: (13) eap_tls: (TLS) EAP Got first TLS fragment (1398 bytes).  Peer says more fragments will follow
Mon Mar  3 15:14:59 2025 : Debug: (13) eap_tls: (TLS) EAP Verification says first fragment
Mon Mar  3 15:14:59 2025 : Debug: (13) eap_tls: (TLS) EAP ACKing fragment, the peer should send more data.
Mon Mar  3 15:14:59 2025 : Debug: (13) eap_tls: [eaptls process] = handled
Mon Mar  3 15:14:59 2025 : Debug: (13) eap: Sending EAP Request (code 1) ID 233 length 6
Mon Mar  3 15:14:59 2025 : Debug: (13) eap: EAP session adding &reply:State = 0x1b8b24da1f6229fc
Mon Mar  3 15:14:59 2025 : Debug: (13)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (13)     [eap] = handled
Mon Mar  3 15:14:59 2025 : Debug: (13)   } # authenticate = handled
Mon Mar  3 15:14:59 2025 : Debug: (13) Using Post-Auth-Type Challenge
Mon Mar  3 15:14:59 2025 : Debug: (13) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (13)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 15:14:59 2025 : Debug: (13) session-state: Saving cached attributes
Mon Mar  3 15:14:59 2025 : Debug: (13)   Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (13)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 15:14:59 2025 : Debug: (13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 15:14:59 2025 : Debug: (13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 15:14:59 2025 : Debug: (13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 15:14:59 2025 : Debug: (13) Sent Access-Challenge Id 11 from 192.168.58.2:1812 to 192.168.58.100:34715 length 64
Mon Mar  3 15:14:59 2025 : Debug: (13)   EAP-Message = 0x01e900060d00
Mon Mar  3 15:14:59 2025 : Debug: (13)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 15:14:59 2025 : Debug: (13)   State = 0x1b8b24da1f6229fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (13) Finished request
Mon Mar  3 15:14:59 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 15:14:59 2025 : Debug: (14) Received Access-Request Id 12 from 192.168.58.100:34715 to 192.168.58.2:1812 length 1501
Mon Mar  3 15:14:59 2025 : Debug: (14)   Message-Authenticator = 0x5a931ee40408c8718d4b37e225d79409
Mon Mar  3 15:14:59 2025 : Debug: (14)   User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (14)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 15:14:59 2025 : Debug: (14)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 15:14:59 2025 : Debug: (14)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 15:14:59 2025 : Debug: (14)   Service-Type = Framed-User
Mon Mar  3 15:14:59 2025 : Debug: (14)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 15:14:59 2025 : Debug: (14)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 15:14:59 2025 : Debug: (14)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 15:14:59 2025 : Debug: (14)   Framed-MTU = 1400
Mon Mar  3 15:14:59 2025 : Debug: (14)   EAP-Message = 0x02e9051f0d00706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747930820122300d06092a864886f70d01010105000382010f003082010a0282010100b22c849c5c3293029ab62739544eb38827f305d4935b2932c1d56e0f486751406caf648ce12891e867b2599b051d02c4165ac314bb3a8d2b8a4786e829780f20b935ce792b43bdbeac45759f352ba7c1a2bf9c8e33d4701004c189f80dc1257e432fcb879df7f2cff3bab5d847d4ba791155c09f873a748e9f3f887a47070f4a418623aba05700732c6fe8898a4dc714cc00665c2724e1f0a68464edaa098901a85e07adff4b43d70399cd84ff4f3fc9e31f3abf8b027b29426956bae4afe0b1fa7f6392c3705ad56d9944f6f8c71923b1896476394b21ec629b1ee8edb1790b9f19cc8e1a5a73032a8ffb766da7d7aa3589c2294b8d5961233f397745e0577f0203010001a38201423082013e301d0603551d0e041604146b1605742c90aee1f8
Mon Mar  3 15:14:59 2025 : Debug: (14)   State = 0x1b8b24da1f6229fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (14) Restoring &session-state
Mon Mar  3 15:14:59 2025 : Debug: (14)   &session-state:Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (14)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 15:14:59 2025 : Debug: (14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 15:14:59 2025 : Debug: (14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 15:14:59 2025 : Debug: (14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 15:14:59 2025 : Debug: (14) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (14)   authorize {
Mon Mar  3 15:14:59 2025 : Debug: (14)     policy filter_username {
Mon Mar  3 15:14:59 2025 : Debug: (14)       if (&User-Name) {
Mon Mar  3 15:14:59 2025 : Debug: (14)       if (&User-Name)  -> TRUE
Mon Mar  3 15:14:59 2025 : Debug: (14)       if (&User-Name)  {
Mon Mar  3 15:14:59 2025 : Debug: (14)         if (&User-Name =~ / /) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (14)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (14)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (14)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (14)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (14)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (14)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 1 matches
Mon Mar  3 15:14:59 2025 : Debug: Clearing 1 old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 3 matches
Mon Mar  3 15:14:59 2025 : Debug: (14)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (14)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 15:14:59 2025 : Debug: Clearing 3 old matches
Mon Mar  3 15:14:59 2025 : Debug: (14)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (14)         if (&User-Name =~ /@\./)  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (14)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (14)       } # if (&User-Name)  = notfound
Mon Mar  3 15:14:59 2025 : Debug: (14)     } # policy filter_username = notfound
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (14)     [preprocess] = ok
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (14)     [chap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (14)     [mschap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (14)     [digest] = noop
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (14) suffix: Checking for suffix after "@"
Mon Mar  3 15:14:59 2025 : Debug: (14) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (14) suffix: No such realm "example.org"
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (14)     [suffix] = noop
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (14) eap: Peer sent EAP Response (code 2) ID 233 length 1311
Mon Mar  3 15:14:59 2025 : Debug: (14) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (14)     [eap] = updated
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (14)     [files] = noop
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (14)     [expiration] = noop
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (14)     [logintime] = noop
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (14)     [pap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (14)   } # authorize = updated
Mon Mar  3 15:14:59 2025 : Debug: (14) Found Auth-Type = eap
Mon Mar  3 15:14:59 2025 : Debug: (14) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (14)   authenticate {
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (14) eap: Expiring EAP session with state 0x1b8b24da1f6229fc
Mon Mar  3 15:14:59 2025 : Debug: (14) eap: Finished EAP session with state 0x1b8b24da1f6229fc
Mon Mar  3 15:14:59 2025 : Debug: (14) eap: Previous EAP request found for state 0x1b8b24da1f6229fc, released from the list
Mon Mar  3 15:14:59 2025 : Debug: (14) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 15:14:59 2025 : Debug: (14) eap: Calling submodule eap_tls to process data
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) EAP Peer sent flags ---
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) EAP Got final fragment (1305 bytes)
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) EAP Verification says ok
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) EAP Done initial handshake
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Handshake state [TWSD] - Server SSLv3/TLS write server done (26)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 2336 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0b 00 09 1c 00 09 19 00 04 15 30 82 04 11 30 82 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        02 f9 a0 03 02 01 02 02 01 02 30 0d 06 09 2a 86 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        48 86 f7 0d 01 01 0b 05 00 30 81 93 31 0b 30 09 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        06 03 55 04 06 13 02 46 52 31 0f 30 0d 06 03 55 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        04 08 0c 06 52 61 64 69 75 73 31 12 30 10 06 03 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        55 04 07 0c 09 53 6f 6d 65 77 68 65 72 65 31 15 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        30 13 06 03 55 04 0a 0c 0c 45 78 61 6d 70 6c 65 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        20 49 6e 63 2e 31 20 30 1e 06 09 2a 86 48 86 f7 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0d 01 09 01 16 11 61 64 6d 69 6e 40 65 78 61 6d 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        70 6c 65 2e 6f 72 67 31 26 30 24 06 03 55 04 03 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0c 1d 45 78 61 6d 70 6c 65 20 43 65 72 74 69 66 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        69 63 61 74 65 20 41 75 74 68 6f 72 69 74 79 30 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        1e 17 0d 32 35 30 33 30 33 31 32 34 36 33 37 5a 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        17 0d 32 35 30 35 30 32 31 32 34 36 33 37 5a 30 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        71 31 0b 30 09 06 03 55 04 06 13 02 46 52 31 0f 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        30 0d 06 03 55 04 08 0c 06 52 61 64 69 75 73 31 
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) recv TLS 1.2 Handshake, Certificate
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Creating attributes from server certificate
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Cert-Serial := "5f94ac48a74cbabc4bde9d6bbdf038e8194c70c1"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Cert-Expiration := "250502124636Z"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Cert-Valid-Since := "250303124636Z"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Cert-Subject := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Cert-Issuer := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Cert-Common-Name := "Example Certificate Authority"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) chain-depth   : 1
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) error         : 0
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: identity      : user@example.org
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) common name   : Example Certificate Authority
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) subject       : /C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) issuer        : /C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) verify return : 1
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Creating attributes from client certificate
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Client-Cert-Serial := "02"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Client-Cert-Expiration := "250502124637Z"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Client-Cert-Valid-Since := "250303124637Z"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Client-Cert-Subject := "/C=FR/ST=Radius/O=Example Inc./CN=user@example.org/emailAddress=user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Client-Cert-Issuer := "/C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Client-Cert-Common-Name := "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Client-Cert-X509v3-Extended-Key-Usage += "TLS Web Client Authentication"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   Skipping TLS-Client-Cert-X509v3-CRL-Distribution-Points += 'Full Name:   URI:http://www.example.com/example_ca.crl'.  Please check that both the attribute and value are defined in the dictionaries
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Client-Cert-X509v3-Subject-Key-Identifier += "D2:ED:4E:FC:B1:51:0F:0A:04:BA:57:34:40:54:98:35:3B:9C:C5:91"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Client-Cert-X509v3-Authority-Key-Identifier += "6B:16:05:74:2C:90:AE:E1:F8:68:7B:49:7E:66:D1:CE:96:D7:11:35"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Client-Cert-X509v3-Extended-Key-Usage-OID += "1.3.6.1.5.5.7.3.2"
Mon Mar  3 15:14:59 2025 : Warning: Certificate chain - 1 cert(s) untrusted
Mon Mar  3 15:14:59 2025 : Warning: (TLS) untrusted certificate with depth [1] subject name /C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority
Mon Mar  3 15:14:59 2025 : Warning: (TLS) untrusted certificate with depth [0] subject name /C=FR/ST=Radius/O=Example Inc./CN=user@example.org/emailAddress=user@example.org
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) chain-depth   : 0
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) error         : 0
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: identity      : user@example.org
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) common name   : user@example.org
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) subject       : /C=FR/ST=Radius/O=Example Inc./CN=user@example.org/emailAddress=user@example.org
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) issuer        : /C=FR/ST=Radius/L=Somewhere/O=Example Inc./emailAddress=admin@example.org/CN=Example Certificate Authority
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) verify return : 1
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Handshake state [TRCC] - Server SSLv3/TLS read client certificate (27)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 37 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        10 00 00 21 20 c0 7a 4e 4e 54 10 4c be f3 f7 ac 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        93 1a e3 e9 63 53 34 1c 6f 3b d8 78 74 46 08 f1 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        6d 89 be ad 2c 
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Handshake state [TRCKE] - Server SSLv3/TLS read client key exchange (28)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 264 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0f 00 01 04 08 04 01 00 be cb 99 03 c2 96 01 e3 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        c9 18 8b f0 5d 31 fc 01 26 7c 79 94 38 8d 31 e5 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        fe 0f 67 11 25 75 58 a3 d8 15 a7 e4 82 ac 66 a9 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        cd c9 dd 6b 94 43 6e cf 7b 7e d7 f6 fe ca 03 02 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        ac 05 17 2b ab 1f 3d 43 e8 99 1d 07 29 6a 6f e8 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        0b d0 e8 8a 68 8e 83 d2 a0 4a a1 64 a4 63 3b 12 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        5d da 17 f5 e3 c2 b2 d5 06 3c 2b 6e f7 0a 73 8b 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        8b 2d b4 3c 71 b9 ef 50 bf db 5e 7f 32 40 b6 b3 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        fc 83 61 fd 33 ba 51 76 78 de 6a ee cd 01 c6 c8 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        26 a2 34 97 b3 d7 d9 3a 17 f4 e0 ba a7 87 02 ab 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        97 dd c2 40 94 79 94 7a 4e 2a 31 4d 22 d1 6f 56 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        ab 0e b3 3b 4f 98 40 8d 5b a8 d4 22 33 ab 16 13 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        5e 33 08 07 14 30 fd 39 61 cd d1 d6 1e f9 10 32 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        9b a2 9c cf ca d1 fd 71 a8 79 d6 09 9a 13 6c 7e 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        af f8 7e 20 8b 6a 67 63 56 ab c1 be fc 8d 37 d0 
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        40 03 5f 2a a2 5c c7 71 c9 ad 5c e8 72 cc db 40 
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) recv TLS 1.2 Handshake, CertificateVerify
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Handshake state [TRCV] - Server SSLv3/TLS read certificate verify (29)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Handshake state [TRCCS] - Server SSLv3/TLS read change cipher spec (31)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 16 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        14 00 00 0c 88 3b b1 3a c6 39 8e c5 22 c6 4b 91 
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) recv TLS 1.2 Handshake, Finished
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Handshake state [TRFIN] - Server SSLv3/TLS read finished (32)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 1 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        01 
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) send TLS 1.2 ChangeCipherSpec
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Handshake state [TWCCS] - Server SSLv3/TLS write change cipher spec (35)
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Ignoring cbtls_msg call with pseudo content type 256, version 771
Mon Mar  3 15:14:59 2025 : Debug: (TLS) Received 16 bytes of TLS data
Mon Mar  3 15:14:59 2025 : Debug: (TLS)        14 00 00 0c e6 dd 84 07 89 ed 1f 7b 7a 3e 88 37 
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) send TLS 1.2 Handshake, Finished
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Handshake state [TWFIN] - Server SSLv3/TLS write finished (36)
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Handshake state [SSLOK] - SSL negotiation finished successfully (1)
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) Connection Established
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls:   TLS-Session-Version = "TLS 1.2"
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: (TLS) got 51 bytes of data
Mon Mar  3 15:14:59 2025 : Debug: (14) eap_tls: [eaptls process] = handled
Mon Mar  3 15:14:59 2025 : Debug: (14) eap: Sending EAP Request (code 1) ID 234 length 61
Mon Mar  3 15:14:59 2025 : Debug: (14) eap: EAP session adding &reply:State = 0x1b8b24da1e6129fc
Mon Mar  3 15:14:59 2025 : Debug: (14)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (14)     [eap] = handled
Mon Mar  3 15:14:59 2025 : Debug: (14)   } # authenticate = handled
Mon Mar  3 15:14:59 2025 : Debug: (14) Using Post-Auth-Type Challenge
Mon Mar  3 15:14:59 2025 : Debug: (14) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (14)   Challenge { ... } # empty sub-section is ignored
Mon Mar  3 15:14:59 2025 : Debug: (14) session-state: Saving cached attributes
Mon Mar  3 15:14:59 2025 : Debug: (14)   Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, CertificateVerify"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
Mon Mar  3 15:14:59 2025 : Debug: (14)   TLS-Session-Version = "TLS 1.2"
Mon Mar  3 15:14:59 2025 : Debug: (14) Sent Access-Challenge Id 12 from 192.168.58.2:1812 to 192.168.58.100:34715 length 119
Mon Mar  3 15:14:59 2025 : Debug: (14)   EAP-Message = 0x01ea003d0d800000003314030300010116030300282a8ecd80dfcca0dbcbd5ba283ec308ce3d56538406510110f15986ebe43201450ee4f73a4946e4d8
Mon Mar  3 15:14:59 2025 : Debug: (14)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 15:14:59 2025 : Debug: (14)   State = 0x1b8b24da1e6129fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (14) Finished request
Mon Mar  3 15:14:59 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 15:14:59 2025 : Debug: (15) Received Access-Request Id 13 from 192.168.58.100:34715 to 192.168.58.2:1812 length 186
Mon Mar  3 15:14:59 2025 : Debug: (15)   Message-Authenticator = 0x4fa19f8d65f71371d99eaae0600860cb
Mon Mar  3 15:14:59 2025 : Debug: (15)   User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (15)   NAS-IP-Address = 192.168.58.100
Mon Mar  3 15:14:59 2025 : Debug: (15)   Called-Station-Id = "08-00-27-CF-14-FC:"
Mon Mar  3 15:14:59 2025 : Debug: (15)   NAS-Port-Type = Wireless-802.11
Mon Mar  3 15:14:59 2025 : Debug: (15)   Service-Type = Framed-User
Mon Mar  3 15:14:59 2025 : Debug: (15)   Calling-Station-Id = "08-00-27-3B-09-F5"
Mon Mar  3 15:14:59 2025 : Debug: (15)   Connect-Info = "CONNECT 0Mbps 802.11b"
Mon Mar  3 15:14:59 2025 : Debug: (15)   Acct-Session-Id = "3E69E75A920A2861"
Mon Mar  3 15:14:59 2025 : Debug: (15)   Framed-MTU = 1400
Mon Mar  3 15:14:59 2025 : Debug: (15)   EAP-Message = 0x02ea00060d00
Mon Mar  3 15:14:59 2025 : Debug: (15)   State = 0x1b8b24da1e6129fc407292bb3210fdf5
Mon Mar  3 15:14:59 2025 : Debug: (15) Restoring &session-state
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:Framed-MTU = 994
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, CertificateRequest"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Certificate"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, CertificateVerify"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
Mon Mar  3 15:14:59 2025 : Debug: (15)   &session-state:TLS-Session-Version = "TLS 1.2"
Mon Mar  3 15:14:59 2025 : Debug: (15) # Executing section authorize from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (15)   authorize {
Mon Mar  3 15:14:59 2025 : Debug: (15)     policy filter_username {
Mon Mar  3 15:14:59 2025 : Debug: (15)       if (&User-Name) {
Mon Mar  3 15:14:59 2025 : Debug: (15)       if (&User-Name)  -> TRUE
Mon Mar  3 15:14:59 2025 : Debug: (15)       if (&User-Name)  {
Mon Mar  3 15:14:59 2025 : Debug: (15)         if (&User-Name =~ / /) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (15)         if (&User-Name =~ / /)  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (15)         if (&User-Name =~ /@[^@]*@/ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (15)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (15)         if (&User-Name =~ /\.\./ ) {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (15)         if (&User-Name =~ /\.\./ )  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (15)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 1 matches
Mon Mar  3 15:14:59 2025 : Debug: Clearing 1 old matches
Mon Mar  3 15:14:59 2025 : Debug: Adding 3 matches
Mon Mar  3 15:14:59 2025 : Debug: (15)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (15)         if (&User-Name =~ /\.$/)  {
Mon Mar  3 15:14:59 2025 : Debug: Clearing 3 old matches
Mon Mar  3 15:14:59 2025 : Debug: (15)         if (&User-Name =~ /\.$/)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (15)         if (&User-Name =~ /@\./)  {
Mon Mar  3 15:14:59 2025 : Debug: No old matches
Mon Mar  3 15:14:59 2025 : Debug: (15)         if (&User-Name =~ /@\./)   -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (15)       } # if (&User-Name)  = notfound
Mon Mar  3 15:14:59 2025 : Debug: (15)     } # policy filter_username = notfound
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: calling preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: returned from preprocess (rlm_preprocess)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [preprocess] = ok
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: calling chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: returned from chap (rlm_chap)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [chap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: calling mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: returned from mschap (rlm_mschap)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [mschap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: calling digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: returned from digest (rlm_digest)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [digest] = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: calling suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (15) suffix: Checking for suffix after "@"
Mon Mar  3 15:14:59 2025 : Debug: (15) suffix: Looking up realm "example.org" for User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (15) suffix: No such realm "example.org"
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: returned from suffix (rlm_realm)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [suffix] = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (15) eap: Peer sent EAP Response (code 2) ID 234 length 6
Mon Mar  3 15:14:59 2025 : Debug: (15) eap: No EAP Start, assuming it's an on-going EAP conversation
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [eap] = updated
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: calling files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: returned from files (rlm_files)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [files] = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: calling expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: returned from expiration (rlm_expiration)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [expiration] = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: calling logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: returned from logintime (rlm_logintime)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [logintime] = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: calling pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authorize]: returned from pap (rlm_pap)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [pap] = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)   } # authorize = updated
Mon Mar  3 15:14:59 2025 : Debug: (15) Found Auth-Type = eap
Mon Mar  3 15:14:59 2025 : Debug: (15) # Executing group from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (15)   authenticate {
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authenticate]: calling eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (15) eap: Expiring EAP session with state 0x1b8b24da1e6129fc
Mon Mar  3 15:14:59 2025 : Debug: (15) eap: Finished EAP session with state 0x1b8b24da1e6129fc
Mon Mar  3 15:14:59 2025 : Debug: (15) eap: Previous EAP request found for state 0x1b8b24da1e6129fc, released from the list
Mon Mar  3 15:14:59 2025 : Debug: (15) eap: Peer sent packet with method EAP TLS (13)
Mon Mar  3 15:14:59 2025 : Debug: (15) eap: Calling submodule eap_tls to process data
Mon Mar  3 15:14:59 2025 : Debug: (15) eap_tls: (TLS) EAP Continuing ...
Mon Mar  3 15:14:59 2025 : Debug: (15) eap_tls: (TLS) EAP Peer sent flags ---
Mon Mar  3 15:14:59 2025 : Debug: (15) eap_tls: (TLS) Peer ACKed our handshake fragment.  handshake is finished
Mon Mar  3 15:14:59 2025 : Debug: (15) eap_tls: (TLS) EAP Verification says success
Mon Mar  3 15:14:59 2025 : Debug: (15) eap_tls: [eaptls process] = success
Mon Mar  3 15:14:59 2025 : Debug: (15) eap: Sending EAP Success (code 3) ID 234 length 4
Mon Mar  3 15:14:59 2025 : Debug: (15) eap: Freeing handler
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[authenticate]: returned from eap (rlm_eap)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [eap] = ok
Mon Mar  3 15:14:59 2025 : Debug: (15)   } # authenticate = ok
Mon Mar  3 15:14:59 2025 : Debug: (15) # Executing section post-auth from file /etc/freeradius/3.0/sites-enabled/default
Mon Mar  3 15:14:59 2025 : Debug: (15)   post-auth {
Mon Mar  3 15:14:59 2025 : Debug: (15)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
Mon Mar  3 15:14:59 2025 : Debug: (15)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (15)     update {
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, CertificateRequest'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Certificate'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, CertificateVerify'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
Mon Mar  3 15:14:59 2025 : Debug: (15)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
Mon Mar  3 15:14:59 2025 : Debug: (15)     } # update = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[post-auth]: calling exec (rlm_exec)
Mon Mar  3 15:14:59 2025 : Debug: (15)     modsingle[post-auth]: returned from exec (rlm_exec)
Mon Mar  3 15:14:59 2025 : Debug: (15)     [exec] = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)     policy remove_reply_message_if_eap {
Mon Mar  3 15:14:59 2025 : Debug: (15)       if (&reply:EAP-Message && &reply:Reply-Message) {
Mon Mar  3 15:14:59 2025 : Debug: (15)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (15)       else {
Mon Mar  3 15:14:59 2025 : Debug: (15)         modsingle[post-auth]: calling noop (rlm_always)
Mon Mar  3 15:14:59 2025 : Debug: (15)         modsingle[post-auth]: returned from noop (rlm_always)
Mon Mar  3 15:14:59 2025 : Debug: (15)         [noop] = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)       } # else = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)     } # policy remove_reply_message_if_eap = noop
Mon Mar  3 15:14:59 2025 : Debug: (15)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
Mon Mar  3 15:14:59 2025 : Debug: (15)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
Mon Mar  3 15:14:59 2025 : Debug: (15)   } # post-auth = noop
Mon Mar  3 15:14:59 2025 : Debug: (15) Sent Access-Accept Id 13 from 192.168.58.2:1812 to 192.168.58.100:34715 length 184
Mon Mar  3 15:14:59 2025 : Debug: (15)   MS-MPPE-Recv-Key = 0x9bd0a2b6ed8a8f50bce3292c7789156320fd5fc8e438453acaa8ab764bf57ecc
Mon Mar  3 15:14:59 2025 : Debug: (15)   MS-MPPE-Send-Key = 0xf619371774069ff14b9470a9525935d70ece7005cd6a009d17a1b6f449b4bc15
Mon Mar  3 15:14:59 2025 : Debug: (15)   EAP-Message = 0x03ea0004
Mon Mar  3 15:14:59 2025 : Debug: (15)   Message-Authenticator = 0x00000000000000000000000000000000
Mon Mar  3 15:14:59 2025 : Debug: (15)   User-Name = "user@example.org"
Mon Mar  3 15:14:59 2025 : Debug: (15)   Framed-MTU += 994
Mon Mar  3 15:14:59 2025 : Debug: (15) Finished request
Mon Mar  3 15:14:59 2025 : Debug: Waking up in 4.9 seconds.
Mon Mar  3 15:15:04 2025 : Debug: (9) Cleaning up request packet ID 7 with timestamp +8902 due to cleanup_delay was reached
Mon Mar  3 15:15:04 2025 : Debug: (10) Cleaning up request packet ID 8 with timestamp +8902 due to cleanup_delay was reached
Mon Mar  3 15:15:04 2025 : Debug: (11) Cleaning up request packet ID 9 with timestamp +8902 due to cleanup_delay was reached
Mon Mar  3 15:15:04 2025 : Debug: (12) Cleaning up request packet ID 10 with timestamp +8902 due to cleanup_delay was reached
Mon Mar  3 15:15:04 2025 : Debug: (13) Cleaning up request packet ID 11 with timestamp +8902 due to cleanup_delay was reached
Mon Mar  3 15:15:04 2025 : Debug: (14) Cleaning up request packet ID 12 with timestamp +8902 due to cleanup_delay was reached
Mon Mar  3 15:15:04 2025 : Debug: (15) Cleaning up request packet ID 13 with timestamp +8902 due to cleanup_delay was reached
Mon Mar  3 15:15:04 2025 : Info: Ready to process requests
