#### CORE INSTALL ####

$core_install = <<-'SCRIPT'

sudo add-apt-repository ppa:open5gs/latest
sudo apt-get install -y gnupg curl
sudo snap install yq

echo -e "\nAdding MongoDB repos"
curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg --dearmor

echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/8.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list

echo -e "\nAdding Node repos"
curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg

NODE_MAJOR=20
echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list

sudo apt-get update

echo -e "\nInstalling MongoDB, Nginx and Open5GS"
sudo apt-get install -y mongodb-org open5gs nodejs nginx

echo -e "\nReload MongoDB"
sudo systemctl start mongod
sudo systemctl enable mongod

echo -e "\nUpdate AMF NGAP and UPF GTPU IPs"
cat /etc/open5gs/amf.yaml | yq '.amf.ngap.server[0].address = "CORE_IP"' | sudo tee /etc/open5gs/amf.yaml
cat /etc/open5gs/upf.yaml | yq '.upf.gtpu.server[0].address = "CORE_IP"' | sudo tee /etc/open5gs/upf.yaml

sudo systemctl restart open5gs-amfd
sudo systemctl restart open5gs-upfd

echo -e "\nInstalling WebUI"
curl -fsSL https://open5gs.org/open5gs/assets/webui/install | sudo -E bash -

echo -e "\nExposing WebUI through a reverse proxy"
echo "server {
    listen 8080;

    location / {
        proxy_pass http://127.0.0.1:9999;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
    }
}" | sudo tee /etc/nginx/sites-available/webui

sudo ln -s /etc/nginx/sites-available/webui /etc/nginx/sites-enabled/
sudo systemctl restart nginx

echo -e "\nPre-loading UE in the AMF"
sudo chmod +x open5gs-dbctl
./open5gs-dbctl add "UE_IMSI" "UE_KEY" "UE_OPC"

echo -e "\nPre-loading UE APN sessions"
UL=$(("PDU_SESSIONS"-1))
for ((i=1;i<=$UL;i++)); do
  ./open5gs-dbctl update_apn "UE_IMSI" internet$i 0
done

SCRIPT
$core_install.gsub!("CORE_IP", CORE_IP).gsub!("UE_IMSI", UE_IMSI).gsub!("UE_KEY", UE_KEY).gsub!("UE_OPC", UE_OPC).gsub!("PDU_SESSIONS", PDU_SESSIONS)

#### CORE INSTALL ####

#### UERANSIM INSTALL ####

$ueransim_install = <<-'SCRIPT'

sudo apt update

sudo apt install -y make git gcc g++ libsctp-dev lksctp-tools iproute2
sudo snap install cmake --classic
sudo snap install yq

echo -e "\nInstalling UERANSIM"
cd ~
git clone https://github.com/aligungr/UERANSIM
cd ~/UERANSIM
make

SCRIPT

#### UERANSIM INSTALL ####

#### gNodeB CONFIG ####

$gnb_install = <<-'SCRIPT'
cd ~/UERANSIM

echo -e "\nUpdate gNodeB and Core IPs"
cat config/open5gs-gnb.yaml \
| yq '.linkIp = "GNB_IP"' \
| yq '.ngapIp = "GNB_IP"' \
| yq '.ngapIp = "GNB_IP"' \
| yq '.gtpIp = "GNB_IP"' \
| yq '.amfConfigs[0].address = "CORE_IP"' \
| sudo tee config/open5gs-gnb.yaml

echo -e "\nRunning gNB"
build/nr-gnb -c config/open5gs-gnb.yaml &> /log/gnb_$(date +%s).log &

SCRIPT
$gnb_install.gsub!("CORE_IP", CORE_IP).gsub!("GNB_IP", GNB_IP).gsub!("PDU_SESSIONS", PDU_SESSIONS)

#### gNodeB CONFIG ####

#### UE CONFIG ####

$ue_install = <<-'SCRIPT'
cd ~/UERANSIM

echo -e "\nUpdate gNodeB IP"
cat config/open5gs-ue.yaml | yq '.gnbSearchList[0] = "GNB_IP"' | sudo tee config/open5gs-ue.yaml

echo -e "\nEnabling multiple PDU via different APNs in a single Slice"
UL=$(("PDU_SESSIONS"-1))
for ((i=1;i<=$UL;i++)); do
  cat config/open5gs-ue.yaml \
  | yq '.sessions['$i'].type = "IPv4"' \
  | yq '.sessions['$i'].type style="single"' \
  | yq '.sessions['$i'].apn = "internet'$i'"' \
  | yq '.sessions['$i'].apn style="single"' \
  | yq '.sessions['$i'].slice.sst = 1' \
  | sudo tee config/open5gs-ue.yaml
done

echo -e "\nRunning UE"
build/nr-ue -c config/open5gs-ue.yaml &> /log/ue_$(date +%s).log &

SCRIPT
$ue_install.gsub!("GNB_IP", GNB_IP).gsub!("PDU_SESSIONS", PDU_SESSIONS)

#### UE CONFIG ####